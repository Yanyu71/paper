第一章绪论
1.1项目研究背景及意义
在当今这个无线技术飞速发展的年代，越来越多的技术需求和应用占据着不 可再生的频谱资源。一方面，可用于授权分配的资源越来越少，频谱使用情况越 来越紧张；另一方面，现有的已分配和授权的频谱资源并没有很好的被利用，授 权用户并非时刻在占用频谱进行通信，研究表明，不同地区的已授权频段的频谱 利用率仅为15~80%不等，而按照规定即使授权用户未在自己的频段进行通信工 作，也不允许其他用户使用这段频率进行通信，这就造成了资源的极大浪费。为 了缓解频谱资源的紧张情况，克服固定的分配模式所造成的频谱浪费，学者们逐 渐开始研究在不影响合法用户的正常通信情况下允许其他用户暂时借用空闲的 频谱的认知无线电技术。
认知无线电技术(Cognitive Radio)是一种智能的、具有自我认知能力的通 信技术⑴，通过感知空中各个频率段范围的信号能量来判断频谱的使用情况，分 析并利用频谱的空闲/忙碌规律为非授权用户的临时通信提供服务和支持。频谱 感知能量检测技术是公认的认知无线电的关键技术【2】，它可以感知并探测到整个 频域范围内的带宽使用情况，分析当地各个频率段的通信环境和使用规律，为认 知无线电的智能决策提供强有力的支持。频谱感知技术同需要复杂的硬件系统和 软件系统提供支持，需要高带宽、低噪声、高吞吐率的射频前端，高性能、强处 理能力的硬件平台以及支持灵活配置、适用各种场景需求的软件无线电架构。
软件无线电(Software Defined Radio, SDR)是一种基于软件定义的可灵活 更改应用场景和配置参数的通用无线通信技术实现平台⑷，它无需更改任何硬件 设备而只需要更换/下载一套通信协议软件或配置就可以实现不同应用场景的通 信系统，软件无线电的目标是方便地为不同场景的应用提供技术支持，它非常适 合作为认知无线电系统的实现技术。而FPGA作为一种越来越成熟的技术，加上 其强大的信号处理能力、丰富的片内逻辑资源和灵活的可重构特性，已逐渐成为 软件无线电技术实现的一种主要技术手段。
1.2课题研究现状及趋势
1.2.1认知无线电与发展
认知无线电(Cognitive Radio)技术⑹起源于Joseph Mitola博士在1999年的 研究成果，其核心思想是通过与周围环境的交互，感知周围频谱资源的使用、占 用情况和分析并学习频谱的使用规律，以感知和利用在该地区频谱上的可用频率 资源，同时保证避免和降低频谱资源使用冲突和干扰的发生。认知无线电可以利 用过去对盲区、频谱干扰和频谱使用模式等多种情况的了解，吸取历史的经验和 规律来对实际的情况进行实时的响应、及时作出调整和部署。目前已经有诸多学 者对CR相关的技术展开了一系列研究，最常见和具有典型代表的一类莫过于围 绕最初Mitola博士所研究的成果而提出来的基于模式挖掘、推理和机器学习的 认知循环模型，且业界学者普遍认为SDR是CR实现的理想平台与技术。
美国FCC提出的简化版的CR【6】认为，任何具有自我感知和适应的频谱意识能 力的无线电平台都被称为是Cognitive Radio = CR是一种新型的无线电，它可以通 过动态地改变射频前端的参数来实现与周围环境的交互，能够在较宽的频域范围 内准确地感知周围频谱环境的使用情况，探测授权合法用户信号的通信规律，动 态、自适应地利用本地空闲的频谱，同时不给主用户（授权用户）的通信带来干 扰。由于空中频谱环境的频率信道占用和干扰信号都是随时间变化的，这就需要 CR具有自我认知和学习的能力，实时地根据周围环境的变化作相应的调整，而 频谱感知技术，作为认知无线电的核心技术，提供了对这种需求的技术支持。
1.2.2频谱感知技术发展
认知无线电的关键技术有三个，分别为频谱感知技术、动态频率选择技术和 功率控制技术卩】，其中频谱感知是认知无线电的核心技术，次级用户通过频谱感 知的方法可以有效检测岀空中环境的频谱空洞，从而进行空闲频谱的重新利用， 提高频谱资源的利用率。
认知无线电体系中共有授权用户和非授权用户即认知用户两种用户，授权用 户信号发射端在授权的频段内与接收端进行通信时，次级非授权用户是不可以利 用这个频段进行通信的，否则会发生干扰影响彼此的通信。为了避免系统间的这 种干扰，不中断授权用户的通信，次级用户需要在较宽的频域范围内进行频谱感 知来检测哪些授权用户的授权频段是空闲的，这就是频谱感知。常用的频谱感知 技术包括能量检测、匹配滤波检测和静态循环特征检测等回。其中，能量感知［1°】 技术根据感知周围频谱的能量来判断该信道上是否有授权用户进行通信，由于它 不需要事先知道任何关于频谱授权的先验信息，可实现较宽频段范围内的感知和 认知，因而应用十分广泛。
能量检测是频谱感知【町的一种信号检测方法，通过符合奈圭斯特釆样定律的 采样率对宽带信号进行采样来感知周围频谱的能量谱信息，然后通过估计噪声的 能量等性能，与设定好的门限能量值进行对比、判决，判断信道占用情况。这其 中，门限的设定和噪声的估计都是能量检测中的重点因素，门限的高低会直接影 响到虚警率和漏检率的大小，这两者是衡量检测算法优劣的关键指标。过高的门 限会使得部分授权用户通信信号被判定为空闲，过低的门限又会使得部分噪声被 判断为授权用户占用，如何设定合适的门限是能量检测中的关键。
1.2.3软件无线电发展
频谱感知技术需要获取宽带信号的采样信息，以及进行一系列的数字信号处 理过程来获得具有代表性的频谱能量数据，软件无线电是实现这一目的的重要技 术手段。软件定义无线电［5］（Software Defined Radio, SDR）是认知无线电技术实现 的理想平台，它的基本思想是使用高性能的ADC芯片实现对较宽频带信号的采 样，将模拟信号转化为便于分析的数字信号，再通过PC/DSP/FPGA对这个数字 信号进行处理，从而建立一个通用的、配置灵活可变的软硬件平台。这时就可以 通过软件编程来实现各种信号处理功能如混频、滤波、加窗、FFT、求模等。通 过软件编程也可以完成信息抽样、量化、编码/解码、运算处理和变换，以实现 射频电台的收发功能。
随着芯片工艺的飞速发展，可编程逻辑器件FPGA对的优势逐渐突出出来， FPGA具有超强的数字信号处理能力、高速高吞吐率的处理性能以及其灵活可重 构可编程的特性，其可通过FMC等高速接口实现与高性能射频前端的通信，加 之目前己成熟的SOC架构和灵活可配的IP库资源使FPGA可以设计为灵活的嵌 入式系统，这些特性使得FPGA成为软件无线电平台的主流实现技术。FPGA技 术利用其硬件资源逻辑门阵列的并行同步计算的优势，完全区别与传统CPU顺 序执行的方式，使它可以在每个elk （FPGA处理、运算的单位）内并行处理更 多的计算和控制任务，其性能远远超越了数字信号处理器（DSP）的运算能力。 另外，在射频前端的硬件接口层面，为满足高速釆样信号和射频信号的需求， FPGA技术也提供了 FMC类似的接口，以更快的响应速度和更稳定的性能为高 性能射频前端提供解决方案。
Xilinx公司是当今FPGA芯片主流的两大厂商之一，其Virtex系列的FPGA芯 片具有高性能、容量大、运算能力强等特点，可以满足各种频谱感知场景的需求。 Xilinx公司最新的ISE软件可以加快FPGA系统的开发速度，其EDK等工具方便的 为用户搭建灵活的嵌入式系统，丰富的IP核资源可满足不同场景不同应用的需 求，只需挂载在Microblaze嵌入式CPU上完成一定的配置便可使系统快速运转 工作，是实现频谱感知软件无线电平台的不二之选。
1.3论文主要工作及组织结构
本文主要研究和实现了基于FPGA Soc架构、软件无线电平台思想的频谱感 知系统，提出一种应用于600MHz~3.0GHz宽带场景的全盲频谱感知能量检测算
3 法，对算法进行推导、仿真验证并在实际系统中得以验证，对频谱感知射频驱动 子系统、基带信号处理子系统、基于Microblaze SOC控制系统的软硬件框架结构 和关键算法以及基于Linux C++的控制系统和基于MATLAB的能量检测与前端展 示系统进行了详细设计与实现。系统以Xilinx ML605 FPGA开发板〔瑚和ADI公司 的AD-FMCOMMS1-EBZ射频开发板〔以为硬件基础，基于Linux操作系统，以ISE 13.4、 EDK 13.4、Modelsim SE 10.1、Matlab 2012、GCC 4.3.7 为开发与验证的软件环境， 设计并开发完成了 600MHz~3.0GHz范围内2.4GHz带宽的实时频谱感知能量检测 系统。系统核心运算单元运行与200MHz时钟，ADC复采样率高达163.84Msps, 频谱分辨率为10kHz,系统感知带宽达到60MHz,频谱能量采用128次时域采样 后计算出的能量均值，通过多次扫频、频谱拼接快速完成2.4GHz带宽的频谱感 知。系统实时感知空中信号的频谱信息，对感知的数据进行能量检测的判决，最 后通过展示子系统实时显示频谱感知结果与能量检测判决结果。
本文的结构安排如下：
第一章，绪论部分,主要介绍了论文研究的背景，认知无线电(Cognitive Radio, CR)和软件无线电(Software Defined Radio, SDR)发展的现状，频谱感知技术 的发展，以及现场可编程门阵列(Field Programmable Gate Array, FPGA)技术的 发展，以及课题研究的意义和各个章节安排。
第二章，宽带频谱感知能量检测算法，论述了在噪声、信噪比等先验信息未 知的场景下一种基于迭代运算的宽带频谱感知能量检测算法。根据算法的适用场 景建立信号模型，分析算法的原理并进行简单的公式推导，着重介绍了算法的检 测流程和设计思路，以及在对集中门限设计准则分析讨论的前提下，论证适合于 本文宽带全盲场景的最小错判概率准则的门限设计。仿真分析了算法的性能和适 用场景，并对算法应用于实际系统的方案技术进行研究和设计。
第三章，频谱感知系统总体设计，介绍了系统实现技术和平台的选择，以及 基于Xilinx ML605 FPGA开发板和AD-FMCOMMS1-EBZ射频子板的频谱感知系统的 总体设计，和基于Linux平台的控制系统设计，此外，介绍了整个系统的开发流 程和开发环境。
第四章，频谱感知系统详细设计与实现，主要研究了基于AD-FMCOMMS1 射频子板的射频前端驱动子系统的设计与实现，基于FPGA的基带信号处理子系 统模块的划分，各个模块的功能、算法原理与设计实现方法，基于Microblaze SOC 系统的设计与实现，基于Linux系统的Socket数据通信子系统、控制子系统和基 于Matlab, C混合编译完成的频谱感知能量检测和展示子系统的设计与实现，以 及整个系统的集成方案。
第五章，系统仿真与测试，对射频子板的性能和功能进行测试与验证，测试
射频子板的噪声性能；对基带处理子系统各个模块分别进行功能仿真与硬件测试, 包括降釆样滤波器模块、AXI配置总线模块、复FFT变换模块和频谱能量均值模 块；对频谱感知系统的实时能量检测判决结果进行分析与验证。
第六章，结束语，总结论文所做的工作，展望今后的工作计划。
第二章宽带频谱感知算法研究
2.1宽带频谱感知技术研究意义
频谱感知技术是认知无线电的关键技术〔22】，【231,通过频谱感知技术的应用， 能够获得周围环境的频谱使用情况和使用规律，加以分析和判断，便能找到空 闲的频谱，为非授权用户的临时通信提供服务和保障，同时实时的监测保证不 对合法用户的通信造成干扰和影响。
目前，窄带频谱感知技术领域己经有大量的研究，然而窄带频谱感知只能 感知到某一小段频谱内的频谱使用情况，只能在较窄的频段内寻找频谱空洞， 这样不仅效率低，而且无法充分利用其余相邻频带内的空闲频段。相比于窄带 频谱感知，宽带频谱感知技术可以对整个大频域范围内进行实时监测，充分利 用宽带频域内的频谱空洞进行分配，在保证合法用户（授权用户）的正常通信 工作的前提下，同时充分利用空闲的频谱为次级用户提供通信保障。此外，窄 带频谱感知技术一般需要预先知道频谱信号的信噪比等先验信息，而本文所研 究的是面对超宽带应用场景下的超宽带能量检测算法，它不需要预先知道整个 2.4GHz范围内的任何信噪比等先验信息，这既提高了系统的性能和感知能力， 也使得系统的应用场景更为广泛。
当对一个很宽频率范围内的信号进行频谱感知的时候，首先需要这个频段 内信号的采样信息，且采样的条件满足奈圭斯特采样定理，采样之后获得信号 的时域信息，经过DFT或者FFT变换之后得到这段频段的频域信息，并经过一 段时间的累计得到的信号的频谱能量信息，根据这段频谱的能量信息，进行一 定的噪声估计并采取一定的方法进行判别某一个具体的信道是被占用状态还 是纯粹噪声的空闲状态［24］四，来得知这个频带内的频谱使用情况。假设频带 宽度为B,这段频带内存在k个合法已授权用户正在自己已分配的频道通信， 并且各个频带并不重叠。图2-1表示了频域上空闲信号和忙碌信道的能量谱信 息的一个概况，图中的人表示频率的采样点，每个点代表其周围一个频率分 辨率内的一个信道。图中的0。/2表示的是能量检测时使用的判决门限，频谱 能量值高于此判决门限的认为是授权用户正在此频道进行通信工作，能量值为 白噪声和有用信号能量的和，频谱能量值低于判决门限的认为是空闲的频谱， 只含有白噪声的能量。高斯白噪声的能量使用犬表示，信号的能量使用b；表 示，且为便于分析取平均值表示，而白噪声的能量谱密度则用表示。
功率值

图2-1宽带采样系统检测信号频域模型
针对上述描述以及图2-1描述的简单的信号模型，文献［9］描述了一种适 用于50MHz带宽的能量检测算法并进行了简单的仿真，而本文基于此思路提出 一种宽带范围更广（达到2.4GHz）的超宽带能量检测算法，进行了简单推理， 并进行了性能分析，而且，本文的算法在系统中得到真实的检验，体现出了不 错的性能。
2.2宽带频谱感知能量检测算法
2.2.1算法描述与推导
窄带频谱感知技术的研究己有很多，例如匹配滤波法、能量检测法、循环平 稳特征检测法等技术己经得到了充分的研究【26】【27】【28］，但窄带频谱感知有很大的 局限性，只能对较窄的一段频谱进行感知。宽带频谱感知技术可以对一段较宽的 频带进行实时的信号监测，一旦非授权用户有通信需求，便为之在整个宽带内寻 找频谱空洞，及时满足多个非授权用户的临时通信需求。噪声估计的准确性决定 了频谱感知能量检测算法的性能优劣，在整个超宽带系统任何先验信息均未知的 前提下，本文研究了一种基于迭代运算的超宽带能量检测算法。
算法首先经过预设定一个初始化门限值，根据门限值对整个超宽带内的所有 信号的能量值进行判别，判为忙碌1或者空闲0,然后重新进行噪声能量的估计， 并根据新估计出的噪声能量值更新判决门限值，进入下一次迭代的能量判决，每 次更新门限值的时候，与前一次迭代进行对比，当两次相邻的迭代得到的门限值 之差小于某个预设值时，说明迭代过程己经收敛，迭代结束并得出最终的能量检 测结果。
2.2.1.1宽带频谱能量检测算法的检测流程
宽带频谱感知能量检测算法会对整个频带内各频点上的频谱能量累积值进 行独立的判决，宽带频谱能量的一般分布和本文设计中的计算方法如图2-2所示。 首先对目标频带内的信号进行高速釆样，釆样满足奈圭斯特釆样定理，假设共采 样乩次且单次釆样的长度是N,我们假定釆样是足够快的，这段采样期间目标 频谱内的信道占用情况等均不发生任何变化。每次釆样经过FFT变换之后得到各
个频点上对应的频谱能量数值，对凡次采样所得到的能量数据求平均得到具有 代表性的各个频段能量数据。本文的频谱感知系统中设计中凡=128, N = 8192, 每次感知81.92MHz的宽带信号，取靠近中心频点的60MHz频域能量数据作为分 析样本。
每次感知60MHz带宽信号

同一频段感知釆样次数归28
图2-2宽带频谱能量分布示意图
每个频带(频域IQ复数表示的一个频点)的能量检测都是二元检测判决问 题：
'H。: Y[n] = W[n],	授权用户不存在	宀_、
<	(2-1)
:¥["] = X図+归[皿	授权用户存在
式中n=l,2,...N, N为进行FFT变换的数据长度，也是单次采样的长度，Y[n] 为感知后FFT变换之后在第n个频点上的频谱能量值，W[n]为高斯白噪声在第n 个频点上的频谱能量值，X[n]是授权用户信号在第n个频点上的频谱能量值。
如图2-3所示是宽带频谱能量检测算法检测流程图。每次时域釆样后经过FFT 变换得到频域信号，乂次釆样结束后求得各频点频域能量累积值，N段频谱能 量数据拼接完成之后，再根据求得门限进行判决。
单个频点的检测统计量为
丁 = £(印0)2	(2-2)
由中心极限定理可知，当Nt足够大时，单个频点的检测统计量趋向于高斯 分布：
% T—NormW'N)
Hi T-Normal^ +贝),(<rw +/ )何)
式中b；为高斯白噪声频谱能量值的方差，。：为有用信号的频谱平均能量。


图2-3宽带频谱能量检测算法检测流程
单个频点的检测性能沿用窄带信号能量检测的评价，Pm为授权用户存在而 错误判决为噪声的概率，即漏检率，与为授权用户不存在而错判为存在的概率， 即虚警率。由以上分析可知，虚警率和漏检率的计算公式可分别表示为：
Pf=P{x>Vth\ H。)=尸(蓄'♦)	(2-4)
Pm=P(5\Hi) =些爲亍	(2-5)
记授权用户带宽在整个宽带上的频谱占用率为n,则有以下关系：
P(H°) = 1-〃，尸㈤)=〃	(2-6)
根据全概率公式可以得到错判概率为
Pe=PfP{H^PmP{H^ =
P(x > 4 丨七)(1 - 〃) + P(x <Vth\H^	(2-7)
2.2.1.2宽带频谱能量检测算法的门限设计
门限设计的优劣直接关•系着频谱能量检测算法迭代运算结果的准确性I”】,如 果门限的值设计的过于偏低，会导致很多纯噪声信道被错判为忙碌/占用信道， 相反，如果设计的过于偏高，又会导致很多能量值并不太高的授权用户通信信道 被错判为纯噪声的空闲信道。前者的错判会降低空闲信道的利用率，而后者的错
10
判会干扰影响主用户(授权用户)的正常通信。文献［17］中研究的成果表示提高 能量检测算法性能最重要的方法就是降低漏检率和虚警率之加权和。文献［18］［19］ 中指出了常见的门限设计准则，包括恒虚警概率准则(CFAR)、恒检测率门限准 则(CDR)和最小错判概率准则。
恒虚警概率准则［2。】是指期望能量检测的判决结果的虚警率小于等于一个性 能指标当，由于没有授权用户信号出现时，宽带信号的判决统计量服从均值灵和 方差a：/N,的高斯分布规律，可以得到虚警率门限写的情况下的恒虚警率门限， 见公式(4-8)所示。
Kh,CFAR = Q ' (Pf )-CFw/+ Crw	(2-8)
恒检测率门限准则SI是指能量检测的判决期望对信号检测概率小于等于一 个性能指标即漏检率小于等于马。当有授权信号时，宽带信号的判决统计 量服从均值(氏+E)和方差(b：+E)2/N,的高斯分布规律，可以得到此时的恒漏检 率门限满足公式(4-9)。
yth2 = Q~l (Pd) •码• (SNR +1)/网 + (SNR+1) E	(2-9)
而在宽带频谱感知的场景中，由于存在不同频段的授权用户的信号能量不同 导致不同频段的信噪比等参数不同，漏检率和虚警率对判决结果的性能均有较大 的影响，且孰轻孰重视场景不同会有不同的变化，所以以上的两种门限设计准则 对宽带频谱能量检测迭代算法都不太合适。而基于先验信息全盲的条件下，综合
考虑釆取最小错判概率准则比较适合本文场景中的宽带能量检测算法。 采用最小错判概率准则能达到的错判率门限最小值为：
0,



其中,
B=2b；(l + r)
一 (2 + r)
:坪血(上次1 + ,))
Ntr(2 + r) rj
并且,


根据以上的能量检测场景信号模型，提出图2-4所示的噪声估计和能量检测 联合迭代的算法。




——	1限
图2-4噪声估计与能量检测迭代算法流程图
由上图可知，算法的第一步是初始门限的设置，初始门限的设置取决于对噪 声能量的估计，因为对于采样信号没有任何的先验信息，利用经验公式来进行初 始门限的选取：
c
Vlh,i = — mean{y(n^
上式表示初始门限等于N,次釆样求平均后计算岀的各个频点平均能量再乘 以一个乘法因子C,对本文的超宽带应用场景C 一般在［1, 3］范围内取值。
算法判决模块会根据初始门限或者上次迭代计算的门限对频带内所有频点
的频谱能量检测值进行判决，低于门限的被判决为噪声，高于门限的被判决为信
号。通过对被判决为噪声的频谱能量检测统计量求平均，得到噪声平均能量的估
计值'河见式(2-15),而同样对被判决为信号的频谱能量检测统计量求平均，得到
有用信号的平均能量(包括噪声的在内)估计值见式(2-16) o由式(2-15)和式
(2-16)可以计算得出噪声的平均能量和有用信号的平均能量，进一步计算可以
得到频谱占用率、信道空闲率和整个超宽带频带内的平均信噪比信息㈣，这些信
息会被门限计算模块利用重新计算门限值。每次迭代都会计算出当前迭代运算周
期内计算出的门限值，相邻两次的门限只差小于一个特定小的设定值时，迭代运
算就会收敛，算法运算终止，从而得到最终的能量检测结果。
= \INtmean\Tk \Tk<Vth,\<k<N}	(2-15)
= 1/Ngan{Tk\Tk>Vlh,\<k<N}	(2-16)
12
2.2.2算法性能仿真分析
釆用MATLAB工具对能量检测算法进行性能评估，由MATLAB模拟产生一个 带宽为81.92MHz的宽带信号,FFT长度为螞可调，频谱分辨率为81.92Affiz/%, 信噪比可调范围-8dB~5dB,时域釆样次数N,可调，凡表示求取目标带宽内频谱 能量均值时采样的帧数。根据不同需求、不同信噪比场景、不同时域釆样次数、 不同频谱占用率、FFT长度等参数，仿真算法的性能，分析错检率的影响。定义 错检率尺与虚警率7｝、漏检率己之间的关系如式(2-17)0
£=弓0%) + 己尸(4)	(2-17)
2.2.2.1频谱分辨率对算法性能的影响
频谱分辨率的粗细粒度直接影响FFT变换时产生的频谱栅栏效应，太粗的频 谱分辨率意味着单个频点所表示的频带范围过宽，带内的授权用户信号能量可能 因为栅栏效应被稀释掉。为了分析频谱分辨率对算法性能的影响，寻找合适的 FFT变换长度，配置Matlab仿真环境时，釆用81.92MHz/32768 = 2.5kHz的超细 腻频谱分辨率对授权用户的信道进行模拟，并确保信道的位置具有一定的随机性, 信噪比选用SNR=1,时域釆样次数采用128次，频谱占用率釆用0.15、0.35、0.55 三种场景进行对比仿真，仿真的结果如图2-5所示。
仿真的结果表示，对不同的频谱占用率场景有一个共同的趋势是：当FFT长 度很小时，也即频谱分辨率较粗时，能量检测的错检率比较高，随着FFT长度的 逐渐加大，频谱分辨率越来越细，能量检测的错检率逐渐降低并慢慢收敛于0%。 当FFT长度小于2048时，即频谱分辨率大于81.92MHZ/2048 = 40kHz时，频谱占 用率越大的应用场景，能量检测结果的错检率就越大，说明较多零散的授权用户 信号能量被扩散到其所在频点代表的频段范围内其他频率上，导致信道平均能量 降低，影响检测判决结果的准确性。当FFT长度大于4096时，错检率的降低逐 渐平缓，且已小于IO",此时的频谱分辨率巳满足频谱感知应用需求，因此8192 的FFT长度和对应10kHz的频谱分辨率是FFT计算量与能量检测性能综合表现较 好的一个折中参数。
13


图2-5不同频谱占用率下频谱分辨率对错检率的影响
2.2.2.2时域釆样次数对算法性能的影响
时域釆样次数的大小对应釆样观测时长，能量检测的输入数据是多次采样之 后取平均后的能量值。仿真参数FFT长度为8192,对应频谱分辨率10kHz,仿真 曲线共设置了三条，分别对比不同的信道占用率和不同的信噪比随着时域釆样次 数增加对错判率的影响，仿真结果如图2-6所示。错检率的变化随着时域釆样次 数的增加逐渐降低并均达到IO」以下，釆样次数小于10时错检率极高，接近随 机判决的结果。对比曲线1 （频谱占用率15%,信噪比SNR=O）和曲线2 （频谱 占用率55%,信噪比SNR=O）可以看出，时域釆样次数小于100次时，更高的频 谱占用率会导致相对较高的错检率，而时域釆样次数大于100之后，不同频谱占 用率所引起的错检率的差异逐渐变小，且两条曲线均在缓慢收敛，错检率逐渐稳 定。对比曲线2 （频谱占用率55%,信噪比SNR=O）和曲线3 （频谱占用率55%, 信噪比SNR=2）可以看出，低釆样次数时（小于100）,更高的信噪比环境对错 检率的改善会起到一定的效果，且高信噪比会促使错检率曲线更快的收敛于0, 更快的达到稳定状态；当时域釆样次数满足大于100,两条曲线差距变小、保持 稳定且慢慢收敛，错检率均小于IO。，曲线3的错检率逐渐趋近于10』。鉴于曲 线1~3的仿真分析，128次时域釆样次数是一个较为合理的参数，可以保证在尽 量减少计算量的前提下使错检率达到最低状态。
14


图2-6时域采样次数对错检率的影响曲线

2.2.2.3算法复杂度迭代次数分析
能量检测算法的计算复杂度同样是衡量性能的一个重要指标，尤其对于实时、 高速率场景，基于迭代的算法其迭代次数决定了算法的收敛速度，也决定了算法 得到结果所需要的计算时间。

图2-7频带宽度对算法迭代次数的影响

图2-7所示为仿真分析频带宽度对算法迭代次数影响的曲线图，仿真参数设
15

置时域釆样次数N=128,频谱分辨率10kHz,每个坐标点表示10次仿真平均后 的迭代次数。图中曲线可以看出，对于某一固定信噪比环境下，随着带宽宽度的 增加，算法运算的数据量也增加，对应的运算迭代次数也呈现递增的趋势，最差 信噪比SNR=-3情况下在最宽的频带宽度2.4GHz处的平均迭代次数小于20,算 法复杂度依然表现优秀。对比三条不同信噪比条件下的仿真曲线，信噪比越低的 应用场景，相同条件下的运算迭代次数就越高，信噪比低的场景下，噪声与授权 用户信号的区分度并不明显，会导致迭代计算中门限阈值估计难度的增加，进而 引起迭代次数的增加。



图2-8信噪比参数对算法迭代次数的影响
图2-8所示为仿真分析信噪比参数对算法迭代次数影响的曲线图，仿真参数 同样设置时域釆样次数N=-128,带宽宽度81.92MHz, FFT长度为8192,对应频 谱分辨率10kHz,每个坐标点表示10次仿真平均后的迭代次数。图中可以看出， 信噪比恶劣的条件下算法迭代次数较高，因为迭代运算中的门限不容易达到最优 门限，随着信噪比条件的改善，算法迭代次数逐渐减少，并逐渐收敛与2次迭代 附近。图中的三条曲线对比表示，在其他条件相同的情况下，更低的频谱占用率 一般会带来相对较高的迭代次数，但不同频谱占用率之间的差别并不十分明显。 从图2-7和图2-8的分析中可以看出，算法在信噪比越高的情况下表现越是优秀, 信噪比大于0的条件下，带宽最宽条件下迭代次数也只有11左右，具有较好的 运算性能。
16
2.2.2.4频谱占用率和信噪比对算法性能的影响
从前面的仿真分析中大致可以看出，当凡取较大的值并且频谱分辨率足够 细腻时，信噪比越大，能量检测所得到的错检率就会越小。为了分析错检率在不 同的频谱占用率条件下随信噪比变化的情况，设定仿真条件时域采样次数N=128, 带宽宽度81.92MHz, FFT长度为8192,分别取频谱占用率为15%、35%和55% 三个条件进行仿真，仿真结果如图2-9所示。

图2-9不同频谱占用率条件下错检率随信噪比变化的曲线

图2-9中可以看到，随着信噪比从-7dB逐渐提高，三种频谱占用率下的错检 率均逐渐降低，当信噪比大于-1时三条曲线的错检率均小于IO』，当信噪比达到 3dB时三条曲线的错检率达到10』以下。观察不同频谱占用率下错检率£的仿真 图形，在信噪比较低的情况下，频谱占用率越高的场景，其错检率£越大，极端 情况下接近50%近似随机判决的结果。这是因为在低信噪比情况下，信号的幅值 和能量与噪声相差较小，漏检率远远大于虚警率，而漏检率即授权用户正在占用 的信道错判为空闲信道，所以，随着频谱占用率的增大，错判率会越来越大。对 比图中三条曲线，当信噪比大于-1之后，三种情况的错判率均小于IO』，算法在 此场景下表现优异。
2.3算法实现与应用的方案技术研究
宽带频谱感知能量检测算法应用于实际系统中的前提是设计与实现一个性 能优越、配置灵活、感知能力强的频谱感知系统，此系统需要具备较高的灵活性
17 和稳定性，能够适应不同地区不同场景下的频谱感知应用需求。本课题研究的目 标带宽范围是600MHz~3.0GHz,总带宽达到2.4GHz,称之为超宽带的应用场景， 通过对超宽带范围内各个频带频谱能量的检测和判决，能够获得整个2.4GHz频 带内的信道使用情况，并实时掌握整个频带的动态变化。
因为超宽带场景的总带宽达到2.4GHz,根据奈圭斯特采样定理，需要至少 两倍与目标带宽的采样速率才可以采样得到信号真实的频谱信息，现实的技术远 远无法实现如此高的要求，加之考虑本文提出的宽带频谱感知能量检测算法具有 较快的运算速度和较少的迭代次数，考虑通过多次扫频感知及频谱拼接的方法完 成对整个2.4GHz超宽带范围内频谱信息的感知。实现整个超宽带范围内信号感 知的一个前提是，完成一次2.4GHz带宽信号感知的过程中，频谱信道的占用状 况不发生变化，这要求系统具备较高的处理运算速度、较快的感知能力，能够在 较短的时间内完成整个频带内信号的感知获取，为达到此目标，需要在保证性能 的前提下，尽量减少扫频次数，增大系统单次感知的带宽范围，这样高速率、高 吞吐量的运算处理速度加上系统较宽的感知带宽能够保证系统在极短的时间内 便完成对整个2.4GHz频带信号的频谱感知。
系统方案中需要有高性能射频前端的支持，以高采样率获取宽带宽信号时域 幅值信息，经过高速FFT转换获取宽带内各个频点的能量值信息，同时为了确保 频谱感知具有较高的频率分辨率，在满足系统高性能高吞吐率的前提下FFT的长 度应该尽可能长，以提高频谱感知的频谱细腻度。为避免临时的突变信号等因素 影响系统感知的准确性，对每个感知带宽内的信号需要经过多次的釆样和FFT处 理，然后以多次感知的平均值作为这个带宽内信号的频谱能量值。此外，为提高 系统的灵活性和对多种应用场景的适应能力，系统的各个参数应保证灵活可调， 包括均值次数、扫频速度、单次感知带宽等信息，同时方便地选择只对特定频率 范围进行感知或某一固定频率范围反复感知以及扫频的跳频规律等。
2.4本章小结
本章主要在分析了窄带频谱感知算法的局限性前提下，论述了宽带频谱感知 的意义，并在先验信息全盲场景下提出一种迭代的宽带频谱感知能量检测算法。 根据算法的适用场景建立信号模型，分析算法的原理并进行简单的公式推导，着 重介绍了算法的检测流程和设计思路，以及在对集中门限设计准则分析讨论的前 提下，论证适合于本文宽带全盲场景的最小错判概率准则的门限设计，最后对算 法的性能进行分析和仿真验证。为了使算法不仅仅局限于原理和仿真分析，分析 并研究了频谱感知系统的实现方案，讨论了系统方案需要满足的功能、指标和参 数细节。
.	18
第三章频谱感知系统总体设计
3.1系统实现的技术与平台选择
3.1.1系统实现的技术选择
本文的目标感知带宽达到2.4GHz,同时需要较宽的单次感知带宽能力和高 吞吐量、高运算速度的实现技术，以保证在信道状况未发生变化的极短时间内通 过多次扫频完成对整个频带信号的频谱感知。DSP平台虽然具有较强的数字信号 处理能力，但与其相匹配的射频前端较少且带宽、采样率等性能较弱，加之无法 实现硬件配置的灵活更改，所以并非本系统的理想选择。目前业界普遍认为，软 件无线电(Software Defined Radio, SDR)是实现频谱感知技术的理想平台，它 可以通过软件实现硬件配置的灵活更改，建立一个通用的、配置灵活的软硬件综 合平台。
软件无线电技术主要采样FPGA作为实现平台，再加上射频前端设备，可快 速开发完成各种需求的软件无线电平台。可编程逻辑器件FPGA的优势随着芯片 工艺的飞速发展逐渐凸现出来，其超强的数字信号处理能力、高速并行运算的独 特技术以及硬件可重构的灵活特性〔34】,加之成熟的SOC架构和丰富的IP库资源， 使得FPGA成为软件无线电的主流实现技术。目前为配合FPGA的高速处理能力， ADI公司新研发了一批高性能、高宽带的军工级射频子板，这些射频子板均使用 FMC接口与FPGA板卡实现高速信号传输，接口标准符合最新的VITA规范，为本 文频谱感知系统的实现提供了强有力的支持。
3.1.2系统实现的平台介绍
经过仔细的调研分析，系统实现采用的FPGA开发板为Xilinx公司提供的基 于Vertex-6系列FPGA芯片的ML605开发套件，它的核心芯片是Virtex-6 XC6VLX240 T【i4】，具有丰富的逻辑资源和存储资源，1GB的DDR3 Memory内存， 512MB的板载Flash资源，32MB的Linear BPI Flash, 200MHz的板载晶振，丰富 的接口资源，如FMC-HPC, FMC-LPC. SMA、PCIe等,可以满足频谱感知系统的 设计要求。
系统的射频子板采用ADI公司的AD-FMCOMMS1-EBZ板卡，它是一款FMC 接口的模拟前端硬件平台，适用于各类学术研究、工业和国防应用。 AD-FMCOMMS1-EBZ子板支持400MHz~4GHz频率范围内的射频应用，它采用软 件定义无线电(Software Defined Radio, SDR)的思想，无需更改硬件，通过软 件便可实现对不同频率进行定制、更改发送和接收的增益等控制功能。
19

3.2频谱感知系统框架设计
频谱感知系统的软件无线电平台主要涉及ADI公司的射频子板 AD-FMCOMMS1、Xilinx公司的FPGA开发板ML605和基于Linux系统的服务器， 设计为软件无线电平台主要考虑到使系统的各个配置可以轻松通过软件来调节， 而无需再更改底层的硬件架构。射频前端的配置更改与信号捕捉之间的延时控制, 射频接收的增益控制，何时进行单次扫频感知，扫频的频率范围，都可以根据软 件来更改，这样的设计可以使得系统更加灵活、适用于更多的场景SI。
频谱感知系统的总体设计，包括基于AD-FMCOMMS1的射频驱动子系统设 计，RTL级基带信号处理子系统的设计，基于Microblaze SOC的软硬件控制系统 的设计，基于Linux C++的软件控制系统的设计和基于MATLAB的宽带能量检测算 法与实时演示子系统的设计。其中频谱感知基带信号处理子系统和射频驱动子系 统的设计与实现是本文的核心内容，涉及从射频前端的控制，到基带各个处理单 元的设计。系统总体框架图如图3-1所示。


PC Host Server

Sweep Frequency
Control
FPGA Soc System
AD-FMC0MMS1-
EBZ射频板
数据流
►控制流
空中信号
AXI
IIC
■thernet
Data Receive
& Process
;Config Info 亥 Process
1.
MATLAB I f
[Energy DEtection
Data mining'

pTmurarnniTi-.
i IP Core
图3-1频谱感知系统总体框架图






















3.2.1频谱感知射频驱动子系统的设计
基于AD-FMC0MMS1射频板的射频驱动子系统，主要负责对射频子板的初 始化配置、感知过程中的扫频控制和增益控制、ADC采样数据的缓存接收，射频 子板负责完成对空中射频信号的解调、放大、滤波、AD转换等操作。
射频驱动子系统分为硬件部分和软件部分。硬件部分主要是由RTL级代码装 装为IP核和Microblaze CPU上必要功能模块的配置组成，包括图3-1中的射频子 板RTL驱动模块、AXI IIC模块。硬件驱动模块的RTL级代码的功能主要是将差分 输入信号转换为单端信号，同时利用IDELAY控制延时单元消除时钟漂移、10延 时的影响，然后通过AXI-STREAM接口将处理后的ADC IQ复信号传给基带信号处 理子系统；软件驱动控制部分主要通过HC通信接口分发配置信息和接收配置响 应信息，利用各种底层封装的API函数进一步利用完成频谱感知所需的各种参数 的配置。
3.2.2频谱感知基带处理子系统的设计
基带处理子系统是频谱感知平台处理的核心部分，它全部有RTL级Verilog HDL代码实现，采用自顶向上的设计方法，各个模块独立编写、仿真、测试后， 按照系统格式要求进行封装，最后各个子模块拼接完成基带处理的整个子系统， 再加入配置模块进行子系统链路级仿真测试。
基带处理子系统通过FMC接口接收到ADC釆样信号之后，经过2倍的数字 下变频抽取滤波器处理、时域加窗处理、复FFT变换、频谱能量均值处理之后得 到一次60MHz频带感知的频谱能量数值。输入端是ADC采样后的信号，输出端 是平均之后的各个频点的频谱能量值。整个处理子系统稳定运行在200MHz时钟 频率下，其与基于Microblaze SOC系统和射频前端系统的数据通信均通过跨时钟 域FIFO完成对跨时钟域的处理。
3.2.3控制系统的设计
控制系统主要分为两个部分：基于Microblaze平台SOC系统的Firmware软 件控制模块和基于Linux操作系统的C++程序控制模块。Firmware软件控制模块 主要进行三个部分的处理，首先是负责射频子板的初始化工作，以及射频前端的 中心频点设置与更改、接收增益设置、ADC采样率设置等工作；其次需要负责初 始化DMA引擎，维护DMA对基带处理子系统数据接收过程，接收数据存储于数 据队里之中并由软件维护队列的出队、入队操作；最后，Firmware程序还需要负 责FPGA开发板与PC机的Socket通信，初始化与Host Server的Socket连接，负
21
责监控DMA接收数据的数据队列，并持续稳定地将数据队列中的数据通过Socket 传给PC机的Host Server程序。
基于Linux操作系统的PC机Host Server程序负责两个部分的工作：一个工 作是与FPGA开发板进行的Socket连接，持续稳定地接收FPGA开发板传来的频 谱能量数据，并对每一帧的数据进行解包处理，提出单次频谱感知的60MHz带 宽内的频谱能量数据，并对每一帧的数据进行拼接，完成600MHz~3.0GHz整个 2.4GHz带宽内的频谱能量数据整合，并存储于数据队列之中；Host Server的另 一份工作是与Matlab程序负责通信，每次Matlab与Host Server建立Socket连 接时，Host Server负责将解包处理后的频谱感知频谱能量数据发送至Matlab - 侧，由Matlab程序迸行宽带能量检测判决与展示。
3.2.4宽带频谱能量检测算法的设计
宽带频谱感知能量检测算法对各个频点上的能量累积值进行独立的判决，根 据高斯白噪声能量和信号能量的规律，判断各个信道是否被占用。针对系统场景， 在信噪比、干扰信息等先验信息不确定的情况下，提出了一种基于迭代运算的宽 带信号能量检测算法，对2.4GHz宽带频域范围内每个频点(10kHz频率分辨率) 的频谱能量值进行检测，由初始预先设定的一个能量门限数值开始使判决反馈系 统进入循环迭代运算的过程，运算完成之后判决模块会将信道占用结果传至噪声 估计运算模块，噪声估计模块重新计算并更新对噪声能量的估计值，把它作为新 的噪声能量结果传送给下一次迭代继续运算，当相邻两次迭代计算岀的噪声能量 门限的差值小于设定的结束阈值时，迭代的任务完成，频域内各个频点的判决结 果趋于稳定。文中在对多种门限设计准则调研的基础上，设计了采用综合考虑虚 警率和检测率的最小错判概率准则，并对算法的原理公式进行了详细的推到验证, 使用Matlab工具对算法的性能进行仿真验证。
3.3开发环境与开发流程介绍
3.3.1开发环境介绍
系统开发过程中主要涉及的软件工具有Xilinx公司的EDK和ISE软件，Mentor Graphics公司的Modelsim仿真验证软件,MathWorks公司的Matlab软件和Linux 平台下的GCC编译器。
Xilinx 公司的 ISE (Integrated Software Environment)软件是 Xilinx 公司针对自 家FPGA开发的硬件设计工具。ISE将先进的技术与灵活性、易使用性的图形界 面结合在一起，用以使用户在最短的时间内、花费最少的努力，来达到最佳最优
22
的硬件设计。ISE对Xilinx系列的FPGA进行开发设计主要分为输入(Design Entry). 综合(Synthesis)、实现(Implementation)、验证(Verification)、下载(Download) 五个步骤。
EDK (Embedded Development Kit)是 Xilinx 公司为 FPGA 设计专门开发的嵌 入式系统开发套件，它与ISE软件的不同在于，ISE软件仅仅对FPGA开发做Verilog HDL或VHDL的RTL级的硬件逻辑设计，而设祈-一旦需要使用PowerPC或者 Microblaze处理器进行灵活的嵌入式设计，就需要用到EDK软件。EDK是用于设 计基于IBM PowerPC硬件处理器或Xilinx Microblaze软处理器的嵌入式可编程系 统的全面解决方案，可使用它产生、编译、链接、加载和调试C/C++高级编程语 言。EDK配合ISE软件组成了功能强大、操作简单的工具集，可完成嵌入式开发 所需的软件和硬件的开发以及两者的综合设计，可对时序约束、逻辑布局、PLD 编程、嵌入式硬件架构和配置进行灵活的编程与设计。
Mentor Graphics公司开发的Modelsim是行内优秀的HDL语言仿真集成环境 1131,它的用户界面友好，既支持VHDL和Verilog HDL混合仿真，又支持Tcl/Tk脚 本，有良好的图形化界面和用户接口，支持第三方Xilinx和Altera等公司的IP核 仿真。近年来Modelsim越来越受到IC/FPGA开发者的青睐。在PUSCH链路系统 的实行中，主要使用Modelsim来进行FPGA模块和链路的功能仿真验证，保证 模块和链路逻辑功能的正确性。ModelSim软件是行业内唯一的单内核支持VHDL 和Verilog混合仿真的集成开发环境。它采用方便的Tcl/Tk技术、优化改良后的 编译技术，并进行RTL和门级优化，仿真和编译的速度极快，代码管理优秀，波 形便于分析和调试，支持VHDL和Verilog HDL混合仿真，是FPGA/ASIC设计的首 选仿真软件。
美国MathWorks公司的MATLAB软件是一款用于算法开发、数据分析、数 据可视化的高级技术计算语言和交互式环境，它主要面对复杂的图形化、可视化 科学计算、算法仿真、建模场景的模拟以及交互式代码设计的集成开发环境。 Matlab特别擅长于矩阵计算、科学数据分析和可视化研究，它对非线性动态系 统的建模和仿真分析尤为到位，为工程设计和科学研究提供强有力的支持和可靠、 方便的解决方案。Matlab简单的命令窗口、历史命令窗口、编辑器和调试器、 工作空间，以及完备方便的调试系统，不必编译就可直接运行的方便设计等特点， 使得Matlab成为当今科学研究领域最常用的分析和计算工具。MATLAB自带多 种应用的库函数，也可用户方便的自定义或扩充一些功能函数，在复杂的科学计 算、数学矩阵运算时可供直接调用。MATLAB对混合编程的支持，使得用户可以 方便地调用其他用C/C++语言编写的函数或代码，也可以在C/C++程序代码中直 接中调用MATLAB编写或自带的功能函数来计算、执行工程代码。
23
GCC (GNU Compiler Collection, GNU编译器套装)是一套支持多种编程语言 (主要是C/C++)的集成编译器，它由GNU工程牵头开发，一般内置与Linux操 作系统之中。GCC是开源、自由软件发展的典型例子，是大多数Unix类型操作 系统标准内置的集成编译器，GCC开源的代码架构使得其在发展过程中经过无数 优秀人士的更改和完善，现己具备丰富的功能和高效的编译效率。GCC支持很多 CPU芯片，支持X64、X86以及ARM架构，它是各种Linux系统下最常用也最方 便的C/C++语言集成编译器，GCC编译器编译C代码为可执行文件的编译链接过 程大致分为四个步骤：预处理(Preprocessing)＞编译(Compilation)、汇编(Assembly) 和链接(Linking)o
整个频谱感知链路系统均在Linux环境下开发完成，使用Python脚本语言作 为简单的数据处理与文本分析工具，使用Tel脚本作为Modelsim仿真软件运行的 脚本，使用GCC作为Host Server中C语言编译链接的工具。Linux服务器主机使 用的是装有Centos4.7版本操作系统的DELL服务器，服务器拥有20个核，16GB 的内存，Centos是RedHat公司的rhel系统源代码重新编译的版本，和rhel相比 去掉了 rhel版本的商业软件和一些注册商标，而rhel操作系统是redhat系统的 改良版本，自2003年之后，RedHat公司停止发布redhat操作系统，之后发布的 系统均为 redhat enterprise linux,简称 rhel。
3.3.2开发流程介绍
如3.2节所述，图3-1描述了频谱感知链路子系统各个处理单元的组成与整 体架构，整个系统的开发流程也是按照图3-1的模块划分逐步进行，分模块开发， 逐模块进行集成。整个系统的三个硬件部分中，主要的开发工作集中在FPGA链 路的基带信号处理子系统和射频子板的驱动控制子系统。FPGA系统中的基带处 理单元模块和AD-FMCOMMS1射频子板的驱动均使用Verilog HDL语言幵发完成， FPGA控制系统的硬件部分使用Xilinx公司EDK嵌入式开发套件搭建Soc系统， 而FPGA控制系统的Firmware软件部分使用基于Microblaze嵌入式CPU的C语 言开发；AD-FMCOMMS1射频子板的驱动使用Verilog HDL语言开发，之后封装 为自定义IP核挂载在Microblaze CPU上；PC机上的Host Server控制模块使用基 于Linux的C语言开发，PC机与FPGA之间使用Socket进行通信。
频谱感知链路系统中的FPGA开发部分，各个模块的功能独立，接口均采用 AXI-STREAM协议，可分别进行RTL代码开发和功能验证，各个模块开发验证完 成之后集成完整的系统。图3-2显示了链路系统中FPGA各个单元模块开发的基 本流程图。射频子板和FPGA系统的各个模块的开发按照系统框图进行逐步设计 与实现，各个模块首先确定设计规格，接下来编写RTL级Verilog HDL代码，编
24
写Testbench测试环境在Modelsim仿真软件中进行功能验证，验证通过之后， 搭建FPGA的硬件Soc环境，将模块的RTL代码封装为独立IP核，挂载到硬件的 Microblaze ±,进行硬件的模块验证，Modelsim的功能验证和FPGA的硬件测试 均采用Matlab仿真数据进行对比，以验证结果的正确与否。
确定设计1
规格 I
RTL编码

F	| | F I	I "I
［编謡真I—4功能仿真 说 I」 II	丨」


入C境
嵌so珀
造瘁试
构测
i,1 一















图3-2链路系统中FPGA单元模块开发流程图
各个模块的功能验证和硬件验证完成之后，编写各个模块之间的“胶合逻辑”, 首先将FPGA系统中基带处理的各个模块组成一个完整的基带链路子系统，然后 编写链路级的Testbench文件进行链路的Modelsim功能验证，使用Matlab产生 的信号源存入RAM中循环读出来模拟射频端ADC的输出。基带链路子系统的功 能验证完成之后，将整个基带链路的RTL代码封装为IP核的形式挂载到 Microblaze CPU ±进行FPGA硬件测试，调试验证通过之后，完成基带链路子系
统的集成。射频子板的驱动验证和控制系统的Firmware验证均直接进行硬件测 试，三个部分的硬件测试均完成之后，釆用自定义的AXI-BRIDGE总线桥连接为 完整的FPGA系统，进行系统测试与验证。FPGA系统的集成开发流程如图3-3所 zj\ O
I确定各个模块3
I间接口规格J



<o>



图3-3 FPGA系统的集成开发流程
AD-FMC0MMS1射频子板的驱动开发主要是基于ADI公司为射频板提供的
Reference Design参考设计，在充分调研与验证射频子板各个参数性能的基础之
上，修改Reference Design中的RTL代码以及Firmware代码，使之适应本文的频
谱感知系统，测试、验证完成之后与基带处理子系统的接口进行AXI-STREAM的
连接。
FPGA控制子系统主要分为硬件部分和软件部分，硬件部分是基于Xilinx公司
26

的 SOC 架构，搭建 Microblaze CPU 以及 DDR、BRAM> Ethernet、DMA、AXI4_0 等模块，组成SOC的硬件架构,Firmware软件部分采用嵌入式C语言编写。
Firmware软件部分主要完成三个功能：1.通过AXI-BRIDQE总线向FPGA底层RTL 级链路发送控制信息，控制信息控制射频板硬件何时进行跳频、跳频间隔是多少、 何时进行信号捕捉、跳频命令与信号捕捉之间的时间延时；2.配合控制信息，利 用DMA对FPGA基带处理链路的数据完成接收与缓存，缓存利用ML605板载的 1(3容量的DDR3内存，代码确保DMA的鲁棒性;3.利用Microblaze挂载的Ethernet 模块，釆用Lwip协议，编写Socket以太网通信代码，将DMA缓存的基带处理数 据通过Socket传送至PC端。
PC端的Host Server部分釆用基于Linux的C语言开发完成，利用多线程的 思想，一个线程建立Server服务器，通过Socket连接接收FPGA开发板的数据， 维护一个队列用于缓存接收到的数据，另一个线程采用另一个PORT挂载一个 Server服务，对Matlab 一侧发起的Socket请求进行相应，将从FPGA 一侧接收到 的数据按顺序传输至Matlab进行分析、算法处理与结果展示。Matlab 一侧与PC 机Host Server的通信同样釆用Socket,利用Matlab与C语言的联合编译,Matlab 调用C语言编译链接的可执行文件。
以上各个子系统的功能设计与开发、验证实现之后，需将各个子系统进行集 成、调试，系统集成的过程包括射频板驱动验证、RTL级基带处理链路的验证、 Firmware的DMA与Socket功能验证、PC机Host Server的Socket验证以及与 Matlab的通信功能验证，所有验证完成以后，最后进行集成系统的调试与验证。
3.4本章小结
本章首先讨论了频谱感知系统实现的平台与技术选择，经过对比与分析决定 釆用基于FPGA的软件无线电平台来实现频谱感知.系统。之后主要论述了频谱感 知系统的框架设计和各个主要模块的功能，分别羸要地介绍了射频驱动子系统、 基带处理子系统、各个软件控制模块、硬件SOC子系统需要完成的功能和设计 思路，以及宽带频谱感知能量检测算法的原理和设计思路。后半部分根据整个系 统的需求和应用场景，详细论述了系统各个模块的开发流程，并对各个子系统和 模块的开发环境以及系统开发过程中所使用的开发平台做了简要介绍。
27





























































28


第四章频谱感知系统详细设计与实现
4.1基于AD-FMCOMMS1的射频前端子系统设计
本节主要介绍AD-FMC0MMS1射频子板模块的接口配置、通信接口、API接 口和软件驱动，以及如何利用这些资源完成系统所需的设计，射频前端子系统为 整个系统的性能提供保证，使系统具备单次感知60MHz带宽信号的超强能力， 以及10kHz超细腻度的频谱分辨率，并使系统核心处理部分稳定运行在200MHz 时钟频率下，每秒钟内完成多次全频域能量感知的先进性能，确保系统及时的感 知整个频域内频谱的使用状况。
前面3.1.2节和3.2.1节对AD-FMCOMMS1射频子板已有粗略的介绍，它是 一款专门针对软件无线电系统设计的宽带模拟前端硬件平台，可作为众多计算密 集型FPGA无线电应用的模拟前端。它包含最新的高速数据转换ADC器件和RFIC, 提供完整的差分复合收发器信号链。AD-FMCOMMS1可以在超宽的频率 (400MHz~4GHZ)范围内实现调谐功能，射频子板整个系统的通道带宽高达 200MHz,同时具有高达250MSPS的ADC采样率和高达1GSPS转换速率的高速 DAC,具备发送和接收两个路径的相位同步和频率同步功能，兼容LPC FMC和 HPCFMC,两根天线可同时作为接收端支持MIM0无线电，通信接口和协议符合 VITA规范，且模数转换ADC和数模转换DAC的采样同步小于1,而且，射频板 上所有器件寄存器的配置都可以通过IIC访问和控制，FPGA通过FMC接口，可 实现对射频板的的灵活控制。
4.1.1射频子板配置与通信接口模块
AD-FMCOMMS1射频子板的功能框架图如图4-1所示，射频系统共包括四个 功能模块：发送链路、接收链路、时钟管理、电源管理。
在发送链路上，主要有四个芯片来完成发送链路的射频发送功能，其各个芯 片的功能和特性详见表4-1。在发送方向上，系统主要功能是将IQ复信号转化为 为对应的射频信号通过天线发送到空中。AD9122数模转换器通过内插数据提高 频率使得IQ数据变换到基带。复基带信号通过L。频率从直流搬移出去，并且镜 像频谱可以很容易地被过滤掉或抑制。通过适当的滤波器和匹配阶段，它被进一 步转换为指定的RF输岀频率，IQ复基带信号从DAC输入转换为模拟输出馈送至 ADL5375正交调制器进行调制。之后信号通过一个镜像抑制滤波器传递到 ADL5602进行一个+ 20dB固定增益的信号放大。RF射频输出功率控制是通过调 整基带数据的数值大小来完成的，即使在4GHz的高频点射频输出的发射功率也
29

可咼达7.5dBm。



图4-1 AD-FMCOMMS1射频板功能框架图 表4-1发送链路关键芯片及功能特性
AD9122	双通道，16-bit,高达1200MSPS转换速率，自带直流偏置、相位 和增益补偿的数模转换器。
ADL5375	支持频率400MHz~6GHz范围内的宽带正交调制器。
ADF4351	集成VCO压控振荡器的宽带频率同步器（支持频率范围35MHz~
4400MHz）「
ADL5602	支持频率范围50 MHz ~4.0GHz的射频/中频固定增益（20dB）放 大器。
在接收链路上，主要由四个芯片完成主要功能，各个芯片的详细功能参数详 见表4-2。在接收方向上，链路的主要功能是将一个射频信号转换成IQ复信号。 RF射频信号直接传至ADL5380正交解调器解调，解调岀一个稳定的复基带信号 <-3dB 带宽范围：DC~400MHz） =
所得的IQ复基带信号进行滤波滤除频谱上的谐波镜像，然后传送到AD8366 的DVGA （数字可控增益放大器），提供高达4.5dB到20.5dB增益的信号放大。 抗混叠滤波器主要用于信号在AD9643处被转换为数字信号之前去除高次谐波及 其它带外信号。
表4-2接收链路关键芯片及功能特性
ADL5380	支持频率范围400 ~ 6000 MHz的宽带正交解调器，带宽500MHz。
AD8366	支持频率从直流到600MHz的数字可调功率放大器，增益范围4.5dB ~
20.5dBo
AD9643	14bit、最高支持250MSPS釆样率的双通道模数转换器。
ADF4351	集成VCO压控振荡器的宽带频率同步器（支持频率范围35MHz ~ 4400MHz）。
时钟资源的管理主要依赖AD9548芯片和AD9523-1芯片，二者的特性参数 详见表4-3。射频板的系统时钟可以选择通过板上晶体（50MHz的）产生或从FPGA
（通过FMC）引入。时钟路径主要由AD9548, AD9523-1和2个ADF4351产生， 提供到发射和接收链路的各个单元。当多块射频板使用外部同步功能时，从射频 板必须从主电路板引入时钟。

表4-3时钟资源管理的关键芯片及特性
AD9548 四路/八路输入网络时钟发生器（lHz~750MHz）。
AD9523-1低抖动时钟发生器（lMHz~lGHz）,带有14路输出。
AD9548的REFA输入绑在FMC连接器的LA_17_[PN]_cc引脚，这允许从FPGA 板卡提供一路时钟至AD9548，该时钟被清理（抖动）后用于驱动AD9523-1的 REFB。AD9523 ±变频此时钟至3GHz左右，然后再通过一个dividor进行任意整 数倍的降频。
在ADI公司提供的参考设计中，AD-FMC0MMS1执行以下操作：
>FPGA利用Xilinx时钟发生器产生的30MHz的固定时钟频率；
>此30MHz的时钟通过FMC接口传送至AD9548；
>AD9548的输出时钟去抖之后，进一步传输至AD9523；
>在AD9523处，创建以下三种时钟频率：
/ 491.52 MHz的DAC的采样率
/ 245.76 MHz的ADC的釆样速率
/ 122.88兆赫的参考时钟为L0的PLL
上述这些时钟都是数字可调、灵活可变的，关键是要注意是AD9523直接驱 动 ADC 和 DAC=该 AD9523 有两个时钟区域，bankO： 0-3 和 10-13, bankl： 4-9-
对不同bank的输出必须是彼此的整数倍。
射频板的电源管理主要依靠ADP2323, ADP7104, ADP150/1、ADP1740,他 们的功能特性和详细参数详见表4-40射频板的所有的能量来源均通过FMC接口
31 取自于FPGA板卡，即Xilinx ML605 FPGA开发板。
表4-4电源管理的关键芯片及特性
ADP2323	双通道3A、20V降压转换器
ADP7104	高精度500mA低压差线性稳压器
ADP150/1	超低噪声150/200mA低压差线性稳压器
ADP1740	低输入电压2A低定差线性稳压器

FPGA ML605开发板与AD-FMC0MMS1射频子板之间使用FMC-LPC插槽相连, 其中包括用于寄存器配置的l2C总线和ADC/DAC I/Q数据端口，在FPGA的RTL 驱动代码中分别设立了两个module处理这两个接口的功能模块。在本文的频谱 感知链路系统中只用到ADC数据链路，因此本节主要介绍ADC数据链路的各个 接口模块和&总线接口模块。


图4-2 ADC接o模块逻辑框图
ADC接口模块工作原理的逻辑框图见图3-4, ADC的釆样时钟来自于AD9548, 其采样频率可由软件编程配置，配置后的时钟输出经去抖等处理后传输至ADC 芯片的时钟引脚。差分输入缓冲器IBUFGDS〔i41的作用是将输入的差分信号转变为 单端信号，因为ADC的IQ数据信号额时钟信号都是差分信号的形式。FPGA开发 板的PCB走线会产生时钟漂移、10延时等问题，所以在IBUFGDS的输出处也即 数据输入端口处插入可控延时单元IDELAY,以便于对准输入数据的釆样时刻。信 号下一步进入IDDR模块，IDDR模块的功能是将双沿触发的信号分离为单沿触发 的信号，对ADC输入侧的双沿触发信号进行处理，通过模式选择模块Mode Select 将两路信号的延时适当的调整，分离出IQ实部、虚部采样信号。IDELAY模块的 可控延时信息是通过监测特定训练序列的PN码而得到的，使用特性的训练序列 PN序列输入到PN_Monitor模块，并将ADC配置为训练模式，检测出在特定延 时控制下的PN码序列的采样结果，分析采样结果的眼图，眼图张开最大位置的 时刻即为最佳ADC釆样时刻。
通过通用IIC总线，可以轻松访问和改写射频板上面的ADC、DAC、混频器、
放大器等芯片的寄存器，实现灵活的配置，使其在较宽的幅度和频域范围内工作。
32
FPGA母板上通过Microblaze平台的IIC IP核可以借助FMC接口与AD-FMCOMMS1 射频子板上的各个功能芯片进行通信，射频子板上有一个专门的PIC单片机会对 FPGA发来的IIC总线请求进行翻译，再通过SPI总线将翻译后的FPGA请求发送 到对应的射频板芯片中，芯片收到配置后会返回一个响应结果，PIC再将芯片的 响应结果通过FMC返回给FPGA母板，FPGA通过返回的响应代码判断此次配置 是否成功执行或者监测射频板的工作状态。Microblaze平台上的IIC IP核可以通 过基于Microblaze CPU的嵌入式C语言编程来控制读写内容和时间，C语言借助 AXI-Lite总线实现对IIC IP核的控制，在Firmware软件中对射频板的各个芯片的 配置和映射都是通过IIC IP核来实现的，Xilinx对IIC IP的读写提供了响应的功能 函数，使得软件可以很方便的实现对射频板的控制。
4.1.2射频子板驱动设计及API接口
系统中釆用Xilinx的ML605开发板实现对AD-FMC0MMS1射频板的控制， ADI官方提供一个简单的Reference Design用以验证射频板的基本功能实现，借 助于Reference Design的结构，重新搭建自己的系统，可实现对射频板的控制。 图4-3是FPGA的射频板驱动模块硬件框架结构。

图4-3 FPGA射频板驱动模块硬件框架结构

射频板的驱动控制部分分为硬件部分和软件部分。硬件部分主要是RTL级代 码IP核的封装以及Microblaze CPU上必要功能模块的配置。硬件驱动模块的RTL 级代码的功能大抵如4.1.1小节中所述，IIC通信接口负责分发配置信息和接收配 置响应信息,AXI-STREAM接口用来FPGA板卡与射频板之间传输数据，频谱感知 系统基于Microblaze CPU的SOC系统结构如图4-4所示。从SOC系统的结构图中
33

可以看到，用于AD-FMCOMMS1射频板驱动的模块主要有axi_adc_2c_0和 axi_iic_O两个个CPU设备(Peripheral)。axi_adc_2c_0主要用来缓冲ADC的数据 以及纠正时钟漂移、10走线延时等影响，转换差分信号为单路信号，提供IQ实 虚部数据至基带处理链路；axi_iic_O模块是通用IIC协议处理单元，用以翻译软 件层面的控制信息，转换为射频板可以识别的1IC协议数据，实现对射频板的控 制该写和状态监测；axi_adc_2c_0输出的IQ数据与axo_spec_sense_dev_0基带 处理子系统Peripheral相连，送入基带处理模块，处理完的数据会通过 spec_axi_dma_O DMA设备接收并缓存与DDR之中，软件代码封装处理之后通过 以太网发送至PC机。



图4-4频谱感知系统基于Microblaze的SOC结构
AD-FMC0MMS1射频子板的软件部分功能主要通过调用一些封装好的API (Application Program Interface)实现。射频子板的API函数主要是根据各个ADC、 DAC、数字可调增益放大器、时钟等芯片的寄存器地址以及各自datasheet中控 制命令的格式，通过IIC的读写逻辑与函数，实现对射频板上各个功能区域的控 制与调节。底层的API函数分别针对板上的芯片封装初始化和应用函数接口，高 层的应用层API函数再通过调用底层的封装函数，完成射频板初始化、更改增益、 射频频率、AD/DA釆样率等功能。射频板启动的时候，首先通过读取ROM中的 相应信息获取FPGA开发板的具体型号，根据型号调用相应的参数设置，然后初 始化HCinit函数，依次启动并初始化时钟芯片、调制解调器、放大器、DAC、ADC 芯片，使得射频板开始运转。然后初始化接收链路，启动ADC芯片时钟电源供 电、时钟同步、L。频率校准，启动锁相环、混频器、ADF4351解调器电源供电 (a df435l_o ut_a Itvo Itage0_powe ro n ),设置接收链路的射频中 心频率 (XCOMM_SetRxFrequency),设置 ADC 芯片的采样速率(XCOMM_ SetAdcSamplingRate),初始化ad8366和ad9643,设置程控放大器的接收增益 (XCOMM_SetRxGain),完成接收链路的初始化。发送链路也可以釆用相似的配 置顺序，依次配置各个功能模块为系统所需的模式，整个射频板便可正常的运转 起来。
4.2基于FPGA的基带处理子系统设计
基带处理子系统是频谱感知平台设计的核心部分，它是指从FMC接口接收 到射频板的ADC数据之后，以及处理完成传送给DMA之前的基带信号算法处理 部分。主要包括降釆样和抗混叠滤波器(DDC)、AXI配置总线设计、频谱感知硬 件控制部分、时域加窗模块、复FFT变换模块、频谱能量与均值模块几个部分, 输入端是ADC釆样后的信号，输出端是平均之后的各个频点的频谱能量值。整 个处理子系统稳定运行在200MHz时钟频率下，其与基于Microblaze SOC系统和 射频前端系统的数据通信均通过跨时钟域FIFO完成对跨时钟域的处理。


图4-5基带处理子系统信号处理过程
基带处理子系统详细的信号处理过程见图4-5, ADC驱动部分处理后的复釆 样信号，首先经过时域加窗处理，然后经过163.84Msps今81.92Msps的降釆样抽 取滤波处理，随后是FFT变换得到频域信号值、CORDIC算法求取复频域信号的 实虚部平方和得到各个拼点的频谱能量值，得到频域能量值之后对128帧的数据 求一次平均得到一次感知的频谱能量数据，控制部分由AXI-to-IP Bridge总线桥从 Microblaze软件层下发配置完成控制功能。
4.2.1降采样滤波器设计与实现
35
4.2.1.1降釆样滤波器的原理
多釆样率转换技术是指对信号的采样率进行抽取或内插处理【31],以便于信 号的存储、传送和处理，根据信号的具体情况(如工作频率、带宽、处理目的)不 同，所采用的方法也不一样。频谱感知前端ADC复釆样的釆样率为163.84Msps, 而真实有用带宽仅为60MHz,为了减小由于抽样率太高造成的数据冗余，需要 降低数据釆样率，本设计将前端的复基带信号从163.84M釆样率降至81.92M釆 样率，釆用信号抽取的方式会造成信号在频域的混叠失真，所以需要设计一个低 通滤波器防止混叠的发生，下面会对其详细的原理进行分析与设计。
设x(n)=x(t)lt=nTs,抽样频率fs缩小M倍也即相当于在x(/i)中每隔M点抽走 一个点，并由抽出的所有点组成一个全新的序列x，(n),即
x '(m) =	m = -oo ~ +co	(4-1)
为了观察x5)和xS)的实频域关系，定义一个新的中间的序列xi(n)：
fx(m) m = 0,+M,±2M,...
商=［。	其他
co
xx(m) = x(m)p(m) = x(m)8(m -")	(4-2b)
i=-O3
上式p(m)是一个脉冲序列，它的全是零，除了在M的整数倍地方的点。令
} M表示M倍的降釆样即M倍的抽取操作，那么(4.1)和(4.2)式表达的意思如图 4-6所示，图中M=3o .
图中(a)为原始的实信号即为x(n),而(b)为X2(n), (c测为抽取即降釆样后的 信号x'S)。显然
8.	00
= £ x'(n)e-j6m = £ x(Mn)eTjco
Fl =—00	U=TO
=£ xx{Mn)eJmn =X】(e心)
n=-co
X|(必)=£ 欢)p(〃)e5”=支
36

图4-6信号的抽取示意图

所以，
1 M-\
X &= —y	)	(4-4)
式中X，(卵)和X(d。)分别是X0)和x(n)的DTFT。由此可以看出，乂，(吨)是原始 实信号对应的频谱X(a。)首先作M倍的频域扩展之后再在3轴上面每隔2n/M的 位置进行移位叠加而得到的。从抽样定理的定义中可知，在第一次抽样的时候， 对x(t)保证fs洵c即抽样频率满足奈圭斯特频率，那么抽样之后就不会发生混叠 现象，在对信号x(n)作m倍的降釆样也即m倍的抽取后得得到信号x'(n),如果 想要从x，S)重建和复原x(t)信号，那么,X，(/)的一个周期长度(-兀/ M~n / M)应 该是等于X(/£?)的，根据奈圭斯特釆样定律要求抽样采样频率与信号中最高的频 率分量之间必须满足关系fs^2Mfc.如果不满足这个奈圭斯特釆样关系，那么 X，(州就会出现混叠现象。由于实际应用中抽取数值M是可变的，所以要做到在 不同的M值下面都确保fsN2Mfc是很难做到的。所以，一般都会在进行抽取操 作之前首先对信号x(n)进行一个抗混叠的低通滤波操作，然后在进行降采样的抽 取操作。
4.2.1.2降釆样滤波器的参数设计
由上一小节的分析，为了尽量避免目标信号在降釆样抽取操作后发生混叠现 象，我们必须要在抽取操作进行之前进行一个抗混叠低通滤波的操作，抗混叠低 通滤波器的频率响应为：(抽取因子D=2)
37
1	I w |v —
H"）=	1 ]~D	（4-5）
[o	其他
数据釆样率fs = 163.84M,每次感知的频谱带宽为60MHz,所以抗混叠低 通滤波器的-3dB截止频率应该为30M,对应0.36 6271 <兀/2,（感知基带带宽为 60M）o严格意义上讲，由式（1）知滤波器的频率响应在w >w_p=兀/2时值为0, 即要满足在w_p=兀/2处的衰减达到-50dB,对应时域频率为40.96M。但是由于 感知带宽（频域正半轴）为30M而非40.96M,分析频域图形可知只要在w_stop = 2n/D — 2n * f_signal/fjs = n — 0.3662n = 0.6338it ,对应频率为fstop = 51.92M处的衰减达到-50dB,抽取操作之后发生折叠的部分为30M〜51.92M的 部分，有用信号0〜30M并未受到影响，所以取/；吨=51.92M。
4.2.1.3降釆样滤波器的性能分析
为了减少滤波过程中的运算复杂度，尽量减少FPGA中乘法器的使用数量, 在满足性能要求的前提下滤波器的阶数越小越好。滤波器最终的阶数选择了 32 阶，使用beta=4的凯塞尔窗生成的低通滤波器，滤除抽取的镜像。



图4-7是降釆样滤波器设计的Matlab仿真整体效果图，浅红色横线是-3dB 线，从左到右的红色竖线、黄色竖线依次是30MHz （通带截止频率）,51.92MHz （阻带衰减截止频率）。
.	38

Magnitude Response (dB)

0.05	0.1	0.15	0.25	0,3	。35
Normalized Frequency (\times\pi rad/sample)

图4-8抗混叠滤波器通带波动细节图
图4-8是降釆样滤波器的Matlab仿真的通带波动细节图。图中浅红色横线 是-3dB线，红色竖线是30MHz,可以看岀整个通带内的波动非常小，小于O.ldB, 通带内的性能满足要求，且通带截止频率点30MHz处的衰减小于O.ldB,满足平 坦性要求。
Magnitude Response (dB)

图4-9抗混叠滤波器阻带衰减细节图

图4-9是降釆样滤波器的Matlab仿真的阻带衰减细节图。图中黄色竖线为
39

51.92MHz,可以看到51.92MHz处的衰减约为-53dB,小于-5OdB,且51.92MHz
之后的频带衰减都小于-50dB,满足要求。
4.2.1.4降采样滤波器的硬件实现
降釆样滤波器的FPGA实现采用Verilog HDL硬件编程语言，借助Xilinx公 司提供的免费LogicCORE IP FIR Compiler v6.3,使用Matlab平台设计出的滤波 器参数进行例化FIR Compiler IP核，根据系统的设计要求和接口规范，进一步 对接口和时钟等参数进行封装,便完成降釆样抗混叠滤波器模块的FPGA硬件实
现。

1
Set to Display: 1	Range: 1..1
Passband	Stop band
Range : 底一］. 际赤］碩将-际
Min -0.038331 dB
Max 0.046747 d8	-51.208593 dB
Ripple : 0.085078 dB
图4-10 FIR Compiler IP生成时的频率响应曲线

图中，红色为理想的频率响应曲线，蓝色为定点化之后的频率响应曲线，可 以看到红色线和蓝色线几乎重合。且通带和阻带的频率点也正好吻合， 60MHz/163.84MHz = 0.3662, •为通带截止频率，1-0.3662=0.6338为阻带截止频率， 与图中参数基本吻合。通带最小衰减-0.0383dB<0.1dB,最大衰减0.0467dB<0.1dB, 同带内波动0.085078dB<0.1dB,各项参数均满足要求。
滤波器模块的接口信息见表4-5。整个滤波器工作在当个时钟频率之上，时 钟大小等于ADC釆样率的大小，为163.84MHz,输入侧除了复位信号和时钟之 外，主要是滤波器的AXI-Stream Slave接口的三个简单信号，valid信号和ready 信号分别来自前一级设备和当前设备，只有当两者均为高电平时才表示握手成功, 当前传输的16bit数据才会有效，被输送到滤波器运算单元。输出侧的信号主要 与下一级的AXI-Stream Slave接口相连，这里只有一个valid信号和一个40bit的
数据信号，滤波器内部包含2倍的抽取操作，所以输出数据平均两个时钟输出一 个有效数据，valid用来标示有效数据的位置，输出侧没有ready信号，表示输出 侧不能被阻塞，如果下一级不能按时接收数据，滤波器模块会直接丢弃数据。40bit 的数据是因为运算过程中保留了所有的精度，直到最后滤波器输出之后再进行位 宽截取和定点化处理。
表4-5滤波器模块设计接口信息
163.84MHz 时钟

图4-11滤波器封装Wrapper的功能结构图
滤波器模块编写完成并使用Modelsim仿真验证之后，需要对其进行封装和 必要跨时钟域处理。滤波器封装Wrapper的功能为：首先对IQ数据进行分离， 分为I、Q两路信号分别进行滤波处理，每一路滤波和抽取之后会进行一个定点 化处理，两路处理完成之后再次进行IQ数据合并，低16为表示I数据（实部）， 高16位表示Q数据（虚部），IQ数据合并之后需要经过一个跨时钟域的数据缓 冲处理，因为降采样滤波之后的是基带信号处理部分都运行在200MHz时钟下， 所以需要在输出时做一个跨时钟域的处理。滤波器封装模块内部完全釆用流式处
41
理的结构，属于有握手功能的流式处理，不需要额外的控制信息便可稳定正常运 转。滤波器封装Wrapper模块的功能结构图如图4-11所示。
4.2.2时域加窗模块的设计与实现
时域采样的单次时间间隔即时间采样周期，其长度的倒数对应频率分辨率的 大小，所以两次釆样之间的间隔越短，频谱分辨率就会越高。FFT转换对应的分 频谱分辨率为采样时间的倒数，即1/t。在实际的釆样中，为了节省资源的需要， 会尽可能减少釆样的次数，而这就意味着降低频率分辨率，而频率分辨率降低将 会导致一个很严重的问题——栅栏效应El。
假设采样的总个数是N,那么有采样的频率=1。=采样周期N/t的倒数，对 于频域有釆样频率=(l/t)*No当釆样长度t正好为整数倍n个输入信号T的周期 时，频域的频率分辨率为1/nTo此时，频域n个点正好能得到输入信号的频率 点所对应的幅度值。而对于总釆样时间不是输入信号T的整数倍周期时，如果不 加窗加以处理，就可能出现频率泄露，这就造成了栅栏效应。栅栏效应就好像透 过栅栏观赏风景一样，被栅栏挡住的那部分频谱是看不到的，只能看到缝隙也即 频率釆样点对应的那部分频谱，这样就很容易导致有某一部分的有用频谱会被无 意中漏掉，而这部分被滤掉的频谱能量会扩散到其他频点，甚至扩散到带外。
Blackman-Harris Window
1 -
0.8
0.6
0.4
0.2-
oL
0	1000	2000	3000	4000	5000	6000	7000	8000
图4.12布莱克曼哈里斯窗时域响应
硬件的能力是有限的，实际中无法做到无限地提高采样率。如果存在某个窄
42
带信号，其带宽小于频谱分辨率时而且正好处在栅栏挡住的那部分时，就会出现 栅栏效应。而这个窄带信号的功率扩散到临近的频点，造成频谱扩散，如果这个 窄带信号的功率很大会导致严重的带外扩散。窗函数可以有效减少频谱能量的泄 露，可采用不同的截取函数对信号进行截断，这个截断函数就是窗函数，布莱克 曼窗主瓣比较宽，同时它的旁瓣又很小，虽然频谱分辨率不尽人意，但是它的幅 度识别精度表现优异，所以这里我们引入布莱克曼哈里斯窗来解决栅栏效应引起 的问题，布莱克曼哈里斯窗时域响应如图4-12所示。


图4-13时域加窗模块硬件实现结构图
表4-6时域加窗封装模块接口信息
Name	Port Width	Direction	Description
rstn	1	I	输入复位信号，低电平有效
elk	1	1	输入时钟，运算处理时钟，200MHz
s_axis _tvalid	1	I	AXI-Stream Slave接口输入valid信号，为1表示 对应数据为有效数据，为0表示数据无效
s_axis _tready	1	0	AXI-Stream Slave接口输出ready信号，为1表示 当前设备空闲可接收数据，为。则表示设备忙碌
s_axis _tdata	32	1	AXI-Stream Slave 接 口输入 data 信号，位宽 32bit,
输入为降采样滤波器处理后的数据
m_axis _tvalid	1	0	AXI-Stream Master 接口输岀 valid 信号，为］表 示对应输岀数据有效，为0表示对应数据无效
m__axis _tready	1	1	AXI-Stream Master 接口输入 ready 信号，为 1 表
示下级设备空闲，为0表示下级设备忙碌
m_axis _tdata	32	0	AXI-Stream Master接口输出data信号，加窗处
43
理之后的数据，低16bit实部，高16bit虚部
\	.		 ■	，一，......	.		"_ 匚
时域加窗模块的硬件实现结构框图见图4-13,图中可以看到在硬件实现中， 此模块主要完成一个乘法功能，将输入数据与对应的加窗系数进行一个乘法操作, 时域窗系数存储在ROM当中，有一个ROM地址发生器模块来维护ROM读取的 地址变化，乘法完成之后，输出数据位宽是36位，对输出数据做定点化处理之 后，经过一个缓冲FIFO输出给下一级，接口采用AXI-Stream。此模块完全流式 处理，不需要额外的控制信息。
表4-6展示了时域加窗处理模块的接口信号信息，输入接口与输出接口均采 用AXI-Stream接口，输入侧是降采样滤波器模块的输岀数据，经过时域加窗处理 之后，经过FIFO缓冲釆用AXI-Stream Master接口输出tQ数据。valid和ready信 号保证成功握手后正确传输数据。
4.2.3复FFT变换模块的设计与实现
4.2.3.1 FFT算法思想与原理
经过时域加窗处理之后，复FFT变换模块将对降釆样之后的81.92MHz带宽 的频谱感知信号进行时频域变换，FFT点数取8192点，频域分辨率达到 81.92MHz/8192=10kHzo该模块主要是借助Xilinx公司免费提供的FFTIP核， 对其各接口信号进行约束，加之以适当的配置和封装，使之符合设计中的总线和 接口规范，进一步例化到基带处理子系统的模块之中。
快速傅里叶变换(FFT)是一种演变的、改良的变换，是离散傅里叶变换(DFT) 的快速实现算法，在数字信号处理中极为有用，被誉为20世纪十大算法之一。 釆用FFT,可以达到DFT运算一样的数据结果，而且运算过程的计算复杂度大 大缩减，至少降低一到两个数量级，使得FFT运算可以应用于多种场合甚至实 时性要求苛刻的高速率、高吞吐率场景。目前巳经有很多类型的DFT和FFT算 法，但总的来说可以分为时间抽选法和频率抽选法。
DFT的定义如下：
N-1
X［明=	昭"	(4-6a)
轮］=£x［加质妬	(4-6b)
使用DFT来近似连续傅里叶变换时，不得不注意会对信号在实频域上产生的 影响：
1.时域釆样满足奈圭斯特采样定律：也就是时域采样的釆样频率要大于等 于信号中最高频率分量的两倍。
44
2.对信号按照奈圭斯特釆样之后，时间函数是连续周期的，设DFT是N次 釆样得到的，那么假如没能在N次釆样窗内完成釆样，在频域上产生的 影响就会是频谱的泄露，栅栏效应。
从式(4-6a)和式(4-6b)分析，直接进行DFT运算的时候，DFT的运算量 特别大，是级别的，这样当N的点数较大的时候，验证拖慢了 DFT运算的速 度和效率。而FFT的出现便是为了解决DFT的这个问题，FFT的思想是将N点(前 提是N是2的整数幕)的DFT逐次分解，每次分解进行二分拆分，一直到拆分 到每组只有2点的时候为止。从时间轴上进行拆分的方法叫做时间抽选法，而相 应地从频谱上进行拆分的方法叫做频率抽选法。本文所采用的即为基于时间抽选 法的FFT算法。
假设输入信号的列向量为x[〃] = [x(0),..,x(N-l)]7',其DFT的输出信号列向 量为X[幻= [X(O),...,X(N-1)『。将集合x[n]分解为两个交错集合，一个由偶数 点组成，另一个由奇数点组成。利用此分解法，可以得到：
X(幻=Y(k) + 喉 Z(幻,* = 0,1,N / 2 -1	(4-7a )
X(k + N / 2) = Y(k) — W&Z(k),k	N / 2-1	(4-7b)
可以看出，釆用相同的矩阵运算，最后仅求和符号不一样，每次运算都将N 阶矩阵分解为两个N/2阶进行，一直到最后转化为二阶矩阵。前提是要求N是2 的整数幕，所以实际应用中FFT的长度都是2的证书幕长度。此类的FFT算法 称为基2的FFT算法。硬件实现时，FFT核的实现采用的也是基于时间抽选法 的基2FFT算法。
4.23.2 FFT的硬件实现原理
对于FFT算法的硬件实现，下面将主要讨论一下地址发生器、蝶形运算单 元、存储单元组和系统控制器。常见的FFT实现结构框图如图4-14所示。

1.系统控制器
FFT的系统控制器主要对整个运算的各个层级进行协调以及参数分配， FFT中的每一层就是一个蝶形运算单元，不同的层级之间由于乘法的关系可 能会导致数据的溢出，所以在硬件实现的时候，每一级蝶形运算之后都会进 行一定的定点化，为的就是防止运算结果参数的溢出。每一个小的蝶形运算 单元会有一个小的状态机来控制，而所有的蝶形运算之间由一个总的状态机 来控制，同时系统控制器还需要控制地址模块的产生以及存储的有序处理。
2.蝶形运算单元
蝶形运算单元是FFT的基本单元，也是FFT运算的核心单元，它主要 包括旋转因子、乘法和加减组合逻辑，典型的蝶形运算如果4-15所示，共 包括两次复数的加法(减法)，以及一次的复数相乘。

图4-15蝶形运算单元

A、B表示两路输入，C、D表示运算之后的输出，昭为旋转因子，决 定着不同蝶形单元的不同。如前面所述，每一级蝶形运算都可能因为乘法导 致数据的溢出，所以每一级蝶形运算都要做一个定点化的方案，来决定蝶形 运算的输入缩减几倍再进行下一步的运算。实现中会在蝶形单元的每一路输 出乘以一个0.5的因子，对于L = logA/级的FFT运算，就是乘了 (1/2与=1M的比例因子。经过上述的运算处理，可表示如下：
C = 0.5(A + BW^)	(4-10a)
D = Q.5(<A-BW^	(4-1 Ob)
3,存储单元组
存储单元主要用来存储运算的中间结果，包括蝶形运算结果的数据以及 每一级蝶形运算的旋转因子。FFT的硬件实现时，实部虚部均为16bit位宽， N点FFT来说，一次FFT变换的输入数据大小时32xN bit,这些数据同样 需要存储单元来保存起来。数据被保存在32bit位宽的双口 RAM中，Xilinx 的FPGA尤其是Virtex-6系列芯片包含丰富的块RAM资源，可编程来实现 每一个端口从16Kxlbit到512x32bit的深度和位宽。此外，还可以用多块RAM
46

存储器级联成大型内嵌存储块。
4.地址发生器
FFT中地址发生器模块的结构图如图4-16所示。

图4-16 FFT中地址发生器模块的结构图

地址发生器的功能分为以下几个：1.每一级的蝶形运算之后顺序是乱序 的，需要地址发生器完成乱序到自然序列的重新排序；2.完成级与级之间蝶 形单元运算结果与运算输入数据的地址对接；3.从RAM中读取对应蝶形单 元的旋转因子；4.蝶形运算单元计算完成之后，将对应数据存在对应地址的 RAM中，地址需要对应，并利于之后的倒序顺序的重新排序。
4.2.2.S FFT模块的封装与实现
在ISE 13.4版本中，提供了免费的FFT/IFFT的IPCore,可以完成各个场景 下的FFT及IFFT运算，配置灵活，长度可调，多路复用。FFT IP Core的用户界 面如图4-17所示。

图4-17 FFTIP Core的用户界面

FFT的IP Core提供了 3中结构，分别为：
> 流水线，Pipelined Streaming I/O结构：允许连续的数据处理;
47

>基4, Burst I/O结构：分为数据导入/导出阶段，以及运算处理阶段，运 算时间较久，数据需要以burst的形式输入，而不是流式输入；
>基2, Burst I/O结构：相对于基4的Burst I/O结构使用了较少的逻辑资 源，其他类似，也不支持流式的数据运算。
考虑系统的需求，需要在200MHz的时钟频率下高速运转，所以考虑使用流 式的Pipelined Streaming I/O处理结构，它可支持连续的数据输入、输出和运算， 并能满足系统的实时性要求。流式的计算，流水线的处理结构，再借助FPGA并 行计算的能力，可以大大加快FFT的运算，使得当天帧的数据正在加载的同时， 有另一帧数据正在运算之中，同时还有一帧数据正在输出接口输出。Pipelined Streaming I/O结构是由很多基2的蝶形单元构成的，其结构如图4-18所示。

设计中将FFT IP核的配置为流水线型、Pipelined Streaming I/O模式，单通 道8192点的FFT,运行时钟稳定在200MHz,以满足实时性处理的要求oPipelined Streaming I/O模式的内部是基-2的时间抽选法的蝶形运算，级与级之间采用四舍

不会导致数据溢出。

FFT Wrapper封装模块的整体结构图见图4-19。首先对生成的FFT IP Core
48
的Verilog文件进行封装，封装为fft_wrapper。封装中，首先定义变量检测FFT 的运算状态，是否有溢出、运算出错、数据长度不符等错误，由于配置的是 Unsealed模式，输出的实部和虚部均为32bit,所以对FFT的输出需要做定点化， 以防止输入太大时产生溢出的现象，最后FFT运算结果进行下一步的处理。
FFT运算之后有一步去冗余的操作，频谱感知的每帧数据长度是8192,对 应81.92MHz带宽的频谱数据，其中靠近中心频点的60MHz带宽内的频谱数据 是我们利用的数据，最靠近边缘的21.92MHz带宽的信号由于干扰和不平坦等因 素弃之不用。靠近中心频点的60MHz带宽信号位于FFT之后数据的两端，即起 始处的3000点和末尾处的3000点，此处会进一步提取岀每一帧数据中6000个 有用频谱信息，然后经过一个小FIFO作为缓冲处理，传递给下一级处理，即求 频谱能量和求均值模块。
配置寄存器接口下发配置信息，共分为两种：第一种是为FFTIPCore正常 工作提供必要配置信息，主要为FFT的正/反变换信息和运算精度信息，每一帧 FFT需要下发一个配置，IP Core内部的配置缓冲BUFFER可以缓存8个配置， 因为系统中每一帧的配置信息均相同，故可连续不断下发相同的配置信息；第二 种是下发到定点化方案处对FFT全精度计算的结果进行截位取舍，此处的配置 信息可追溯到SOC系统软件层面，下发的具体值可以根据应用场景信噪比和信 号功率值的不同而进行灵活分配，以确保信号不会溢出。
FFT Wrapper模块的接口信号定义及说明见表4-7。输入和输出侧均采用 AXLStream接口模式，输入为Slave类型，输出为Master类型，Slave和Master 接口均使用valid和ready信号进行前后级设备的握手操作，此方法可高效可靠 地保证数据快速有效地被传递。
表4-7 FFT Wrapper封装模块接口信息
Name	Port Width	Direction	Description
rstn	　　.:1	:1 .'	复位信号，低电平有效
elk	　　■. if	　：.1	时钟信号，运算处理时钟，200MHz
sfft _wvalid	　　."1注	1	FFT输入端AXI-Stream Slave接口输入valid信号
sfft _wready	1	0	FFT输入端AXI-Stream Slave接口输出ready信号
sfft 三 wd ata	32	1	FFT 输入端 AXI-Stream Slave 接 口数据（data）信 号，位宽32bit,输入时域加窗处理后的数据
mfft _wvalid	.....""I.—	0	FFT 输出端 AXI-Stream Master 接口输出 valid 信号
mfft ^wready	　　...1		FFT 输出端 AXI-Stream Master 接口输入 ready 信号

49

mfft _wdata	32	　。0	FFT输岀端AXI-Stream Master接口输出复频域数据 (data)信号，低16bit实部，高16bit虚部

4.2.4频谱能量均值模块的设计与实现
数据从FFT模块输出后是I/Q频域信号，对I/Q两路信号求取平方加和就可 以得到信号的能量，鉴于数据的流式处理，所以保证信号的时序对齐尤为重要。 为了使得到的频谱能量数值能够更具代表性，在处理过程中对得到的频谱能量数 据进行一个128次求平均的过程，所以在得到频谱能量数值后，我们还需要设计 对多组信号能量求平均的功能。
4.2.4.1 MUIT18X18S乘法器的使用
传统的乘、除等计算方法，需要占用大量的FPGA资源，Xilinx Virtex-6系列 的FPGA提供了内置的乘法器模块MULT18X18S可供调用,MULT18X18S是Xilinx 提供的内置的原语操作，用户加入相应的库便可以直接调用使用乘法原语，但意 FPGA内部乘法器数量极少，在充分利用的同时需保证使用的乘法器总数不超过 FPGA内置乘法器数量。



MULT18X18S是一个18bit X 18bit的有符号数乘法器，包括一个输出信号和 五个输入信号，其信号接口图如图4-20所示。乘法器模块包括一个输出信号P, 和五个输入信号A, B, C, CE和Ro寄存器的GSR脉冲之后，即复位信号R使 能之后，乘法器内部寄存器的值被初始化为0,输入的A、B为两个18bit宽的有 符号数，输出P是36bit宽的A和B相乘的结果。C是乘法器的时钟信号，用来 驱动乘法器的运算速率，CE是乘法器的使能信号。
MUU18X18S的逻辑运算关系如表4-8所示。CE的存在可以确保乘法器具有 阻塞能力，当流式计算过程中CE突然拉低时，乘法器会暂停计算，并保存所有 中间结果，进入待命状态，等待CE再次拉高时从暂停时保存的中间数据开始计 算。流式计算过程中，数据输入与得到乘法结果之间的延迟仅为1个时钟节拍。
表4-8 MULTI8X18S乘法器逻辑关系表
输入信号	输出信号
c	CE	A[17:0]	B[17:0]	R
…… 			P[35:0]
t	X	X	X	1	0
t	1	数据A	数据B	0	AXB
X	0	X	X	0	保持

4.2.4.1频谱能量模块的实现
频谱能量值的求取主要是计算实部和虚部的平方和，MULT18X18S乘法器可 以方便的完成乘法操作，FPGA的逻辑资源也可以在一个时钟节拍内完成平方后 求和的计算。整个基带信号处理的实现和高吞吐率的保证都是建立在流水线型处 理的基础之上，对应复频谱数据求能量模块的数据处理依然是流式的数据处理形 式，这种形式的处理重点在于保证各个信号通路时序的正确性和计算过程中保持 数据之间的对应关系。复频谱数据求能量模块的流程图见图4-21o


图4-21复频谱数据求能量模块的流程图
输入IQ数据首先进行IQ分离，IQ两路的处理过程完全一致，保证了两路信 号到求和模块时的时序和延迟保持一致，不会发生数据错位。每一路信号首先进 行有符号位的扩展，从16bit有符号数变为18bit有符号数，然后相同数据输入 乘法器的两个输入接口 A和B, 一个时钟节拍的延退之后，得到的36bit有符号 数进行位宽截取操作，再次回归数据到16bit； IQ两路均完成平方取值操作后， 同时送入求和模块计算复频谱数据的实部和虚部平方和，即为该频点的频谱能量 值。最后计算出的数据经过FIFO缓冲之后送至下一级。
51
4.2.43均值模块的实现
使用MULT18X18S乘法器模块求出频谱能量值之后，对每一帧的6000个点 60MHz的频谱能量值做一个保存，存储在双口 Block RAM中，每一次保存之前先 做一次累加，与前N帧的对应频点能量值相加后写入对应地址的RAM空间。使 用两个Block RAM组成乒乓缓冲的结构，这样就能连续的处理流式数据，最终取 128帧能量数据的均值作为最后的输出。



图4-22 '求均值模块的乒乓缓冲处理结构图

128帧感知数据的频谱能量均值实现流程如图4-22所示，每一帧的6000个 点的值均与双口 Block RAM中对应地址中的值一一对应，对之后每一帧的数据， 找到当前点对应的Block RAM中的地址，根据地址取出Block RAM中的存储值， 累加之后再次存储到Block RAM的对应地址中，同时有个计数器和尾指针指示当 前帧的末尾处。每来一帧6000个点的频谱能量数据，都会依次与Block RAM中 存储的值完成依次累加，设置一个状态机，控制累加帧的个数达到128次之后输 出128次频谱能量值累加的结果，然后状态机的状态紧接着进入下一次128次求 平均之中。而对128个帧数据累加后的和数据，整除128得到每个帧中各个点的 频谱能量值的平均值，128取值的原因正好是2的整数幕，二进制做除法的时候 可以轻松去掉低7bit的数据，并根据第7bit的大小决定四舍五入的值，以此可 在一个时钟周期内快速完成求平均值的除法，并取了四舍五入的结果。
4.3基于Microblaze的SOC系统设计与实现
控制系统作为整个频谱感知平台的硬件控制中心，控制着硬件系统的运转, 确保系统稳定运行的鲁棒性，具有举足轻重的地位。控制系统釆用基于Microblaze
52
CPU的SOC结构，其釆用AXI/AXI-Lite总线架构，使用Microblaze嵌入式处理作 为firmware程序的执行单元，DDR3 SDRAM存储器作为系统的主存，不仅要存储 firmware程序执行指令和程序动态开辟的存储空间，还要作为Ethernet和DMA 传输的缓冲单元。Ethernet控制器完成以太网底层协议处理，为控制系统与上位 机PC程序提供以太网通信的基本功能oDMA引擎连接频谱感知信号处理子系统, 将感知得到的频谱数据转存到主存中。射频子板RTL驱动模块和整个基带处理子 系统均独立封装为IP核的形式，以IP Peripheral的形式挂载到Microblaze CPU之 上，作为SOC系统的一个外部信号处理设备，不同IP Peripheral之间以及IP Peripheral与Microblaze之间的通信接口均釆用AXI-Stream的形式，可实现高速 率、流式握手式数据传输。
4.3.1基于Microblaze的SOC系统结构设计
SOC系统的搭建釆用XPS来完成，XPS是Xilinx嵌入式开发套件(EDK)的 一部分，它包括XPS的图形用户接口(GUI)和所有的在图形界面下来处理硬件和 软件系统组件的工具，你能够在XPS环境中进行系统验证。首先使用XPS设计嵌 入式处理器系统，使用ISE工程向导加载嵌入式处理器系统的硬件IP核和外围设
备，以及自定义逻辑。

控制系统的SOC设计框架图如图4-23所示。对于挂接到PLB上的IP核，不 管是HARD_ETHERNET_MAC还是FLASH. LEDS等，都可以通过软件调用相关API
53 来操作那个它们的内部接口。Microblaze运行在100MHz时钟频率下，其系统总 线和以太网、DMA、DDR3模块也都运行在100MHz频率下，而频谱感知的基带 处理子系统的RTL设计运行在200MHz时钟频率下，跨时钟域的处理全部在RTL 级设计中完成，并且基带处理子系统最终封装为一个单独的IP设备，像以太网、 DMA引擎、FLASH 一样挂载到Microblaze处理器之上。
4.3.2 Microblaze控制系统Firmware程序设计
复杂的控制功能最终要通过软件来实现，Microblaze控制系统的Firmware 程序使用C语言编写完成，通过软件调用相应的API完成对各个挂载在Microblaze 上的IP核内部功能的控制，而各个IP设备在Microblaze上的配置均是以地址映 射的方式完成的，软件可以通过访问相应的地址空间实现API控制。
Firmware软件控制程序的基本框架图如图4-24所示：
Firmware软件控制程序共包括三个部分：DMA数据传输、以太网数据传输、 频谱感知逻辑控制及参数计算。其中DMA引擎的数据传输功能与频谱感知扫频 的控制功能需要并行不间断的运行，由于Microblaze CPU是在单核的情况下串行 运行，不支持类似Linux的多线程操作，为了克服这个问题，Firmware的设计中 使用消息队列的数据结构，每个过程的处理中都将频谱数据或控制信息存储在队 列中，每个队列的读与写代表着这个过程两端的操作，这样，程序运行中只需要 维护各自的队列即可。
54
Spectrm
Energy DATA

图4-24 Firmware软件控制程序的基本框架

DMA (Direct Memory Access)允许不同速度的硬件装置来沟通，而不需要 依赖CPU的大量中断负载。否则，CPU需要从来源把每一片段的资料复制到暂 存器，然后把他们再次写回到新的地方，而在这个时间内，CPU对于其他的工作 来说就无法使用。DMA传输直接将数据从一个内存区复制到另一个，对DMA来 说，主从设备均被视为内存区域的某一片区域，其自身特点使其特别适合用来传 输大数据的通信，系统中的频谱能量数据会持续不断的从底层RTL传输至 Microblaze,因此此处使用DMA可以大大提高系统的效率。Xilinx系统的可挂载 与Microblaze的DMA引擎设备是基于AXI-Stream接口的，和频谱感知系统各个 子模块釆用的接口一致，可通过Microblaze平台直接相连进行数据通信。
频谱感知系统的扫频控制是整个系统控制的核心，它控制何时下发配置信息、 何时进行DMA引擎的启动接收工作。底层基带处理子系统只有在接收到一次配 置信息之后才会进行一次频谱感知的处理，包括扑捉128帧数据求出频谱能量的 平均值。初始化开始，扫频控制中心会启动一次配置的下发，底层基带处理模块 收到配置后开始基带处理，与此同时，扫频控制中心会提前启动DMA的接收工 作，DMA等待接收基带处理后的数据，将其存在数据队列之中。控制中心时刻 监控DMA接收的状态，一旦接收完成，便通过射频子板的API更改射频的中心 频率，进行下一个频段的频谱感知工作，同时下发配置信息和启动下一帧DMA
55 数据的接收工作。依此规律，DMA接收工作和基带处理持续的运转。DMA接收 每一帧数据都会添加一个帧头数据作为标示，标示这帧数据是整个2.4GHz (600MHz~3.0GHz)感知频段的起始、末尾或者中间频段数据，以方便PC接收 到数据之后进行相应的拼接工作。
Microblaze平台的以太网传输通过Ethernet设备，并基于轻量级的TCP/IP协 议簇的LWIP (Light WeightIP)实现Socket数据传输。控制系统初始化时会与PC 机的Server建立一个Socket长连接，之后以太网通信程序会时刻监控数据队列 里面的数据，一旦数据队列非空，即已有DMA成功接收的频谱数据，便开始一 帧数据的Socket传送，直到数据队列为空，以太网便会等待DMA接收数据并每 隔一段时间扫描一次数据队列。
4.3.3 AXI配置总线设计与感知控制的实现
为了获得频谱感知系统的高吞吐率和稳定性，基于Microblaze的SOC控制 系统稳定工作在100MHz的时钟频率下，而频谱感知的前端ADC釆样率是 163.84Msps,运行在163.84MHz下，基带处理子系统运行在200MHz时钟频率下， 所以控制系统总线从Microblaze软件层面下发到基带处理的RTL代码需要经过跨 时钟域的处理。系统设计中跨时钟域的处理采用异步FIFO来实现，基于各个模 块之间的接口均是AXI-Stream的，所以考虑设计一个AXI-Lite接口的总线桥用以 系统软件层面的配置信息。将基带处理子系统各模块的寄存器映射到Microblaze 系统的总线地址空间，按照AXI-Lite协议一次下发各个模块的配置，配置信息经 过一个跨时钟域的FIFO作为缓冲,传送到200MHz时钟下的基带处理单元模块。
AXI (Advanced extensible Interface)总线协议是 ARM 公司推出的 AMBA (Advanced Microcontroller Bus Architecture) 3.0 协议族中最重要的一部分【囘，是 一种面向低延时、高带宽、高性能的片上总线协议，它的数据传输可以允许数据 并不对齐，并且可以在临时触发的传输中只提供起始地址即可，类似于哈佛的思 想它的数据读和写通道也是分离的，而且支持乱序、无规则的地址访问以及大数 据的持续数据传输，此外，AXI总线更容易也更适合在FPGA硬件中实现，它的 时序可以满足高速率、高吞吐量的要求，更容易得到收敛，对复杂的FPGA硬件 系统是一把不可多得的利器。而AXI-Lite协议是AXI协议的一个子集，它简化了 AXI协议的传输操作和接口定义，专门用来作为系统级的元件module之间数据 通信和配置传输，AXI-Lite采用简化的接口设计来完成对应地址的映射关系，使 得它的重要接口只剩下valid和ready的握手操作来完成前后级的匹配与对接， 这样的设计会占用更少的资源、逻辑易于实现、便于硬件调试和验证、简化接口 连接、且接口较小。AXI-Lite接口有很多表现优秀的特性：通信数据的猝发长度
56
均为1,前后级通信的数据宽度和大小、总线宽度均相等，并支持多种类型的数 据宽度（32位和64位），其对互斥性的操作并不提供支持。总结来说，AXI-Lite 总线一共包含五个通道：读数据通道、写数据通道、读地址通道、写地址通道、 和写应答通道，每个通信通道都有valid和ready信号握手操作。
如图4-25所示，AXI-Lite to IP bridge模块主要分为四个部分：AXI_SINK, AXI_RESPONES_ABITRATOR, AXI_ASYNC_COUPLER 和 AXI_TARGET。AXI_SINK 模块 负责对从Microblaze平台上AXI总线上写下的读写地址进行译码翻译，判断其地 址是否属于频谱感知基带处理子系统各个处理单元的地址空间，如果是属于基带 处理子系统的处理单元的地址，则会写地址、写数据、读地址收下，并转发给 AXI_ASYNC_COUPLER模块。接着，AXI_ASYNC_COUPLER模块中针对各个配置通 道各有一个跨时钟域处理的异步FIFO,用以将通道的数据和地址进行跨时钟域的 处理。然后，AXI_RESPONSE_ARBITRATOR模块将读写的请求通过广播传给其下的 TARGET模块，并等待接收TARGET模块对读写请求的应答和响应。TARGET模块 有两种：第一种为AXI_REG_TARGET,它的地址空间对应一个寄存器，仅当读或 写的地址与TARGET对应寄存器地址完全一致的时候才会对读、写请求进行响应， 对AXI_REG_TARGET发起的写操作会使得目标寄存器所需要更新的配置字的值发 送到对应的REG_TARGET中，而发起的读操作会去读取REG_TARGET中对应的缓 冲写入配置字的数目；另一种TARGET模块叫做AXI_MEM_TARGET,它的地址端 对应一段由内存映射而成的连续空间，当读写地址位于该地址范围时，对读和写 的请求进行相应。REG_TARGET寄存器类型的TARGET用于寄存器类型的配置通 道进行访问，而MEM_TARGET类型的TARGET则用作内存映射式的配置信息的访 问和读取。MEM_TARGET模块会将读、写的请求收下，然后将写的数据输送至与 其相连的基带处理子系统处理单元并产生对应的写应答，对于读请求，从与它相 连的基带处理子系统处理单元中读取对应的值，产生读数据进行回传。如果所有 的MEM_TARGET都没有产生应答，会导致AXI_RESPONSE_ABITRATOR计时器超时 报警，对于写请求方面，会产生错误指示的响应，而对于读请求，会返回0作为 读数据。假如有TARGET产生了应答响应，则TARGE会将应答的结果数据回传给 AXI_ASYNC_COUPLER模块，对应答信息经过跨时钟域处理后返回给AXI_SINK, AXI_SINK进一步将其返还给AXI-Lite总线。假如长时间没有收到写请求或者读请 求的应答，并且AXI_SINK的计时超时，也会触发AXI-Lite总线产生应答，目的是 为了防止总线锁死、系统进入死循环。
57


Configl Config2 Config3
图4-25 AXI-Lite到基带处理子系统总线桥逻辑框图
通过AXI to IP Bridge总线桥单元，可以将基带处理子系统处理模块对应的配 置空间映射到Microblaze软件层面可以访问和控制的总线地址空间中，而控制系 统总线的配置信息可以可靠地传递到基带处理子系统的处理模块。
4.4基于Linux C++的控制子系统设计
频谱感知FPGA处理子系统与PC机的接口程序在Host Server的PC_Server 程序中完成。Host PC机的环境为Linux OS, PC Server与控制系统的firmware 通过以太网Socket进行数据传输，PC Server作为Socket连接的Server监听端 口,而firmware程序作为Socket连接的Client发起连接请求。控制系统的firmware 和PC_Server中均为发送数据/接收数据建立一个队列，用于缓冲接收到的数据， 尤其是控制系统的finnware程序，由于Microblaze中使用的是Lwip协议进行以 太网传输，其速率远不如百兆以太网的速率，所以需要一个队列暂时缓冲接收到 的感知数据，并控制保证数据的不溢出和跳频发生的时间点。
基于Linux的Host Server控制子系统的设计框图如图4-26：

图4-26基于Linux的Host Server控制子系统框图

图中可以看出，Host Server共需要处理来自两个Client的Socket请求，一个 是FPGA开发板，另一个是Matlab程序处理模块。FPGA开发板会在初始化时就 与Host Server建立一个长连接并与系统运行过程中保持连接不断，FPGA与Host Server的数据传输以帧为单位传输，每个帧包括6000个32bit的频谱均值能量数 据，和一个32bit的帧头，每个帧数据作为一个独立的单元经过解包去除帧头之 后，进行频谱能量的重新拼接，拼接为频谱轴上连续的一段60MHz频谱信号， 然后作为一个单元存储在数据队列中。而Matlab程序每次与Host Server的通信 都会建立一次Socket连接，从数据队里中取走一个帧的数据，然后断开Socket 连接，依此循环往复，一帧一帧的借助Host Server从FPGA开发板获取频谱能量 数据。
4.5基于Matlab的能量检测与实时演示系统设计
MATLAB作为当今世界上应用最为广泛的数学软件，具有非常强大的数值计 算、数据分析处理、系统分析、图形显示甚至符号运算的功能。本文的频谱感知 系统的宽带频谱能量检测算法部分的实现以及与频谱数据的通信功能和最终的 感知效果实时展示系统的实现均是在MATLAB上完成。
MATLAB提供了强大的工具包，在MATLAB上调用MinGW或Cygwin编译C 和C++程序，使得我们可以在Linux ±使用MATLAB编译C/C++程序代码，编译完 成的Mex程序可以在MATLAB中直接调用。
59


图4-27能量检测与实时演示模块实现框图
能量检测与实时演示实现框图如图4-27所示，此部分首先编写一个简单的 Socket程序，每次调用会与Host Server建立一次Socket连接，接收一个帧的数 据，一个帧数据包含6000点60MHz信号的频谱能量值和帧头信息。接收的以太 网帧包解包处理之后，获得帧头信息和频谱能量信息，频谱能量数据的排布需要 经过一定的频谱搬移获得与实际频谱匹配的频域信息，通过帧头信息的分析判断 当前帧是否为首帧数据，每次遇到首帧数据需要初始化整个频带的频域数据。 MATLAB中通过循环调用Socket程序持续获得频谱感知数据，对每一帧的数据拼 接组成整个频带内的频谱能量数据。得到均值后的宽带频谱能量数据之后，在 MATLAB中调用能量检测算法代码对频谱能量数据进行能量检测的判决，迭代完 成之后输出的判决结果和各个频段的频谱能量数据都会通过MATLAB的画图工 具实时显示出来。
4.6本章小结
本章采用自顶向上的设计方法，详细介绍了基于FPGA和AD-FMCOMMS1射 频子板的频谱感知链路系统的设计与实现，从链路系统架构开始逐个研究各个模 块的功能及框架结构，详细论述了射频前端子系统的驱动与控制设计、RTL级基 带处理子系统各模块的设计和实现、基于Microblaze CPU的SOC系统设计、基于 Linux的C++控制子系统设计与实现。
60
第五章系统仿真与测试
5.1射频子板模块性能测试与验证
射频子板模块的测试主要分为ADC接收信号质量的测试和噪声测试。射频 子板板载时钟芯片、ADC/DAC芯片、功率放大器芯片、调制/解调芯片等均需要 通过HC总线下发配置，且各个芯片间会存在一定的延时以及引入噪声，所以需 要对射频子板的接收信号进行测试，以及无信号输入时射频板噪声性能。
Running XCOMM Test Program
Initializing XCOMM I2C...
XCOMM Ihit I2C OK!
getting XCOW Revision..«
Board Version: Analog Devices, FHC Comms 1, D4B9555, AB-FMCOMMS1-EBZ,
initializing XCOHM exponents...
XC<»W Init OK!
Initializing the Rx path...
X£W Rx Init OKI
Initializing the Tx path.,.
XCg Tx Init OKt
初C sampling rate 【Hz]: 983&4680
OAC sampling rate [Hz]: I9$&e86ee
DAC available interpolation frequencies [Hz]: 1966086鈴
DAC available center shi代 frequencies [Hz]: e
图5-1射频子板初始化打印的调试信息
图5-1展示了射频板初始化时，Firmware初始化程序对射频板进行配置所打 印出的调试信息，图中的调试信息均是Firmware程序配置之后通过IIC总线从射 频子板各芯片读回的响应信息，可以反映射频板真实工作的状态。从图中可以看 到，射频板的发送/接收射频板中心频率、ADC/DAC釆样率参数、接收链路增益 配置均得到了正确的初始化，而且正确地的从板载的EEPROM上读取了射频子板 的版本信息。	’
射频子板的时钟等均依赖其自身的硬件，所以射频子板接收信号质量的测试 可以釆用自回环的方法测试，测试中采用直接将子板的RF OUT与RF IN相连， 子板的发送端循环发送一个正弦波信号和三角波信号，通过DAC、放大、调制等 过程通过RF OUT和RF IN直接进入子板的接收链路。
为检测接收信号的质量，通过Chipscope工具直接抓取射频子板驱动之后 ADC的I/Q数据，如图5-2和图5-3所示，展示了自回环测试方法中接收端使用 Chipscope工具抓取的ADC釆样信号波形，蓝线和红线分别表示I/Q两路数据， 即釆样信号的实部(ADC_data_real)和虚部(ADC_data_imag)。图中可以看出, 接收到的正弦波信号波形和三角波信号波形基本无失真。
61


图5-2射频板自回环测试ADC接收信号正弦波波形


图5-3射频板自回环测试ADC接收信号三角波波形
Firmware软件层面关闭接收链路中解调部分的功能，并且去掉接收端的天线, 同样釆取使用Chipscope软件抓取ADC端接收信号波形的方法，测试射频子板的 噪声性能，测试结果如图5-4所示。图中蓝线和红线分别为I、Q路数据，即ADC 采样信号的实部、虚部数据，可以看到，接收信号的幅值有个微小的直流分量， 实部和虚部的噪声幅值大小均稳定在15以内，而ADC芯片的数据位宽是14bit, 可表示的最大有符号数大小为2^14-1=16383,噪声影响系数为15/16383=0.09%, 噪声性能较好。	.
62


图5-4射频子板的噪声性能测试

5.2基带处理子系统各模块仿真与测试
5.2.1降采样滤波器模块仿真与测试
降釆样滤波器模块主要是2倍抽取操作和抗混叠滤波器的处理操作，因此针 对此模块的仿真与测试主要集中在滤波器的性能参数上。测试与仿真的方法是分 别采用Matlab建模和Modelei工具RTL级代码建模仿真滤波器的性能，并比较 两者建模仿真的结果。
5.2.1.1 Matlab 建模仿真
Matlab建模仿真中，Matlab模拟产生一个输入数据，其在全频带的信道内 是基本平坦的，其频域特性图如下所示：

图5-5 Matlab模拟的测试输入数据的频谱特性图（dB）

63

用此数据作为输入数据，输入到滤波器中，对滤波和抽取后的结果数据进行 matlab分析，分析频谱图如下面的三个图所示：

图5-6降采样滤波器高斯白噪声测试结果频谱分析（dB）



图5-7降采样滤波器高斯白噪声测试结果频谱分析细节图一（dB）

64


图5-8降采样滤波器高斯白噪声测试结果频谱分析细节图二（dB）
从上面三个图中可以看出，首先，滤波之后的效果和预期是一样的，低通滤 波和抽取后，60MHz带宽内（开头和结尾的3000,个频域数据点）的数据信息除 了 ldB功率以内的纹波外，全部保留下来，并且没有较明显的混叠发生。两幅细 节图中可以观察到，带内的波动也在可以接受之内，在考虑定点化和输入数据的 误差外还能保持在ldB以内的波动，可以满足频谱感知系统的设计要求。
5.2.1.2 RTL代码建模仿真
RTL代码建模使用Verilog HDL语言和Modelsim仿真工具，输入数据与Matlab 建模仿真的输入数据相同，是一个全频域等幅值的高斯白噪声信号，实部虚部位 宽均为16位，输入到verilog的滤波器模块，在Modelsim环境下进行仿真，得 到的输出数据用matlab进行分析，得到下面几幅仿真分析结果，分别与Matlab 仿真的结果进行对比：
65


图5-10 RTL建模仿真与Matlab建模仿真对比细节图一
图5-9、图5-10、图5-11三幅图为matlab仿真环境下滤波与抽取之后的的 输出结果的频域功率数据（蓝色数据）与modelsim仿真环境下滤波与抽取之后 的输出结果的频域功率数据（红色数据）的对比，纵轴的单位为dBo从上面三 幅图中可以看出，modelsim仿真的结果，也即RTL级verilog代码运算的结果基 本与matlab仿真的结果吻合，误差均小于0.05dB,通带最大波动0.5dB左右， 性能达到系统设计的要求。
66

102.5
102.4
102.3
102.2
102.1
102
101.9
101.8
101.7
101.6
101.5
图5-11 RTL建模仿真与Matlab建模仿真对比细节图二
5.2.2 AXI配置总线模块仿真与测试
AXI_TO_IP_BRIDGE是本文设计用以完成AXI-Lite总线到基带处理链路子系统 各模块配置的总线桥，完成频谱感知硬件控制功能。由前面3.4.2节可以知道， AXI_TO_IP_BRIDGE 模块共包括 AX1_TARGET、AX1_ASYNC_COUPLER、AXI_SINK 和 AXI_RESPONES_ABITRATOR四个部分。AXI配置总线模块的测试主要是测试两种类 型的配置接口，对其读和写操作是否如预期的正确无误的下发到具体的IP设备 或模块。测试分为基于Modelsim的功能仿真测试和基于Chipscope工具的FPGA 硬件测试。


图5-13 REG_TARGET接口写事务的仿真时序图
Modelsim仿真测试中，编写Testbench,使用task封装各个接口的配置功能。 对REG_TARGET类型接口的仿真测试通过向其指向设备的地址空间的target设备 发起读请求和写事务，如图5-12所示是REG_TARGET类型接口进行读请求时候的 仿真时序图，AXI-Lite总线发起请求，向16位地址的从设备targetO读取其FIFO 配置缓冲深度，图中显示读请求正确无误的传递到targetO设备，并且读数据rdata 也正确返回。图中可以看到读请求之前，配置总线己经向target。设备进行了 4 次写事务，所以读出的rdata值为4,正确无误。图5-13是REG_TARGET类型接 口进行写事务时的仿真时序图，图中看出，当AXI-Lite总线发起请求，向16位 地址的从设备targetO进行写事务请求时，写请求通过各个模块的传递，成功传 递到targetO设备，并targetO正确接收写事务的配置信号后，正确返回bresp信 号。图5-14和图5-15显示了对应FPGA硬件测试中REG_TARGET接口配置总线 的Chipscope抓取图形，图中可以看到，Chipscope抓取的读写事务时序图与 Modelsim完全匹配,REG_TARGET配置总线正确无误地下发配置到基带各个单元。

图5-14 REG_TARGET接口读请求的Chipscope捕捉信号

68

图5-15 REG_TARGET接口写事务的Chipscope捕捉信号
对MEM_TARGET类型接口的仿真测试见图5-16=图5-14是控制系统在向起 始地址为4096的MEM_TARGET类型设备target4连续写入若干配置数据后的仿 真时序图，可以清晰的看到，几次连续的写事务事件都能正确无误地到达target4 设备。因为MEM_TARGET类型的测试时，target4设备使用了一个Block Memory 存储下发的配置信息，所以可以通过频繁的写事务和读请求来验证总线读写的正 确性，图中可以看到写的数据大小和读出的配置数据大小都是相同的，验证读写 事务均正确无误。图5-17和图5-18显示了硬件测试MEM_TARGET接口总线桥时 Chipscope捕捉到的信号，图中可以看出，读和写事务的配置均正确下发到target 目标设备，并正确返回数据和响应信号。

图5-16 MEM_TARGET类型接口总线配置的仿真时序图

69


图5-17 MEM_TARGET类型接口写事务的Chipscope捕捉信号



图5-18 MEM_TARGET类型接口读请求的Chipscope捕捉信号

5.2.3复FFT变换模块仿真与测试
复FFT变换模块主要涉及FFT的时频域转换操作，因此此模块的仿真测试主 要是FFT_Wrapper模块的误差测试，测试方法釆用Modelsim仿真的结果与Matlab 仿真的结果进行对比。因为在RTL实现FFT的过程中，为了防止溢岀，采取了一 定的定点化方案，所以运算结果与Matlab的浮点运算结果难免有一些误差，RTL 的FFT例化过程中每级蝶形运算之间采取四舍五入的方式定点化，以尽量减少误 差。
图5-19和图5-20分别展示了 Modelsim结果与Matlab结果对比的实部误差 和虚部误差。从两个图中可以看出，实部和虚部的FFT结果误差范围均控制在±2
70

以内，这±2的误差是由FFT运算过程中不同的蝶形运算之间的定点化取舍，经 过一级一级扩大后导致的，误差值完全在正确允许范围内，能够满足系统对性能 的需求。



图5-19 FFT仿真Modelsim与Matlab对比的实部误差



图5-20 FFT仿真Modelsim与Matlab对比的虚部误差
5.2.4频谱能量均值模块仿真与测试
FFT之后频谱能量的求取釆用CORDIC算法计算实部和虚部的平方和，之后 对频谱能量的的数据进行了一个128次求平均的过程，CORDIC运算过程的误差 一般较小，而求平均做除法的时候会有一定的误差。测试方法釆用Modelsim仿 真和Matlab仿真对比，如图5-21所示为均值模块的误差测试图：
Error Between Matlab and Modelsim result


5.3频谱感知系统结果展ZR
频谱感知整个系统共涉及射频前端、FPGA基带处理、SOC嵌入式系统、Host Server程序、MATLAB能量检测与展示模块五个部分。射频前端子系统对特定频 段范围内信号的ADC釆样、放大，经过FMC接口将复釆样信号传送至FPGA的 基带处理子系统，基带处理后得到求均值后的频谱能量谱数据，通过DMA传送 至SOC系统，借助DDR3缓存，SOC系统通过TCP/IP将频谱能量谱数据传送至 PC机的Host Server, Matlab程序通过本机Socket访问Host Server获取数据，完 成600MHz~3.0GHz的频谱拼接后进行宽带频谱能量检测，将检测后的判决结果 与频谱能量谱数据一同展示于前端。
系统采用多次扫频、频谱拼接的方法完成600MHz~3.0GHz范围内频谱信号 的感知，射频前端ADC釆样率达到163.84Msps,基带信号处理单元稳定运行于 200MHz时钟，单次频谱感知带宽达到60MHz,具有10kHz超细腻的频谱分辨率， 系统经实际验证可完成每秒10次以上的2.4GHz频带信号的频谱感知，并将感知 与能量检测结果实时显示于前端。

图5・23 1.65GHz〜1.95GHz范围内频谱能量谱数据和能量检测结果局部放大图
如图5-22所示是600MHz~3.0GHz范围内整个2.4GHz带宽的频谱能量数 据和宽带频谱感知能量检测算法判决后的结果展示图，从图中可以看到判决结果 的稀疏程度基本和宽带内频谱能量谱密度的高能量处一一对应，2.0GHz~2.2GHz 频段内的频谱数据比较活跃，对应的判决图形中该段频域内的判决结果也对应分 段判决为忙碌即授权用户占用状态。另图5-23展示了 1.65GHz~1.95GHz范围内 300MHz带宽范围内频谱能量值数据和对应判决结果的局部放大图，图中可以明 显的看到判决结果与频谱能量的对应关系，尤其是1.85GHz处的18MHz左右带 宽内授权用户占用频段，对应频段的能量检测判决结果正确显示出授权用户占用 情况，另外几处稀疏的频谱能量凸起点对应的判决结果也得以正确显示出来。
74
第六章总结与展望
6.1论文工作总结
本文研究并设计实现了基于Xilinx公司ML605 FPGA开发板和ADI公司的 AD-FMC0MMS1射频子板的宽带频谱感知系统，目标感知频段达到2.4GHz宽度， 提出一种针对600MHz~3.0GHz超宽带频域应用场景的先验信息全盲条件下的宽 带频谱感知能量检测迭代算法。课题对频谱感知系统的软硬件架构进行了详细的 设计和实现，对算法的原理进行推导、仿真验证，并在频谱感知系统中得到实际 应用与验证，实时显示频谱感知的能量谱和能量检测结果。
本系统是一种基于FPGA Soc架构、配置灵活可变的频谱感知系统软件无线 电平台，系统设计中首先学习研究了频谱感知领域的关键技术研究进展，本着对 系统高性能、高感知带宽、高频谱分辨率等性能的追求，进一步调研并学习研究 了 ADI公司的高性能射频子板AD-FMC0MMS1的电路结构与原理，并针对系统 需求对射频子板做了模拟滤波等电路改造，然后设计了整个频谱感知系统的软硬 件架构，制定了详细的开发流程，按时完成开发并验证实现了系统的所有需求。
综上所述，本文主要完成的工作概括如下：
1.针对600MHz~3.0GHz超宽带频域应用场景，提出一种基于迭代运算的宽带 频谱感知能量检测算法，算法在先验信息全盲的前提下以较优的性能实现对整个 2.4GHz带宽频段的能量检测。文中详细推导论述了算法原理，并在Matlab中进 行了算法仿真与验证，最终应用于频谱感知系统中获得验证与实时展示效果。
2.对频谱感知系统软件无线电平台的Soc架构进行设计与实现，包括基于 Microblaze的Firmware软件控制、数据通信、配置分发程序的设计开发完成，Soc 系统搭建和自定义IP核Module开发，使得频谱感知平台在满足高性能的条件下 支持软件可调的灵活配置，满足多种应用场景的苛刻需求。
3.详细设计并实现了基带信号处理子系统，对基带信号处理的各个模块包括 数字下变频降采样滤波器、时域加窗、复FFT变换、频谱能量与均值求取等模块 的关键原理与算法和设计方案进行论证与设计实现。
3.研究与设计基于AD-FMC0MMS1的射频前端子系统，包括射频子板驱动程 序的更改、调试与应用，射频子板性能的检测与验证，匹配系统Soc架构的IP Module封装设计，和基于射频板API函数的Firmware控制、配置程序的开发。
5.TCP/IP通信、控制中心程序、Matlab算法实现与展示系统的原理设计与程 序开发验证，使得整个系统能够实现频谱信号的感知、处理、传输、能量检测与 实时展示功能。
75
6.系统的性能与前人的研究相比有重大突破，本系统具备单次感知60MHz 带宽信号的超强能力，以及10kHz超细腻度的频谱分辨率，ADC复釆样率最高可 达245.76Msps,系统的核心运算处理单元稳定运行在200MHz时钟频率下，每秒 钟可完成10次以上的2.4GHz带宽信号的频谱感知与能量检测全过程。且系统真 正做到软件无线电，各种参数和感知带宽均支持软件可配，包括频谱感知的感知 频段范围（400MHz~4.0GHz范围内的任何频段区间）、单次频谱感知的带宽分配、 能量均值模块的均值个数乩等。
6.2论文进一步研究方向
认知无线电是一项快速发展中的技术，其在宽带频谱感知领域还存在很多不 足与需要完善的地方，本文的研究只是认知无线电频谱感知领域的一小部分，结 合本文的研究成果，下一步的工作计划主要包括：
1.不断探索和开发应用于频谱感知工程实践的新方法，改善系统的感知性能, 做到根据不同地域的频谱能量自适应地调整感知幅值和放大倍数，在保证高频谱 能量的数据不溢出和泄露的前提下，实现对主用户信号和白噪声信号较好的区分 度。
2.进一步研究和改进宽带频谱能量检测算法，本系统所涉及2.4GHZ带宽的 频域信号，相隔较远的频域内授权用户的能量值和信噪比的差别较大，使用统一 的判决门限和判决方法不能更好的得到准确的判决结果，如何针对不同频带不同 信噪比场景下的更准确的能量检测是下一步需要研究的方向。
3.根据本文的研究成果，已获得宽带频谱感知的能量检测判决结果，得到各 个频带授权用户的频谱使用情况，汇总并记录不同地域不同频带频谱使用情况随 时间的累积结果，根据对历史数据的数据挖掘、机器学习与模式推理，实现较为 智能的动态频谱分配和频谱共享。
76
参考文献
[1]Guicai Yu; Chengzhi Long; , "Research on energy detection algorithm in cognitive radio systems," Computer Science and Service System (CSSS), 2011 International Conference on, vol., no., pp.3460-3463,27-29 June 2011
[2]Hossam M. Farag, Ehab Mahmoud Mohamed. Improved Cognitive Radio energy detection algorithm based upon noise uncertainty estimation. Radio Science Conference (NRSC), Cairo. 2014:107 -115
[3]G. Yu, C. and W. Xi. A Novel Energy Detection Scheme Based on Dynamic Threshold in Cognitive Radio Systems. Journal of Computational Information Systems, Mar, 2012, Vol. 8, pp. 2245-2252.
[4]Azza M.A., El Moussati A., Barrak R. Implementation of Cognitive Radio applications on a Software Defined Radio platefbrm. Multimedia Computing and Systems (ICMCS), Marrakech, 2014:1037 -1041
[5]J. Mitola et al., Cognitive radio: An integrated agent architecturefbr software defined radio, Tekn. Dr. dissertation, Royal Institute ofTechnology (KTH), 8 May 2000
[6]FCC, Spectrum Policy Task Force Report.ET Docket No. 02-155, Nov. 02,2002.
[7]Seshukumar, K., Saravanan, R., Sur切，M.S. Spectrum sensing review in cognitive radio. Emerging Trends in VLSI, Embedded System, Nano Electronics and Telecommunication System (ICEVENT), Tiruvannamalai, 2013:1 - 4
[8]Zhang Ling-ling, Huang Jian-guo, Tang Cherig-kai. Novel energy detection scheme in cognitive radio. Signal Processing, Communications and Computing (ICSPCC), Xi'an, 2011:1-4
[9]劳子轩，刘子扬，彭涛等.全盲频谱感知：噪声估计与能量检测联合迭代算法. 电子与信息学报，35(8),2013: 1958-1963.
[10]Guicai Yu; Chengzhi Long; , "Research on energy detection algorithm in cognitive radio systems," Computer Science and Service System (CSSS), 2011 International Conference on, vol., no., pp.3460-3463,27-29 June 2011
[11]Xilinx Inc. ML605 Hardware User Guide. Document Number:UG534.2011.
[12]Analog Devices Inc. FMC-Communications Product Highlight. Document Number: BR10719-.25-5/12. 2012.
[13]Mentor Graphics Inc. Modelsim SE User's Manual. Versioin 6.2b.2006.
[14]Xilinx Inc. Xilinx Virtex-6 Family Overview. Product Specification:
77
DS150.2012
[15]ARM.AMBA AXI and ACE Protocal Specification: AXI3, AXI4, and AXI-4Lite, ACE and ACE-Lite[online]. 2011. 306p.
[16]J. Walther. A unified algorithm for elementary functions. Joint Comput. Conf. Proc., vol.38,1971.
[17]Liu Yi-xian, Zeng Chun-yan, Wang Hong-jiang, et al.. Energy detection threshold optimization for cooperative spectrum sensing. Proceedings of 2nd International Conference on ICACC, Shenyang, 2010: 566-570.
[18]刘义贤，季飞，余华.认知无线电网络中基于噪声功率估计的能量检测性能. 电子与信息学报，33(6),2011: 1487-1491.
[19]刘子扬，彭涛，郭海波等.干扰系统先验信息未知的宽带能量检测.北京邮 电大学学报，35 (5), 2012: 31-35.
[20]T. Yucek and H. Arslan, A survey of spectrum sensing algorithms fbrcognitive radio applications, IEEE Commun. Soc. Mag., vol. 11, no. 1, 2009:116-130
[21]J. Lunden, S. A. Kassam, and V. Koivunen. Nonparametric cyclic correlation based detection for cognitive radio systems, in Proc. Int. Conf on Cognitive Radio Oriented Wireless Networks and Communications, 2008:1-6
[22]A. Sahai, N. Hoven, R. Tandra. Some fundamental limits in cognitive radio, Allerton Conference on communication, control and computing, Oct. 2004
[23]Z. Tian, G. B. Giannakis, "Compressed Sensing for Wideband Cognitive Radios,5, International Conference on Acoustics, Speech, and Signal Processing 2007, Vol. 4,15-20, April 2007:1357 一 1360
[24]X. Hue, X. Xie, T. Song and W. Lei. An Algorithm for Energy Detection Based on Noise Variance Estimation under Noise Uncertainty, IEEE International Conference on Communication and Technology, 2012:1-5
[25]YonghongZeng, Senior Member. Spectrum-Sensing Algorithms for Cognitive Radio Based on Statistical Covariances. IEEE Transactions Vehicular Technology, 58(4), 2009:1804-1815
[26]Guicai Yu, Chengzhi Long. Research on energy detection algorithm in cognitive radio systems. Computer Science and Service System (CSSS), Nanjing, 2011:3460-3463
[27]Kalambe, S., Lohiya, P., Malathi, P. Performance evolution of energy detection spectrum sensing technique used in cognitive radio. Signal Propagation and Computer Technology (ICSPCT), Ajmer, 2014:786 - 790
78
[28]Yirang Lim, Youngchul Sung. Upper bound for the loss factor of energy detection of random signals in multipath fading cognitive radios. Acoustics, Speech and Signal Processing(ICASSP), Taipei, 2009:2537-2540
[29]Z. Pei, Q. Tong, L. Wang, and J. Zhang. A Median Filter Method for Image Noise Variance Estimation, International Conference on Information Technology and Computer Science (ITCS 2010), July 2010
[30]潘建国，翟旭平.基于能量检测的频谱感知方法.上海大学学报，自然科学版, 2009, 15(1):54 - 56
[31]赵军，李广军.多抽样率信号处理的基本原理及应用.第十三届全国青年通 信学术会议，山东烟台,2008
[32]D. Cabric, "'Cognitive radios: System design perspective,,5 Ph.D. dissertation, University of California, Berkeley, 2007.
[33]S. Haykin. Cognitive radio: Brain-empowered wirelessommunications, IEEE Journal on Selected Areas in Communications, Vol. 23, No.2,2005: 201- 220
[34]A. Nafkha, J. Delorme, R. Seguier, C. Moy, and J. Palicot. A heterogeneous reconfigxirable platform for cognitive radio systems, in WSR, karlsruhe, Germany, March 2008.
79





























































80


