3.3.3算法实现与复杂度分析
为了有效评估所提方案的实用性，本小节将首先介绍SD-ZF方案的工程实 现，分析实现SD-ZF方案的硬件需求，然后将SD-ZF方案与基于ZF预编码的 模拟调光方案(ZF Precoding based Analogue Dimming, AD-ZF)方案的复杂度进 行比较。AD-ZF方案不需要进行发送天线选择，而是激活全部的LED工作，并 利用全部的M个LED组成的信道矩阵完成ZF预编码，通过控制每个LED直流 偏置的大小来实现调光。
图3-4多LED单元的照明装置
在工程实现方面，目前已经出现了如图3-4所示的由多个LED发光单元组 成的照明装置口4灯，可以为SD-ZF方案的实现创造条件。在此基础上，仅需安装
44
必要的开关电路便可以通过集中控制的方式实现发送天线选择。同时，发送端准 确的CSI对于发送天线选择的实现至关重要。由于可见光不适用于上行通信， CSI通常由接收端获取，然后通过上行链路回传给发送端。目前基于红外的上行 链路已经得到了应用，能够实现稳定的低速反馈信道［⑸在本节中，由于室内 可见光信道的准静态特性，我们忽略信道估计过程中由于噪声和接收端的量化分 析所引入的误差，认为发送端能够获得准确的CSI。
X] Hermitian 对称
——►	和
IFFT变换
LED 1
Xn« Hermitian 对称
——►	和
IF FT专换
LEDN〃
图3-5 SD-ZF方案的发送端实现模块框图
由于系统的预编码等过程集中在发送端完成，本小节将SD-ZF的发送端实现 模块框图在图3-5中表示。如图所示，算法1将利用反馈信道的CSI信息得到最 大化系统速率的工作LED集合S, ZF预编码模块(ZF Preceding Unit, ZFU)利 用S计算得到预编码向量吗，然后可以利用FPGA中的MircoBlaze写入控制模 块的RAM中【⑸】。偏置控制单元(Bias Control Unit, BCU)将工作LED的偏置 固定为/o用于耦合交流信号,驱动LED工作。在实际工作中，发送端的用户QAM 信号向量将通过电力线(Power Line Communication, PLC)等骨干网产生，然后 ZFU将读取预先储存的预编码矩阵Wj,对用户的QAM信号进行预编码，预编码 在频域进行，映射到第，•个LED上的复信号可以表示为
%(左)=Wj/)4(无),k = l,2,...,N	(3-31)
其中，可为第无个子载波上用户/的QAM调制符号；Wj(Jl)表示用户/的预编 码向量。X,经过Hermitian对称和IFFT变换得到时域信号局，然后经过BCU并 完成LED的电光转换。生成的可见光信号将通过工作LED经可见光信道发送给
45
接收端的用户。
接下来，本小节将利用浮点运算(Floating-Point Operation, Flop)的数目来 衡量SD-ZF的算法复杂度。首先假定在矩阵运算过程中中，X表示一个qxp的 矩阵，Y表示一个的矩阵，Z表示一个〃x〃的矩阵，0()表示浮点运算的 次数。相应地，矩阵乘法运算X-Y的计算复杂度为矩阵逆运算的计算 复杂度为0(r)。由于SD-ZF具体包含两个步骤，一是确定工作LED数目，二 是完成发送天线选择。其中，由于发送天线选择需要执行迭代运算将成为SD-ZF 运算复杂度的主要部分。在算法1中，待选的工作LED集合数目为XL-,在 初始化阶段，计算As需要完成一次矩阵乘法和一次矩阵逆运算，复杂度分别可 以表示为。(广乂)和。(K3)。接下来，由于(3-30)式的分子和分母的运算复杂度 均为。(K「)，在每次迭代中为了确定每个移除的LED需要完成的浮点计算共计 为。(2K,。此外如算法1所示，在发送天线选择过程中，需要对A,进行(乂-哨 次更新，每次更新的复杂度开销为。最后，由工作LED组成的Kx〃，维 信道矩阵Hs在(3-20)式中需要执行两次矩阵乘法和一次矩阵逆运算，运算复杂度 为。(2K、,+K3)。基于以上分析，可以将SD-ZF的算法复杂度表示为：
金n =。(尸 N, + Y +	/ + K 2 (N, -
回广(--靖+ 2”,))
AD-ZF采用激活全部LED,因此不需要进行发送天线选择，基于(3-20)式其 算法复杂度为：
CiD_ZF<O(2K2N,+K^	(3-33)
对比(3-32)和(3-33)式可以发现，SD-ZF相比于AD-ZF由于执行发送天线选 择所增加的算法复杂度主要与系统灯源中的LED数目有关。因此，为了降低 SD-ZF的复杂度，系统光源中的LED数目需要尽可能降低，从而降低发送天线 选择所增加的系统资源开销。
