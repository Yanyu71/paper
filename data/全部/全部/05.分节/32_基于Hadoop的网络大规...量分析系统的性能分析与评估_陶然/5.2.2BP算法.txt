5.2.2BP算法
BP神经网络是基于BP算法实现的，该算法的基本思想：学习过程由信号 的正向传播与误差的反向传播1匆两个过程组成。现详细介绍该算法的训练过程:
步骤1：神经网络初始化。根据系统输入、输出向量(XY)来确定网络输入 层节点数n隐含层节点数/,输出层节点数m；初始化输入层与隐含层的连接 权值钓、隐含层到输出层的连接权值②心、隐含层神经元阈值印、输出层神经元 阈值与、误差允许范围￡,均为很小的随机非零值；确定学习速率"、隐含层激 励函数/(.)、输出层激励函数g(.)。
正向传播过程：
步骤2：计算隐含层第丿个神经元输出
Hj = /■(￡ a)ijxi +ay), j = 1,2,…，丿
s	式(5-5)
步骤3：计算输出层第A个神经元输出入。
1
儿=gQXc + 为)，A = 1，2，?“，0	、/…、
y=i	式(5-6)
由于g(?)一般选用线性函数，则式(5-6)可简化为：
1
A = Z Hj(0jk + bk > k = 12 …
妇	式(5-7)
步骤4：定义误差函数。若孔为实际系统的输出，必为网络训练输出，贝!I： 以=% - 人，k = 1,2,式(5-8)
则误差准则函数定义为：
1 a	iff
功=5 ￡(4 - yj = E ￡ e* , k = 1,2, , m
f	式(5-9)
步骤5：判别误差。若
0 - ￡	式(5-10)
则学习结束，否则进入以下的反向传播过程。
误差反向传播过程：
步骤6：输出层权值、阈值变化量的计算。误差反向传播算法的原理就是 沿着误差准则函数负梯度的方向修正权值、阈值参数。
M =-卩禦=
8bk	式(5-11)
31
△% = 一“貝丄=仰邑	式（5-12）
& =（4 -久）我）=勺	式（5_i3）
其中，g'（，）为输出层激励函数的导数，由于g?）为线性函数，则g'（，） 二 l。 步骤7：隐含层权值、阈值变化量的计算。
■ = _卩尧=-舟dk - yk） ■
耕
="'（?）%?￡（4 - yg
k=\
△a丿=笋=_ ygk
。。丿	k=l
其中，r（.）为隐含层激励函数的导数。 步骤8：权值、阈值修正。将修正后的权、阈值保存起来， 迭代时的值。输出层权、阈值参数修正：
% =纵 +
4 = 4 + A4 隐含层权、阈值参数修正：
/ -①寸+ A的
a. - a- + 啊
