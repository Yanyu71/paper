4.4仿真
这个部分将给出丰富的仿真来展示提出的基于家庭基站成簇的选择性波束成型 算法的性能。在这些仿真中，家庭小区被近似成一个半径为500米的圆形区域，家 庭基站被近似成一个半径为20米的圆形区域。宏用户和家庭用户分别随机地分布在 宏小区或者各自的家庭小区范围内。参考m，43],我们建立了一个考虑大尺度衰落、穿 墙损失和阴影衰落的较为实际的信道模型。另外，所有用户（包括宏用户和家庭用 户）的天线配置都满足Nt = 4,每个家庭基站的天线数为Nf = 6。家庭用户的发送
功率和宏用户的发送功率满足约束关系丹? = 0.5 x
图4-4展示了一个家庭基站分簇的例子。在这个仿真中，整个系统中包含40个家 庭基站，预先设定的门限值b = 200。通过这个图可以看到，相互间距离比较近的家 庭基站被分配到了一个簇内。
图4-5展示了在不同门限值的情况下，每个簇内家庭基站数目的变化情况。在这 个仿真中，假设整个系统中包含40个家庭基站，这些家庭基站被分成互不相交的 簇。根据簇内的家庭基站的数目I，可以将所有的簇分成四类，1=1，1 = 2, 1 = 3和 />3O从图中可以看出，当门限值比较小的时候，大部分的簇只包括1个家庭基站。 随着卩限值的增大，只包含1个家庭基站的簇的数目逐渐减少，包含多个家庭基站 的簇的数目会逐渐增加。需要注意的是，当门限值增大到足够大之后，例如当门限 值a >600时，四类家庭基站簇的分布基本上保持稳定，不会发生使整个网络成为 一个簇的情况。换句话说，当预先设定的门限值足够大之后，整个网路的分簇情况 就会保持稳定，所以，在这种情况下，家庭小区的和速率也会保持稳定。
接下来，将展示和速率的性能。为了更加便于仿真，在接下来的仿真中，认为整 个系统中20个家庭基站和20个家庭用户，并且每个家庭基站服务一个家庭用户。
为了证明上文中的结论，图4-6比较了不同门限值情况下的和速率的变化情况。 首先，家庭基站被分成多个家庭基站簇，然后通过选择性的波束成型来减少每个家 庭基站簇中的干扰。当预先设定的门限值比较小的时候，随着门限值的增大，和速率会明显地增加。这主要是因为，当门限值比较小的时候，随着门限值的增加，一个 簇会包括更多的家庭基站，对于每一家庭基站来说，更多的干扰源会被囊括到这个 簇内，所以更多的干扰能够被减少，系统的和速率就会增加。但是，从图中可以看 出，但门限值<7 = 200和门限值。=800对应的家庭小区的和速率基本是相同的，这 就证明了，当门限值足够大之后，随着门限值的增大，家庭基站簇的结构基本保持 稳定，家庭小区的和速率基本保持不变。
图4-7比较了不同方案的和速率。在随机波束成型的方案中，宏用户和家庭用户 的波束成型向量是随机生成的。在最小化总的生成干扰的波束成型方案中，每个宏 用户或者每个家庭用户利用局部的信道状态信息来进行波束成型以最小化总的产生 的干扰。然后，将最小化总的生成干扰的波束成型方案分别应用到每一个家庭基站 簇或者整个异构网络中。同时，也将提出的基于选择性波束成型的最小化生成干扰 的方案分别应用到每一个家庭基站簇或者整个异构网络中。从图中可以看出，无论 是应用于每个家庭基站簇还是应用在整个异构网络，提出的基于选择性波束成型的 最小化生成干扰的方案的性能都是最好的，随机生成的波束成型方案是最差的。这 个结果的主要原因在于最小化总的产生干扰的方案只是尽最大的可能降低的总的干 扰，而基于选择性波束成型的最小化生成干扰的方案完全的消除了每个用户产生最 强的1流干扰。对于最小化总的生成干扰的波束成型方案来说，它的本质就是 最小化每个用户产生的总的干扰。当将这种方案应用到异构网络的时候，考虑的是
某个用户对整个异构网络中家庭基站的干扰的总和，但是当这个方案被应用到每个 簇内的时候，考们考虑到总的产生干扰仅仅是对簇内的家庭基站的干扰的和。所以, 应用于整个异构网络时候的和速率要略高于应用于每个簇内时的和速率。但是，对 于提出的基于选择性波束成型的最小化产生干扰的方案，应用到每个簇对应的性能 要优于应用到整个异构网络对应的性能。这个结果的原因是，对于領内的每一个家 庭基站来说,来自宏用户和家庭用户的强干扰都被完全消除了，家庭基站的和速率 大大地增加了。但是将这种方案应用于整个异构网络的话，每个用户只能消除最强 的眄-|海干扰，但是对每一个家庭基站来说，它的最强的干扰可能没有被完全的 消除，仍黙存在。还需要注意的是，在上述的仿真参数下，为了执行基于选择性波束 成型的最小化生成干扰的方案，每个宏用户或者家庭用户需要选出3个家庭基站来 避免对这3个选择出的家庭基站产生干扰。在这种情况下，如果将它应用于整个异 构网络，每个宏用户和每个家庭用户分别需要考虑（方）和（；）种组合。和应用 于簇内的（：）和（二1）种组合相比，在1《20的时候，将所提方案应用于整个
异构网络命的査杂度要蟲高于应用于每个簇。因此，通过家庭小区分簇，算法的 复杂度被降低了，系统的性能却有一定的提高。
