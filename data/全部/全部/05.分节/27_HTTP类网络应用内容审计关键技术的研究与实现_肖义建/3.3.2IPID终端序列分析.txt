3.3.2IPID终端序列分析
如上文所述，IP报文的头部的标识号字段会用于IP报文分片后，判断报文 是否来自于同一个IP报文的分片。从而使得IP数据包的接受方可以正确将分片 组装成初始的IP报文。IPv4在RFC791中，报文头部的标识号字段中被实现为 一个简单的计数功能，在RFC6864中被定义为进一步强调在一个最大数据报生 命周期内(Maximum Datagram Lifetime, MDL)对于_个给定的源/目的地址/协 议组必须是唯一的。所以根据这两个定义，可以推断由同一个主机发出的相同IP 数据包，其IPID字段应该是一个连续变化的整数序列，所以将所有捕获的IP数 据包的标识号字段进行重组，将会获得多条的连续递增序列，根据上述的推断, 则可以认定，每条连续递增序列都代表着一部通过NAT设备连接网络的终端设 备。
算法最终目的是寻找代表一台终端设备的连续递增IPID序列，这就要求部 署的网络审计设备必须获取网络终端发出的全部的IP数据包，而在实际的网络 环境中，存在着大量的局域网内部的数据传输，许多的终端的应用会使用本机环 回地址实现某些功能。这些通信过程产生的IP数据包，对于部署在本地目标网 络与外网之间的审计设备来说都是不可见的。所以，进行检测获取的IP数据所 重构得到的序列将是不连续的，甚至会发生跳变，这将是对IPID序列进行重组 时,.所面临的问题。
同时，在实际的网络终端检测卖践过程中，一个更加复杂的问题是，许多的 网络终端操作系统并未使用单调递增的方式来实现IPID字段，另外，一些运行 在“小端序"硬件上的操作系统在发送IP数据包时，并为未将数据字节序转换 成为网络数据传输中使用的“大端序”，从而导致，即使这类系统用简单计数的 方式实现了 IPID字段，但是，在网络传输过程中IPID字段的值依旧是不可用的。
具体到操作系统上的表现就是，大多数Linux会针对每个应用的一次通信过 程，生成一个随机的初始值，随后的IP数据包中的IPID会依次递增，目前，普 及率最高的移动端操作系统Android以及IOS同样符合上述特征。
图3-2终端检测设备工作示意图
如图3-2是终端检测设备的工作示意图。进行网络终端的检测设备分为两个 功能模块：报文捕获，字段提取，轨迹分析。报文捕获，借助Libpcap库，可以 很方便的实现网络报文的捕获功能，将捕获的报文进行处理获取该报文的IPID, 通过IPID轨迹分析，获得终端信息并存储用于后续网络应用审计。
将获取的IPID在时间维度上的轨迹进行分析，并根据描述出的轨迹与网络 中存在的终端建立对应关系。在网络中终端进行通信时，存在内网通信与网内终 端与网外设备进行通信，由于审计设备的部署位置在网络的出口，所以，终端发 生的内网通信无法观测到，由于网络内部通信的存在，审计设备分析建立起的网 络终端IPID轨迹就存在中断的间隙；IP报文的标识号字段的取值位于0-65535 的有限整数区间，因此，当建立终端的IPID轨迹时，不同终端的轨迹就存在重 叠、交叉的情况；同时，IP报文的标识号字段的取值对上述取值区间的值是循 环复用的，标识号字段的值出现循环时，应该对终端的IPID轨迹检测程序进行 合理的设计，防止出现将一个终端检测误判为两个的错误。终端的IPID的轨迹 分析也是终端检测模块的核心部分，对上述情况的处理下文会进行详细的分析、 处理。
