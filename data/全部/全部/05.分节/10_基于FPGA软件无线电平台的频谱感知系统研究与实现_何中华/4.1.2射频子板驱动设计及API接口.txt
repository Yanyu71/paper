4.1.2射频子板驱动设计及API接口
系统中釆用Xilinx的ML605开发板实现对AD-FMC0MMS1射频板的控制， ADI官方提供一个简单的Reference Design用以验证射频板的基本功能实现，借 助于Reference Design的结构，重新搭建自己的系统，可实现对射频板的控制。 图4-3是FPGA的射频板驱动模块硬件框架结构。
图4-3 FPGA射频板驱动模块硬件框架结构
射频板的驱动控制部分分为硬件部分和软件部分。硬件部分主要是RTL级代 码IP核的封装以及Microblaze CPU上必要功能模块的配置。硬件驱动模块的RTL 级代码的功能大抵如4.1.1小节中所述，IIC通信接口负责分发配置信息和接收配 置响应信息,AXI-STREAM接口用来FPGA板卡与射频板之间传输数据，频谱感知 系统基于Microblaze CPU的SOC系统结构如图4-4所示。从SOC系统的结构图中
33
可以看到，用于AD-FMCOMMS1射频板驱动的模块主要有axi_adc_2c_0和 axi_iic_O两个个CPU设备(Peripheral)。axi_adc_2c_0主要用来缓冲ADC的数据 以及纠正时钟漂移、10走线延时等影响，转换差分信号为单路信号，提供IQ实 虚部数据至基带处理链路；axi_iic_O模块是通用IIC协议处理单元，用以翻译软 件层面的控制信息，转换为射频板可以识别的1IC协议数据，实现对射频板的控 制该写和状态监测；axi_adc_2c_0输出的IQ数据与axo_spec_sense_dev_0基带 处理子系统Peripheral相连，送入基带处理模块，处理完的数据会通过 spec_axi_dma_O DMA设备接收并缓存与DDR之中，软件代码封装处理之后通过 以太网发送至PC机。
图4-4频谱感知系统基于Microblaze的SOC结构
AD-FMC0MMS1射频子板的软件部分功能主要通过调用一些封装好的API (Application Program Interface)实现。射频子板的API函数主要是根据各个ADC、 DAC、数字可调增益放大器、时钟等芯片的寄存器地址以及各自datasheet中控 制命令的格式，通过IIC的读写逻辑与函数，实现对射频板上各个功能区域的控 制与调节。底层的API函数分别针对板上的芯片封装初始化和应用函数接口，高 层的应用层API函数再通过调用底层的封装函数，完成射频板初始化、更改增益、 射频频率、AD/DA釆样率等功能。射频板启动的时候，首先通过读取ROM中的 相应信息获取FPGA开发板的具体型号，根据型号调用相应的参数设置，然后初 始化HCinit函数，依次启动并初始化时钟芯片、调制解调器、放大器、DAC、ADC 芯片，使得射频板开始运转。然后初始化接收链路，启动ADC芯片时钟电源供 电、时钟同步、L。频率校准，启动锁相环、混频器、ADF4351解调器电源供电 (a df435l_o ut_a Itvo Itage0_powe ro n ),设置接收链路的射频中 心频率 (XCOMM_SetRxFrequency),设置 ADC 芯片的采样速率(XCOMM_ SetAdcSamplingRate),初始化ad8366和ad9643,设置程控放大器的接收增益 (XCOMM_SetRxGain),完成接收链路的初始化。发送链路也可以釆用相似的配 置顺序，依次配置各个功能模块为系统所需的模式，整个射频板便可正常的运转 起来。
