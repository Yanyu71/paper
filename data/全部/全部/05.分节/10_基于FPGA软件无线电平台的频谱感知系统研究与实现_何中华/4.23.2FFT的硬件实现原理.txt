4.23.2FFT的硬件实现原理
对于FFT算法的硬件实现，下面将主要讨论一下地址发生器、蝶形运算单 元、存储单元组和系统控制器。常见的FFT实现结构框图如图4-14所示。
1.系统控制器
FFT的系统控制器主要对整个运算的各个层级进行协调以及参数分配， FFT中的每一层就是一个蝶形运算单元，不同的层级之间由于乘法的关系可 能会导致数据的溢出，所以在硬件实现的时候，每一级蝶形运算之后都会进 行一定的定点化，为的就是防止运算结果参数的溢出。每一个小的蝶形运算 单元会有一个小的状态机来控制，而所有的蝶形运算之间由一个总的状态机 来控制，同时系统控制器还需要控制地址模块的产生以及存储的有序处理。
2.蝶形运算单元
蝶形运算单元是FFT的基本单元，也是FFT运算的核心单元，它主要 包括旋转因子、乘法和加减组合逻辑，典型的蝶形运算如果4-15所示，共 包括两次复数的加法(减法)，以及一次的复数相乘。
图4-15蝶形运算单元
A、B表示两路输入，C、D表示运算之后的输出，昭为旋转因子，决 定着不同蝶形单元的不同。如前面所述，每一级蝶形运算都可能因为乘法导 致数据的溢出，所以每一级蝶形运算都要做一个定点化的方案，来决定蝶形 运算的输入缩减几倍再进行下一步的运算。实现中会在蝶形单元的每一路输 出乘以一个0.5的因子，对于L = logA/级的FFT运算，就是乘了 (1/2与=1M的比例因子。经过上述的运算处理，可表示如下：
C = 0.5(A + BW^)	(4-10a)
D = Q.5(<A-BW^	(4-1 Ob)
3,存储单元组
存储单元主要用来存储运算的中间结果，包括蝶形运算结果的数据以及 每一级蝶形运算的旋转因子。FFT的硬件实现时，实部虚部均为16bit位宽， N点FFT来说，一次FFT变换的输入数据大小时32xN bit,这些数据同样 需要存储单元来保存起来。数据被保存在32bit位宽的双口 RAM中，Xilinx 的FPGA尤其是Virtex-6系列芯片包含丰富的块RAM资源，可编程来实现 每一个端口从16Kxlbit到512x32bit的深度和位宽。此外，还可以用多块RAM
46
存储器级联成大型内嵌存储块。
4.地址发生器
FFT中地址发生器模块的结构图如图4-16所示。
图4-16 FFT中地址发生器模块的结构图
地址发生器的功能分为以下几个：1.每一级的蝶形运算之后顺序是乱序 的，需要地址发生器完成乱序到自然序列的重新排序；2.完成级与级之间蝶 形单元运算结果与运算输入数据的地址对接；3.从RAM中读取对应蝶形单 元的旋转因子；4.蝶形运算单元计算完成之后，将对应数据存在对应地址的 RAM中，地址需要对应，并利于之后的倒序顺序的重新排序。
