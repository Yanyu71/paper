3.2.2.2USRP数据流的热切换技术实现
为了实现USRP数据流的热切换，缩短USRP在动态迁移过程中所耗费的时 间，因此就需要去除掉USRP在迁移中的二次初始化的耗时，让USRP设备只在 上电的之后进行一次初始化操作，之后再不必重新进行初始化操作。
24
USRP设备在上电的时候，本身固件会进行初始化，这种初始化操作，只在 上电的时候才进行一次，所以只要保证USRP设备一直在通电状态就可以避免该 初始化的再次进行。
另外一种初始化是在IBM Server每次启动USRP进程都会通过调用UHD的 API接口函数对USRP设备进行相应的初始化配置。为了在迁移过程中避免重复 初始化，需要对USRP进程的启动操作流程进行改造，使其在启动USRP进程的 过程中，不再对USRP设备进行初始化配置操作。
首先将UHD中对USRP的工作参数进行初始化配置的相关API接口函数提 取出来，进行封装，封装函数内部包含一系列通过UHD的API接口函数对USRP 设备的初始化配置操作，其函数定义如下：
uhd_device::initO
一些主要的配置参数的API接口函数如表3-2所示。
表3-2主要的UHD配置参数的API接口函数
API接口函数	功能描述
set_master_clock_rate()	设置主参考时钟频率
setrxrateO	设置PC机接收端釆样速率
se七rx_freqO	设置接收端中心频率
set_rx_gainO	设置接收增益
set_rx_antenna()	选择接收天线
set_rx_bandwidth()	设置接收带宽
set_tx_rate()	设置PC机发送端采样速率
set_tx_freq()	设置发送端中心频率
set_tx_gainQ	设置发送增益
set_tx_antenna()	选择发送天线
set tx bandwidth()	设置发送带宽
其中各API接口函数都有不同的相应的形参值和返回值，在表中省略了，可 以根据实际业务场景需要进行不同的配置设定。
然后只在第一次启动USRP进程的过程中调用一次该封装的初始化函数。在 迁移目的端启动USRP进程时，将其中的初始化部分的封装函数屏蔽。当USRP 实体与USRP设备通过API接口函数建立起链接之后，直接开始进行正常的数 据业务通信。实时信号处理程序从IBM Serverl上迁移到IBM Server?上的过程 中，USRP数据流的热切换流程示意图如图3-7所示。
25
IBM Serverl ['-启动一
\uSRP进程
与USRP进
行数据通信
图3-7USRP数据流热切换流程示意图
图3-7中所示的USRP数据流的热切换的具体流程说明如下：
1）	在迁移发起端（即IBM Serverl）,启动USRP进程。USRP进程的启动 如图3-6所示。USRP进程启动完成之后，就建立起了迁移发起端上的 USRP进程与USRP设备之间得数据链路链接，即图3-7中所示的红色的 数据链路1。这样，迁移发起端上的实时信号处理程序就可以通过USRP 进程与USRP设备进行数据通信。
2）	当迁移发起端发起了动态迁移业务之后，向迁移目的端（即IBM Server2） 发送迁移指令，迁移目的端首先完成图3-7中黄色矩形框中的操作流程， 创建一个USRP实体，并开辟相应的缓存buffer空间和定义元数据。在 动态迁移系统中，简化成为创建USRP实体。
3）	迁移目的端的USRP实体创建成功之后，需要断开迁移发起端中的USRP 进程与USRP设备之间的数据链路，即断开图3-7中的红色的数据链路1, 具体的断开操作涉及到一些修改端口 IP等操作，在动态迁移系统的设计 中再详细介绍。
4）	迁移发起端与USRP设备之间的数据链路断开之后，迁移目的端进行图 3-7中橙色矩形框中的操作流程，调用UHD的API接口函数get_device 建立起USRP进程与USRP设备之间的数据链路链接，即图3-7中的蓝 色的数据链路2。在后续的动态迁移系统中，简化成为建立USRP数据 链接。在调用API接口函数建立数据链接之前，还涉及到一些修改端口 IP等操作，在动态迁移系统的设计中再详细介绍。
26
在动态迁移过程中，经过上述的USRP数据流的热切换之后，IBM Server2 上的实时信号处理程序就可以通过蓝色的数据链路2与USRP设备进行数据链路 通信了。至此，就完成了在动态迁移过程中，USRP设备的数据流的热切换。
