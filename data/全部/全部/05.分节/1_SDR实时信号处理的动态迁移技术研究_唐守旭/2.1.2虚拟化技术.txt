2.1.2虚拟化技术
狭义的虚拟化技术指的是将那些资源计算处理单元运行在虚拟出来的系统 平台上，而突破实际的物理硬件平台的限制的技术。虚拟化技术指把整个物理硬 件基础包括处理器、内存和外设作为处理资源，在物理硬件平台上，虚拟化出多 个虚拟系统平台，每个系统平台都能够进行实现自身的操作而相互之间没有干扰。 在基于硬件物理平台的虚拟化技术中，往往需要通过加入一个叫做虚拟机监控器 (Virtual Machine Monitor, VMM)的虚拟出来的中间层，该层也叫做Hypervisor。 Hypervisor所在的物理硬件操作系统被叫做宿主机。经过虚拟化技术得到的虚拟 的资源处理基础一般被叫做客户机，其上所安装的系统也相应的被叫做客户机操 作系统。
将虚拟化类型通过VMM的不同来进行区分，可以将虚拟化技术分为完全虚 拟化、半虚拟化和操作系统级虚拟化等不同的几种类别⑶。
a)完全虚拟化
完全虚拟化是目前在实践生产使用中最广泛被人们所接受的技术。通过完全 虚拟化技术得到的虚拟的计算处理基础资源和真是的物理硬件基础资源是相同
10
的，其上所允许的客户机操作系统不需要做其他改到就能够正常运转。在这种模 式下，客户机操作系统并不清楚自身正在一个虚拟出来的处理资源上运转，会像 处理正常的硬件处理资源上一样来处理虚拟处理器、虚拟内存和虚拟I/O设备。 在虚拟机（“guest”，客户机）和硬件之间，安装了一个“Hypervisor （超级管理 器）”，它也叫做一个虚拟机监控器。
这样的Hypervisor也称为裸机Hypervisor,因为他们控制着物理硬件。 Hypervisor给主机的所有真实的物理处理资源提供了一个模拟层。guest（客户机） 操作系统无需做修改，就能直接对虚拟化的硬件发请求，客户机操作系统内核想 要执行的任何有特权的指令都有经过Hypervisor翻译，才能得到正确的处理。
裸机虚拟化算得上是最安全的一种虚拟化技术，因为客户机的操作系统和底 层的硬件设备之间被完全隔离开了。此外，客户机操作系统的内核不要求做任何 修改，所以可以在不同的底层体系结构之间移植客户机操作系统。只要有虚拟化 软件，那么客户机就能在任何体系结构的处理器上运行，不过，翻译CPU指令 会带来一定的性能损失。
VMware ESX就是一种目前非常流行的实现完全虚拟化技术的例子。这类的 基于完全虚拟化技术的系统的一般架构如图2-4所示。
b）半虚拟化
半虚拟化是被Xen所釆用的策略，而免费开放的虚拟社区的领头羊又是Xeno 半虚拟化和完全虚拟化一样，也支持客户在单台硬件平台上并行运行多种不同的 操作系统。不过，必须修改每个操作系统内核以支持“ hypercall",即对某些敏 感的CPU指令进行翻译。但是，客户机上的软件程序不必修改，就可以方便地 在Xen平台上运转。同完全虚拟化相类似,在半虚拟化中也需要用一个Hypervisor 层来进行监控。
半虚拟化系统中的翻译层没有完全虚拟化系统中的翻译层开销大，所以半虚 拟化确实能够在性能上获得名义上的好处。不过，由于需要修改客户机操作系统， 所以这是非常不好的一点，Xen的半虚拟化之所以在Linux和其他开源内核之外 很少有应用，主要就是由于这个缘故造成的。
图2-5所展示的是一个半虚拟化的系统环境。它看上去和图2-4的完全虚拟 化系统很相似，但是客户机操作系统要通过一个定义好的接口才能与Hypervisor 打交道，而且第一个客户机系统有特权。
c）操作系统级虚拟化
操作系统级别的虚拟化技术跟前面介绍的两种不同的模型相比，都具有非常 大的区别。操作系统级的虚拟化并不在物理操作系统里创建多个虚拟机环境，而 是让一个操作系统创建多个彼此独立的应用环境，这些应用环境都访问同一个内 核。操作系统级的虚拟化技术更适合于被想象成为是内核部分中的一个功能模块, 而不是独立岀来的一层软件抽象。
由于该技术的实现中并没有真实存在的翻译功能模块或者是虚拟出来的中 间层，所以操作系统级别的虚拟化技术的开销会是非常小的。因此，该技术的大 部分实现模型都是能够达到本原的性能级别。不巧的是，这种类型的虚拟化不能 使用多种操作系统，因为所有的客户机（在这里通常称它们为“container”）都 共享一个内核。AIX 的"workload partition”和 Solaris 的 acontainer 和 zone"都 是操作系统级的虚拟化技术的例子。
操作系统级别的虚拟化结构如图2-6所示。
12
图2-6操作系统级虚拟化的体系结构⑺
