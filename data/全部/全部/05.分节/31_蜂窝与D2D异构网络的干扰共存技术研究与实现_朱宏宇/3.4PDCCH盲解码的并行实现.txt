3.4PDCCH盲解码的并行实现
由于D2D中的PDCCH盲解码需要尝试多聚合等级与多DCI长度，因此它是D2D系统干扰感知功能中耗时非常高的一个模块，其时间性能将直接影响整 个D2D系统的实时性，因此对PDCCH盲解码进行时间优化是实现中的关键问 题。
观察前述的PDCCH盲解码流程，发现一个子帧的PDCCH信道盲解码是以 8个CCE为解码单元的，即各8个CCE的解码之间没有相互影响，这就构成了 并行程序的基本条件一一没有耦合的子模块。因此可以使用并行程序的思想对 PDCCH盲解码进行时间优化。
釆用任务分发-任务执行-结果收集的模型实现PDCCH盲解码的并行实现， 此模型中的任务分发线程将多个任务分配到多个空闲worker线程中并行执行， 在PDCCH盲解码中一个任务就是对8个CCE进行解码，每个worker做完任务 后将运行结果输出给结果收集线程，并且重新成为空闲worker准备接受任务分 发线程给的下一个任务，直到所有的任务都完成。如图3-9所示：
图3-9 PDCCH并行解码框架
在GPP平台上可以借助Pthread (POSIX threads)以及ZMQ工具实现上述 框架下的PDCCH并行盲解码。POSIX线程(POSIX threads),简称Pthreads, 是线程的POSIX标准。该标准定义了创建和操纵线程的一整套API。POSIX线程具有很好的可移植性，使用pthreads编写的代码可运行于Solaris、FreeBSD. Linux等平台，Windows平台亦有pthreads-Win32可供使用。ZMQ是iMatix公 司开发的一套高并发的网络消息传输连接库。ZMQ消息可以传输于多种协议之 中，例如TCP、线程之间、多种广播协议、进程之间等；另外，可以通过不同类 型的ZMQ套接字构建多种连接模式，例如发布订阅模式、扇出模式、请求应答 模式、任务分发模式等。ZMQ优秀的异步I/O机制让开发者能够利用多核编程 实现异步消息的处理。可以使用多种语言编写ZMQ程序，ZMQ的同时也具有 良好的可移植性。PDCCH盲解码并行实现中使用Pthread库创建、销毁线程， 使用ZMQ在线程间传递消息以完成线程间同步和数据传递。
在PDCCH信道能量检测之后，任务分发线程将判断所有以8的整数倍开头 的8个CCE上是否有信号，若有，则将这8个CCE的数据及哪些CCE上有信 号打包成一个任务信息：worklnfoo所有任务打包完成后，任务分发线程将所有 workinfo包放到任务池中，即一个ZMQ的套接字中。每个Worker线程在空闲 时都会不断尝试从任务池中下拉一个任务，直到任务下拉成功，此时此Worker 开始8个CCE的PDCCH盲解码流程，解码完成将结果发送到结果池中，即另 一个ZMQ的套接字。结果收集线程不断尝试从结果池中下拉结果并存储结果， 直到成功下拉的结果数等于总的所分发的任务数，此时整个子帧的PDCCH并行 盲解码流程完成。
根据上述并行实现框架，将3.3.5小节所提出的算法在GPP平台上进行了实 现，下面将展示实现的效果。
town! hik sync
/：eue(D:4979
CelIID:332
CeueID:1214
CeueID:1104
图3-10 D2D用户感知到的蜂窝小区及蜂窝用户信息
d2d占用
pucch
CELLUE占用 飞D2D占用(5)
蜂窝占用
图3-11 PDCCH盲解码获得的蜂窝用户资源占用信息与实际占用情况
图3-10展示了 D2D对所处的干扰环境：当前的蜂窝小区ID为332,小区中 存在多个被基站调度的蜂窝用户，它们动态地占用部分蜂窝上行资源。D2D用 户能感知到这些蜂窝用户的存在就是进行了 PDCCH盲解码的结果。图3-11抓 取了一个上行子帧功率测量的结果，其中上图标示了 D2D数据传输占用的资源, 下图标示了蜂窝用户的资源占用情况。图中横轴是资源块(Resource Block, RB) 的下标，当前小区的带宽为20M,因此共有100个RB,纵轴是实际测量到的每 个RB上的功率，单位为dBm/RB。可以从图中看出，在PDCCH盲解码中获得 的RNTI为8755和3014的这两个用户的资源占用情况和实际测量到的占用情况 是吻合的，这说明PDCCH盲解码的结果的正确性。另外，基于解到的蜂窝用户 的资源占用十青况，D2D用户选择了一段空闲的资源段进行D2D数据传输，有效 地避免了 D2D和蜂窝用户之间的干扰，取得了吞吐增益。
