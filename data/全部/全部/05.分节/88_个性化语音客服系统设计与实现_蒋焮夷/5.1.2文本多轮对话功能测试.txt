5.1.2文本多轮对话功能测试
多轮对话功能是本项目的一个核心技术点也是核心难点，为更好地展示多轮 对话的功能测试，本文使用Rasa X作为可视化工具，其基本的技术已在第二章 进行了介绍，其作为Rasa整体框架对话驱动的交互式展示，能够使得机器人语 料的训练来源于真实的对话，且可以在对话中进行调试修改，非常方便地改动错 误，轻松地增加新的语料，这里用Rasa X来展示多轮对话系统的整体效果和识 别的实体意图等信息(不直接采用前端做演示是因为Rasa X的交互界面能将识 别的实体信息、插槽信息、意图信息都展示出来,能够更好地展示多轮多话效果)， 采用多组的测试用例来测试多轮对话的实际效果，首先测试意图的正确识别，然
70
后测试实体提取的正确性，最后测试插槽设置和消息回复的正确性，其中意图识 别的测试用例情况如下表5-2所示。
表5-2 意图识别的测试用例
功能描述
意图识别功能
用例目的
测试意图识别是否正确
前提条件
输入文本消息传送到RasaNLU模块后端服务
测试输入
测试期望输出
实际测试情况
文本信息“你们这里有什么菜品啊”
识别意图为get__info
达到预期效果
文本信息“你好”
识别意图为greet
达到预期效果
文本信息“再见”
识别意图为bye
达到预期效果
文本信息“我要点一碗小面和一碗 米饭”
识别意图为order_dishes
达到预期效果
文本信息“干锅鸡是什么口味的？ ”
识别意图为 get_attribute_info
达到预期效果
文本信息“宫保鸡丁是辣的吗？ ”
识别意图为verify attribute
达到预期效果
文本信息“少要一碗米饭”
识别意图为cancel_order
达到预期效果
其中简单回复的意图识别测试情况如下图5-1所示。
71
utter_greetx.C
US€f_f£3tMI izai<of»
uit&r_byeO.?9
亘见吧
actson^llstenl.O
图5-1简单回复测试意图识别
图中可以看到两个不需要调用Action服务器的简单回复测试用例能正确识 别意图，其中''你好'被识别为greet意图的置信度为0.68而“再见,械识别为意图 bye的置信度为0.72,其回复均为简单的固定回复。
需要调用Action动作服务器的复杂回复的意图识别效果如下图5-2所示。
72
s血干巔谿"sttribtjz^r ste' )Cz.44
sicitr	'tiste''*
廷航门i”干參席“拿
yser_ !es?ur?Z2ii<?n
scvon Query_kri<»wf€fSgs_bB5G1.0
干锅焰的口味是疥辣
sfGtfoh7ect^ivp^',r dishes slGt[">a5t._g ttr"/taste'r: siott^attFsbute^inu'G sts^d"	:'干魔建*
ssatr^aste^^*?' sc； ；w： M t«n0.9/
…一.
siotr*asteT^^n
sser.f&SiiK^s^.rn
图5-2复杂回复的意图识别
上图中可以看到当询问“干锅鸡是什么口味的？ ”时RasaNLU模块能正确识 别句子的意图为get_attribute_infb,而当询问“宫保鸡丁是辣的吗？ ”时，能以0.70 的置信度正确识别意图为verify attribute =
接下来进行实体提取的测试和验证，和意图识别一样，其测试用例的情况如 下表5-3所示，示例的展示效果如图5-3。
表5-3	实体提取和插槽设置的测试用例
功能描述
实体提取和插槽设置功能
用例目的
测试实体提取和插槽设置是否正确
前提条件
输入文本消息传送到RasaNLU模块后端服务
测试输入
测试期望输出
实际测试情况
文本信息“干锅鸡是辣的嘛？ ”
能正确提取实体“干锅鸡”和“麻 辣”，设置插槽taste为“麻辣”， 插槽 last attr 为"taste"
达到预期效果
文本信息“我要点一碗米饭一份宫 保鸡丁和两罐可乐”
正确提取实体“米饭”“宫保鸡 丁”“可乐”并设置插槽
ordered dishes 为{"米饭":1,"宫保 鸡 T"：l,"可乐"：1}
达到预期效果
73
干锅赠
丫空汗y_3ttrWut©r窃曲es":"干锅越丁牯沉e”:"疥礁H
stetf^tBstfe**:"麻辣”}
us^r^f^aturi^ation
actiQB_query_kno¥/ledge_base0.99
干锅斑的口味是麻换
s-atf^obj ect_t y g*： "6 i s hes**l
sjo^^atlribute^rntUil	.
Go建*?nem9h:"干謁建"}
s^otf^taste* tnuli)
-：「： -1
图5-3普通实体提取示例图
从图上可以看到，当询问“干锅鸡是辣的嘛？ ”时，能够将实体“干锅鸡”和“麻 辣％R别并将taste插槽设置为“麻辣，將last_attr插槽设置为，也ste”,这里其实有自 动的dishes插槽设置，但是在之后的处理中又被重新设置为空了，因为dishes 是绑定在同名实体上的插槽其特点是经常需要变动，本文实现Action服务器时 将其作为了单句的过渡插槽，实际点餐的信息由单独的插槽ordered_dishes来存 储。
下图5-4展示了数组形式的插槽设置和相同类别下实体的提取。
..- :- ?■ -
UotfPkhEdr术豉；善妥莖了丁可■乐" userjeatuiizatian
sk)t{9「血佗d_dis*b；r袜歳”:1；■莒垛蹲丁 ":常可乐-：2]j
uH€tr_default0.96
3ctianM.listen0.97
图5-4数组型实体提取示例图
从上图可以看到，当询问“我要点一碗米饭一份宫保鸡丁和一杯可乐”时, 机器人可以提取出其中三个菜品实体并将其设置在ordered_dishes插槽中，并且
74
包含了对应菜品的数量信息，这也为后续的结账或取消部分订单提供了上下文信 息。
接下来，结合上述的意图识别和实体提取插槽设置的功能，展示多轮对话上 下文信息的存储更新和利用，测试整体多轮对话的效果，测试用例如下表5-4所 z]\ O
表5-4	多轮对话的测试用例
功能描述
整体多轮对话功能
用例目的
测试多轮对话上下文信息设置和利用是否正确
前提条件
已经有上下文对话且存储有部分插槽信息
测试输入
测试期望输出
实际测试情况
本轮信息：“再来一份宫保鸡丁” 前置信息：插槽ordered dishes为{" 米饭"3}
正确提取实体“宫保鸡丁乙识别意 图为“order_dishes”并更新插槽 ordered dishes 为{"米饭”3,”宫保 鸡丁”:1}
达到预期效果
文本信息“少要两碗米饭”
前置信息：插槽ordered dishes为{" 米饭"3,"宫保鸡T"：l}
正确提取实体“米饭3识别意图为 "cancel_dishes"并更新插槽 ordered dishes 为:{”米饭”:1,”宫保 鸡丁VI},正确计算价格
达到预期效果
文本信息：“那干锅鸡呢？w 前置信息：插槽last_attr为”price"
正确提取实体“干锅鸡3识别意图 为ask_for_price,生成相关回复
意图识别未达到 预期，其他达到 预期
其中第一个测试用例的实际效果如下图5-5所示。
75
sp^- vUshes ：; M§?x37
us6r_featur?zation
action„query_i<nov/!edge_ba5el.O
sli，” *ordb&_<»s”* 軽-* 圾"：3."S9 码丁 ••: 1:
图5-5多轮对话测试用例一图
由图可以看出，一开始先发送消息“先点两碗米饭”后相关实体被正确提取及 点餐的意图也正确识别，插槽ordered_dishes被更新为｛"米饭":3｝生成的回复符合 预期，接下来输入“再来一份宫保鸡丁'‘的信息后，机器人能结合已知的插槽信息, 并将新的点餐信息添加进去。
测试用例二的效果如下图5-6所示。
76
少要两
csnceLordv；广辰s":"未饭"
来饭"卩
s\_ festud^gt i on
7- :-	「	'-.'
您巨苑的鬆单为1份米滾・1份言保鸡丁，共汁16 元
stot{"ordefed_dishes" ：f-7F?S' ：
^tter_defa«ItO. 9 :
s<tion_hstenO,99
图5-6多轮对话测试用例二图
上图的前置信息为前文对话信息的后续，及此时的插槽ordered_dishes为{" 米饭"3,"宫保鸡丁":1},当输入信息为“少要两份米饭”时，机器人正确提取了实 体和识别了意图且将插槽信息按照用户意图进行了更新，并生成了对应的回复, 计算了现有的点餐信息和价格，所有信息都和预期一样。
测试用例三的效果如下图5-7。
77
siotfprice'^uU]
ver i? y_attribute{ "dishes
sk>t{"dishes"4"-F4^r7§'*]|
user_f«aturization
3€tlon_Query_knowiedge_bass0.99
干锅鸡的价恪是38元
图5-7多轮对话测试用例二图
图中的前置信息为插槽last_attr设置为了”price”,这是由前置对话“宫保鸡丁 多少钱”这个输入完成的，接下来当输入“那干锅鸡呢？’‘这样比较符合我们日常 口语的交流表达时，口语看到机器人能正确提取出实体“干锅鸡”，但是在识别意 图时出现了错误，理论上应该识别为ask_for_price意图，但是识别的意图为 veriiy_attribute,这是因为其实这两个意图在前文中介绍了调用的是同一个函数， 为了适应更口语话的表达，在意图识别时做了区分，目前来说询问价格的 ask_for_price 意图和 verify attribute 意图都是 get_attribute_info 意图的特例，所 以在执行逻辑上基本一致，只是在提取attribute实体的时候有不同。
整体来说，不管是实体的提取还是意图的识别以及整体的多轮对话效果都符 合文本多轮对话的项目预期，能够达到比较好的效果。
