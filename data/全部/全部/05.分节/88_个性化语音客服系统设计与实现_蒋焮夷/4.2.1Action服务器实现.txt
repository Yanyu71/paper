4.2.1Action服务器实现
这里的Action服务器为处理对话的核心模块，负责管理、修改插槽和依据 RasaNLU模块提取出的实体和识别的意图做逻辑处理，本文实现的Action服务 51
器为智能点餐机器人相关逻辑处理，首先关于插槽的设置除了之前提到的实体都 有对应的插槽外，额外设置的插槽如表4-4所示。
表4-4补充插槽表
插槽名称
简单解释
ordered_dishes
存储整个对话已经点好的菜品信息，为键值 对结构，键为菜品名称，值为数量
last_attr
存储上次对话的菜品属性值，如果本次对话 不包含属性值则采用该属性值替代
补充插槽不在实体提取时候自动设置而是由Action服务器处理对话逻辑时, 在必要的地方设置来保证对话上下文的正确和实现多轮对话。
Action服务器作为一个单独的服务器模块接收对话的信息同时也调用了知 识图谱模块来完成对话上下文的逻辑处理，其主要也是按意图进行驱动，这里简 要列举其基本的执行逻辑和功能如下。
• verify attribute：验证属性信息（如口味，价格信息），调用知识图谱存 储结构读取对应实体的属性信息，然后生成回复返回。由于这里的属性信息可能 来源有多种情况，包括来源于本句话中的实体提取，包含了值的实体提取以及对 于历史存储的实体提取，基本的判断流程如图4-8所示。
52
图4-8询问菜品属性流程图
如图中所示，在识别到意图为跟菜品属性密切相关的verify_attribute>
get attribute info以及ask_ft)r_price意图时，都会走到这里的函数逻辑，首先会
用到dishes插槽中的值来表示询问属性的菜品名称，然后优先选择有值的属性通
过遍历知识图谱得到具体的属性名，如语句，辣不辣”中通过“辣”这个具体值推理
53
出需要询问的菜品属性为口味，其次如果语句中attribute插槽本身有值则直接使 用该值作为属性名，最后会依据插槽Jast_attr当做询问的属性名，这里是为了符 合上下文的询问，如先询问了某种菜品的属性，下一次询问时只带上了菜品名， 利用这个插槽配合意图就能理解用户的语义还是想询问菜品的属性。最后得到 了菜品名和属性名及属性的值，根据回复模板生成固定格式的回复并将插槽 last_attr设置为本次询问的属性名来满足下一轮对话再次询问，同时将attribute 插槽设置为空避免再次询问其他菜品这个属性时出现顺序和逻辑上的错误。
• check_order：执行结账，显示点餐信息和需要付款钱数，信息来源于 ordered_dishes插槽中的菜品名称和数量，再查询知识图谱中存储结构菜品单价， 进行计算。
• get_mfo：得到满足属性要求（如果有属性）的菜品列表，通过实体提取 的attribute实体值（可能为空）调用知识图谱对象去遍历匹配整个知识图谱存储 结构满足条件的菜品，生成回复。
• get_attribute_info:执行同verify_attribute也是先取得对话中属性信息，如 果本次对话没有attribute实体值则使用插槽中last_attr的属性作为问句的属性。
• ask_fi）r_price:作为没有明确带有“价格”实体值但语义识别意图为询问价 格，执行逻辑同verify_attribute<.
• order_dishes:点餐的意图识别后，需要再识别每样菜品的数量，这里为了 识别中文的数量词加入了一个小算法，能准确从中文中读取数量为数字，但是依 赖于位置关系，所以点餐数量词必须在菜品名称前，这样依据位置可以一一对应， 最后采用增加的方式添加到orderd_dishes插槽中，如果分两次点餐同样的菜品， 能够将数量进行相加。
• cancel_order:点餐过程中可能需要取消某样菜品，这个意图识别后采用 同order_dishes的办法将量词和菜品进行一一对应，具体的流程图如图4-9所示。
54
图4-9取消点餐逻辑图
