3.3.5复杂度分析
32
计算复杂度决定了算法的适用性，特别是对于动态信道仿真，计算复杂度越 小代表着每次探头选择的时间越少，其适用性越高。在本小节中，选择主流的 multi-shot算法作为基准，并比较两种方法的计算复杂度。
算法3-1基于梯度下降的探头选择算法 输入：目标相关性，传输因子;
初始化参数：/ = l,w(l),V(l)，z2』
While / <7 Do
随机选取固定大小的子集
根据公式3-10和3-11计算梯度和动量
根据公式3-12更新权重向量w
调整权重向量：w=[w]+,w = w/||w||i
If t mod AT = 0 then
If ||w||0 > K then
2=2/2
Else if ||w||o < K then
End If
End If
End While
输出：权重向量w
Multi-shot算法基于式3-6中定义的目标函数进行凸优化，并在每次迭代时 移除功率权重最小的探头，直到剩余的探头数量达到目标为止。Multi-shot算法 的流程如图3-4所示。文献[42]证明了式3-6中的优化问题本质上是一个二阶锥 规划问题。因此，每一次迭代都可以等效为二阶锥规划问题，在第，次迭代中， 二阶锥的维度为M + 1,且一阶等式约束的维度为N-z + lo因此，根据文献[43], multi-shot算法在第i次迭代中最坏情况下的计算复杂度可以表示为：
O((N-Z + 1)3 + (7V-Z+1)2 (M +1) + (M +1)2)	(3-14)
很明显，multi-shot算法的计算复杂度与探头数的立方成正比，对于具有数 百个候选探头的3D探头配置来说，计算复杂度将变得难以承受。
在本章提出的算法中，主要的计算开销是每次迭代中的梯度计算。因此，该 方法的复杂度可以用O(SN)表示，其中S表示每次训练中批量的大小。因此，与 multi-shot算法相比，本章提出的算法具有更低的计算复杂度，更适合应用于三 维的探头选择。
33
图3-4 multi-shot算法流程
