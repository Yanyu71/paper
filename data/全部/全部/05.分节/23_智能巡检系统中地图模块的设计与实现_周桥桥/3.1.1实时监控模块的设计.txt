3.1.1实时监控模块的设计
在智能巡检系统中，为了提高巡检人员的巡检效率以及巡检的到位率，管理 人员需要实时的了解包括巡检人员位置等的信息；另外，为了统计巡检人员的工 作业绩，管理人员需査看某巡检人员某一特定时间段的巡检路线。因此，在系统 的整体设计时，我们设计了一个实时监控模块，该模块提供以下的功能：
(1)将巡检人员的巡检路线实时的展现在地图上，便于管理人员监督其工 作的效率以及巡检的到位率。
(2)提供历史轨迹回放，将某些巡检人员某一特定时间段的巡检轨迹展现 在地图上，便于管理人员考核。
在传统的巡检系统中，为了实现上述的功能，通常釆用通过客户端向服务器 发送服务请求，服务器响应客户端的请求并返回当前数据库中的数据信息的方 式。然而，这种实现方式是一种伪实时监控，即为了到达实时监控的效果，客户 端需不断的向服务器发送请求以获取巡检终端最新的数据信息。这种方式有以下 几种弊端：第一、为了达到实时监控的目的，用户需通过不断的刷新页面以向服 务器发送请求来获得用户的最新数据信息，这将导致管理人员工作繁重，不利于 管理人员的操作。第二、这种通过不断发送请求以达到实时监控的方式会导致客 户端和服务器之间存在很大的数据交互，对网络的性能要求较高且存在一定的传 输延时。第三、为了响应客户端的请求，服务器每次将向客户端发送巡检人员的 到目前为止的所有数据信息，这导致服务器和客户端之间存在很大数据传输冗 余。
为了避免上述弊端，在本智能巡检系统中，我们釆用Ajax技术实现服务器 在满足某种特定条件下主动向客户端发送特定的信息数据。具体地，客户端通过 Ajax引擎向服务器发起HTTP请求，服务器接受客户端的请求，并保持HTTP 连接。服务器每隔一个特定的时间段(在本系统中我们设定为每隔一分钟)，査 询数据库中特定巡检终端的数据信息,根据查询结果判断是否有终端新上传的数 据信息，如果有，则将新的数据信息主动发送给所有当前服务的客户端。客户端 的Ajax引擎的响应函数解析服务器推送的数据信息，并最终在地图上展现出来。 釆用Ajax技术的实现方式有以下好处：第一、保证了客户端能够获实时的获取
13
终端的位置信息，达到了实现实时监控的效果。第二、服务器定时主动的发送特 定信息数据，不需要客户端不断发送请求，实现了真正意义上局部刷新。第三、 服务器只向客户端推送巡检终端新上传的GPS信息，最大限度地减小了客户端 与服务器端之间的信息交互量。
在本智能巡检系统中，我们将借助百度地图这一地理化显示工具将巡检人员 的巡检轨迹可视化地展现出来。在实时监控模块的设计中，综合考虑到智能巡检 系统的行业特点以及模块的设计原则，主要包括初始化和实时画点两个部分，具 体的功能设计如下：
初始化部分主要负责：初始化实时监控页面的布局、加载时间选择控件、加 载百度地图、通过Ajax技术与服务器建立HTTP连接、从服务器返回pagebean 信息中解析出的巡检人员的信息并加载到用户选择控件中。其工作流程如图3-1 所示。
（开始'）
HTTP响应
:建立连接并返冋人
员信息
* ,
加载人员信息
图3-1初始化部分算法流程
实时画点部分主要负责：通过Ajax验证管理人员是否选择了监一控对象，若 没有，则弹出提示对话框。将管理人员选择的监控时间段以及监控人员等信息传 递给后台服务器，服务器根据这些信息定时的查询数据库，判断是否有满足条件 的新的数据到来，如果有，返回数据信息给所有服务的客服端，客户端解析收到 的数据信息，通过对百度地图的二次开发将巡检人员的位置等信息实时的展现在 地图上，呈现给管理人员。其工作流程如图3-2所示。
14
客户端调用百度API
与Ajax加载线路
客户端:		r—		i
图3-2实时画点部分算法流程图
