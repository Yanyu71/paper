4.2Android端地图模块的实现
根据上述Android端地图模块的设计需求，我们将分一下三个子模块来实现 地图模块，这么做的好处是，模块之间的耦合性低，便于开发人员的后期维护。
＞精确定位到目的地位置模块：根据用户输入的目的地坐标（经纬和维度 信息），在地图上查找并显示目的地。
＞实时定位模块：在地图界面中文本框中实时显示用户当前的经纬度信息 和地址信息，在地图界面的地图上实时显示用户的位置。
＞巡检任务显示模块：在地图上显示用户当日的巡检任务（线路或者区 域）。
1.精确定位到目的地位置模块的实现
步骤一、界面布局
在以经纬度查找目的地位置的页面布局文件中，我们采用了绝对布局方式。 在该页面布局中，我们设置了两个文本控件，用户通过在这两个文本框中输入要 定位到的目的地的经度和纬度信息，设置了三个按钮控件，分别用作查询按钮和 地图放大、地图缩小按钮，以及一个地图控件用来加载地图。在实际开发时，必
44 须注意的是，由于我们要在界面中加载地图，因此，必须在布局文件中添加用户 申请的地图apiKey属性，否则无法加载地图。同时，必须在配置文件中添加访 问互联网的权限，以便通过网络下载地图，否则，页面上的地图将呈现成白色的 方格。
步骤二、对査询按钮设置监听
由于模块需要通过地图组件来加载地图，因此，该模块的AddressActivity 类必须继承地图类。在该AddressActivity函数中，通过findViewByld (R.id.Buttonquery)方法来找到页面布局中的査询按钮，并对该查询按钮设置监 听函数，当用户输入经纬度后点击查询按钮时，将触发监听事件函数在该监听事 件函数中，通过 if(mEditTexLatgetText().toString().equals( ““))方法判读文本框 中用户输入的经纬度信息是否为空，如果为空，则提示用户；否则，首先，获取 文本框中的经纬度信息并转换成Double型的数据；其次，将转换后的经纬度信 息再度转换为适合智能终端屏幕的经纬度信息点；然后，找到界面布局中的地图 对象，调用该对象的getController ()方法实例化一个控制器(mMapController)； 最后，通过实例化的控制器的animateTo。方法设置地图的中心位置为转换得到 的经纬度信息点，同时，设置地图的图层级。在本文中，考虑到智能巡检系统中 智能终端的屏幕大小，基于为了便于用户的操作的准则，我们将地图的放大层级 初始化为十七。
步骤三、对放大和缩小按钮设置监听
考虑到在实际操作情况中，用户需要对地图进行放大或缩小操作。因此，为 了满足用户的需求，我们在布局中设置了两个按钮分别用做地图的放大和缩小。 为了使按钮具备上述功能，需要对这两个按钮设置监听事件函数，以响应用户对 其的操作。然而，智能终端上加载的地图层级是有一定的取值范围的(位于0 到17之间)，因此，在监听事件函数中，我们首先应当判断用户的操作是否会导 致地图的层级越界，如果没有越界，则设置地图的层级为放大(或缩小)后的地 图层级；如果越界，则通过showDialog()方式提醒用户地图不能再放大或缩小。
45
图4-2 Android端精确定位到目的地位置模块算法流程
2.实时定位模块的实现
步骤一、实时定位界面的布局
在实时定位的页面布局中，我们采用了一种相对布局方式。在页面的顶端我 们设置了两个文本框控件，分别用来实时的显示用户的当前位置的经纬度信息， 以及地址信息。设置两个按钮控件，用作地图放大和缩小。设置了一个MapView 控件用来加载地图，在该控件中，需要设置地图的相关属性，如宽度、高度、局 域界面的位置等等。值得注意的时，还需要设置apiKeyo由于该模块涉及位置 信息服务，需要用到智能终端的GPS模块，为此，我们必须在配置文件中添加 访问的一些相关权限文件，以便支持其对硬件的访问。
步骤二、获取位置信息服务
由于该子模块中包含有地图定位功能，因此，该模块的控制类必须继承地图 类。在这个类的中，首先，设置该类所关联到的页面布局。然后，可通过位置管 理类所提供的系统位置服务来获取用户的位置信息。具体地，我们需要通过实例 化一个位置管理类来获取和调用系统位置服务。由于实际存在很多的位置提供 商，因此，在获取到位置管理类的实例后，还需要根据一定的准则选取一个位置 提供商，获取到某一特定的位置提供商后，通过调用提供的方法得到用户当前的
46 位置信息。本应用程序通过标准集合法来选取最佳位置提供器，即通过一个标准 集合，让系统根据次标准集合匹配最适合的位置提供器。在本系统中，考虑到巡 检行业的特性和目前智能终端的性能，我们在标准集合设置了经纬度的粗略精确 度、电量消耗等级、是否需要返回海拔方位信息等准则。
步骤三、对用户位置设置监听函数
巡检人员在进行巡检工作时，其位置是不断变化的。因此，我们应当对用户 的位置设置监听函数，监听用户位置是否改变，并根据监听结果做出相应响应。 具体地，通过 locationManager.requestLocationUpdates (provider, 3000, 0, locationListener)注册了一个周期性的更新。在本文中，考虑到用户的巡检行业巡 检人员的位置变化快慢，釆用3000ms更新一次。其中，最后一个参数是一个位 置监听事件函数，在该事件函数中，我们写入了一个监听位置改变的方法，当用 户的位置改变时，将触发该方法。在该方法中，获取到用户新的位置信息，并调 用refieshMap ()函数，通过该函数更新用户在地图上的图标。
步骤四、在地图上实时地放置标记
为了放置定位图标的功能，我们专门设计了一个xianunderlay类，它继承了 Overlay,主要用来在一个地图组件中显示当前的位置和方向。在xianunderlay类， 我们写入了一个在地图上添加更新标记的draw ()函数。在该draw ()函数中， 首先，根据传递进来的位置信息参数获取到用户的当前经纬度信息；其次，把获 取到的经纬度信息转换为一个安卓系统的地理位置点；然后，通过地图组件提供 的投影将该地理位置点转换为终端屏幕上的一个点；最后，对画笔进行相关属性 的设置，并将位置图标绘制在画布上。
利用上述xianunderlay类，我们可以实时在地图上添加标记。具体地，首先， 判断获取到的位置信息是否为空，如果是，则提示用户无法获取到位置服务，请 检查是否打开了 GPS服务；否则，以获取到的位置信息为参数调用refreshMap ()函数，在地图上标记用户的当前位置。在re任eshMap ()函数中，为了利用 上述的xianunderlay类添加标记，我们通过ccaddress =new xianunderlay 0创建了 一个实例，然后，通过组件提供的方法获取界面的地图层;最后，将该xiammderlay 中draw ()方法所做的标记添加到终端地图的图层上，成功地将定位图标显示 在地图上。
47
图4-3 Android端实时定位模块的算法流程
3.巡检任务显示模块的实现
巡检人员当日第一次通过用户名和密码向服务器发送登录请求时，服务器通 过鉴权后会向智能终端返回巡检人员当日的巡检任务。Android端解析报文，将 巡回线路(巡检区域)信息插入到SQLite数据库的巡回线路信息(巡回区域信 息)表中，设置全局变量mission_indicator为0 ( 1 )。巡检人员点击查询按钮时, 首先判断该全局变量mission_indicato是否等于0,如果等于零，则查询巡回线路 信息表，将巡回线路显示在地图上；否则，查询巡回区域信息表，将巡回区域显 示在地图上。
在实现巡回任务加载之前，首先应当实现将服务器返回的巡回任务解析后存 储到相应SQLite数据库表中。巡回线路和巡回区域的存储流程类似，下面我们 以巡回线路为例，给出存储的实现方法。
第一步、在SQLite数据库中新建了一张巡回线路信息表(TJine)o具体地, 我们设计了一个Database SQlite类。在该类中，我们写入了一onrong ()方法, 用以实现新建一张数据库表。
因此，用户通过应用程序向服务器发送登录请求后，将接收到服务器返回的 特定格式的报文，根据相应的准则解析报文并获取到验证码和巡回线路信息，通
48
过验证码判断用户是否具有登陆程序的权限，如果有，则实例化一个 Database_SQlite对象，并调用该对象的onrong ()方法，实现在SQLite数据库 中新建一张巡回线路信息表(T_line)。
第二步、将解析的巡回路线信息存储到数据库表中。具体地，我们在 Database_SQlite类中写入了一个插入函数，该函数实现将传入的参数插入到相应 的数据库表中。具体代码如下：
public long insert(Strmg tl,String t2)
{
SQLiteDatabasedb=this.getWritableDatabase();
Contentvalues cv=new ContentValues();
cv.put( FIELDqiao, tl);
cv.put( FIELD_rong,t2);
long row=db.insert(TABLE^NAME, null, cv);
return row;
)
同上，循环读取经纬度信息数组，并调用实例化对象的插入方法将获取到的 巡回线路关键点的经纬度信息存储到SQLite数据库中。
/巡回线路显示的实现
步骤一、读取SQLite中的信息、转换后存储到GeoPoint型的ArrayList中
在 Database SQlite 类中，我们设计了—public Cursor select()函数，通过 该函数査询数据库中的巡回线路信息表，得到巡检人员当日巡回路线上关键点的 经纬度信息及并按点的顺序升序排列。
为了查询巡回线路信息，在巡回线路的显示的类中，我们实例化了一个 Database_SQlite对象，调用该对象的select ()方法，得到一个游标类的结果集 (line_cursor)»调用游标类的moveToNext ()方法循环读取出每一记录点的地 理位置信息，再对每一个点分别读取出它的经度信息，维度信息可通过相同的方 法得到。由于在查询时，设置了査询结果按升序排列，因此，按先后顺序，循环 获取到的经纬度信息刚好就是它在线路中的顺序。将得到的经纬度信息转换为安 卓地理位置类型的数据，并存储到列表型的gpoint数组中。最后，关闭SQLite 数据库。 -
步骤二、根据数组中的经纬度信息画巡回路线
为了在地图上添加巡回线路，我们设计了一个继承了 Overlay的LineOverlay 类。在该类中，我们写入了一个public boolean drawline()函数，通过该函数在地 图上画线。具体地，在该函数中，首先、声明了一个画笔变量，设置了画笔的相
49
关属性，如颜色、风格、粗细等等。其次，获取到页面布局文件中的地图组件， 利用该地图组件获取它的投影以便实现经纬度和智能终端屏幕的一一映射，然后, 声明了一条路径变量，循环读取经纬度数组中的数据，通过上述所得的投影将经 纬度映射到终端屏幕上一点，同时，将所得的点添加到路径中。最后，通过画布 的画路径方法将路径添加到画布上。
为了在地图上显示巡回线路信息，在巡回线路的显示的类中，我们实例化了 一个LineOverlay,该实例化对象会自动重载drawline ()方法，获取到一个画有 巡回线路的画布，然后获取地图组件的地图层，利用地图曾添加方法将该画布的 lineOverlay添加到地图上，实现了在地图上显示巡回线路。
图4-4巡回线路显示的算法流程
/巡回区域显示的实现
步骤一、查看复选框控件的实现
在实时地位界面，我们在顶端设置了一个查看复选框控件，用户通过点击该 复选框控件选择是否查看巡回任务。在类中，首先在页面布局文件中找到该复选 框，并对复选框设置监听事件函数，以响应用户的操作。在该监听事件函数中， 通过判断复选框是否被选中，来决定是否加载巡回任务。
步骤二、查询SQLite数据库巡回区域表中任务信息
该部分的实现与上述的巡回线路相同，在此不再赘述。
步骤三、在地图上画巡回区域
为了在地图上添加巡回区域，我们设计了一个继承了 Overlay的yuanunderlay 类。在 yuanunderlay 类中，我们写入了一个 public boolean drawcircle()®数，通 过该函数在地图上画圆。具体地，在drawcircle函数中，首先、我们声明了一个
50 画笔，并设置了画笔的一些属性，如颜色、风格、粗细等等。其次，获取到页面 布局文件中的地图组件，获取所得地图组件的投影以便实现经纬度和智能终端屏 幕的之间映射关系。然后，根据查询获取到的圆心经纬度，将其转换为一个安卓 地理位置点。获取到该地理位置点后，通过调用上述获取到的投影将其映射为终 端屏幕上的一点。同理，通过调用上述获取到的投影将半径映射到终端屏幕上。 最后，画布上画圆。
为了在地图上展现用户的巡回区域信息，在巡回区域的显示的类中，我们实 例化了一个yuanunderlay,这个实例化对象会自动重载drawcircle ()方法，获 取到一个画有巡回区域的画布，然后获取地图组件的地图层，利用获取到的地图 层的添加方法将该画布的circleOverlay添加到地图上，实现了在地图上显示巡回 区域。
▼
读取SQLite中数据
中心经纬度和半径转换 为终端屏幕坐标
图4-5巡回区域显示的算法流程
