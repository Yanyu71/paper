3.2.2线路巡回模块的实现
根据上述线路巡回模块的设计需求，我们将分别实现巡回线路信息和巡回线 路计划的添加、删除、查询、修改及详细显示。
1.线路添加的实现
步骤一、加载添加线路信息页面
在巡回线路信息管理页面设置了一个添加线路的按钮，用户通过点击它跳转 到添加线路信息页面。具体地，我们对添加线路按钮设置了一个点击触发事件， 用户点击时将触发该事件，在函数中，写入了 parent.location.href="<umpay:newUrl url='7pm/patrollineinfoAdd.pm7>,+'&start=start"方法»Href 链接的目的是把带有参 数的请求发往服务器端，服务器端根据相应的参数返回了一个添加线路的模型和 视图，客户端解析该模型和视图，为用户呈现出添加线路页面，成功的完成了上 述跳转。在添加线路信息页面的右侧，通过div、textbox> lable、button这些控 件的相应组合形式将巡回线路的基本信息显示出来，并且为了显示的整齐，我们 将上述控件按照相关次序放在一个Table的控件中。基本信息的布局显示如下， 其中，我们设置了一个检验按钮，当用户在文本框中填写完区域编号后，通过点 击该检验按钮向服务器发送査询请求，服务器查询数据库中是否己有此区域编 号，如果有，弹框提示用户已存在此区域编号，请重新输入。
钏摇信息
线路基本指息
孀瞧：
痂席：
—
喩经点：
备注德悬
添加 重養；
图3-8线路基本信息布局
步骤二、地图上巡回线路制定
首先在添加线路页面中，加载百度地图，方法与3.1.2节相同。注意，为了
代码的简洁性和高效性，在本部分，我们需将该地图声明成一个全局变量，方法
27 为window.map = map。对于加载的地图我们设置了双击监听事件。当用户双击 地图时，将触发该事件函数。在该函数中，第一步，将该点存储到点数组中，获 取用户双击地图时点的经纬度信息并拼装成特定的形式存储到经纬度信息数组 中。第二步，对每一个双击地图上的点，我们设计了一个addrong(e.point)函数用 以对该点生成标记和对标记设置相应的监听事件，在addrong (e.point)函数中， 首先，根据传递进来的经纬度参数，通过调用百度地图API提供的方法生成一 个标记，其次，将生成的标记存储到标记数组中，并设置标记的相关属性，比如: 大小、颜色、能否拖拽等。最后，将该标记添加在百度地图的图层上，达到显示 的效果。第三步，调用画线函数drawPolyline(),在该函数中，首先，判断点数 组中是否只存在一个点，如果是，则结束。否则，清除地图上所有的线路图层， 根据经纬度数组中的GPS信息，通过调用百度地图API提供的画线函数画线， 同时，设置该线路的相关属性，如颜色、粗细等，最后将该线路添加到百度地图 的图层上。
在实际情况中，用户在制定线路时，可能需要对线路做一些修改，使得制定 的线路精确性较高。为此，在本系统中，我们考虑了两种操作。一种是当用户双 击标记点时将在地图上删除该标记点，并且标记点的前后标记点自动连接成一条 线路。另一种是用户可以在地图上通过拖拽标记点来改变线路轨迹。为了实现上 述两种功能，我们将对地图上的标记点设置双击的监听事件和拖拽的监听事件。
在上述两种监听事件中，都会涉及到对各种数组中的数据元素进行修改，在 智能巡检系统的开发中，我们将借助数组中的splice函数。splice函数的功能是 在指定的位置对数组中的数据进行修改，它的使用方式为 arrayObject.splice(index,howmany,elementl,	....,elementX) [l3h
当用户对地图上的标记点双击时，将触发该标记点双击监听事件函数。在 该函数中，首先，调用deleteMarker(marker)函数删除该标记，具体地，在 deleteMarker(marker)函数中，循环读取标记数组中的数据，将读取出的数据与传 递进来的参数marker (双击点的标记)比较，如果相等，则调用移岀层方法将该标 记点从地图中移除，并且通过数组的spice函数将相对应的点从相关数组中删除。 即通过markersArray.splice(i, 1)将标记从标记数组中删除，通过latLngs.splice(i, 1) 将该点的经纬度信息从经纬度数组中删除，通过points.splice(2*i,2)该点从点数组 中移除。最后，调用前面提及的画线函数drawPolylineO,根据更新后的经纬度 数组重新连线。
当用户对地图上的标记点拖拽时，将触发该标记点的拖拽监听事件函数。在 该事件函数中，首先，调用relocateMarker(marker,e)函数更新数组。具体地， relocateMarker(marker.e)函数中，循环读取标记数组中的数据，将读取的数据与
28
传递进来的参数marker (拖拽前该点的标记)比较，找到该标记点在原来点数组 和标记数组中的位置，更新数组中相对应的信息。即通过latLngs[i]=e.point;将拖 拽后点经纬度信息更新到经纬度数组中，通过points[2*i]="("+e.point.lat和 points[2*i+l]=e.point.lng+")"将拖拽用拖拽后的标记点更行到点数组中。最后，调 用画线函数drawPolyline(),根据更新后的经纬度数组重新画线。
步骤三、保存巡回线路信息
用户在地图上画好线路后，通过点击确定按钮将线路信息保存到服务器的数
据库中。根据成功与否，给予不同的提示框。
图3-11线路存储提示框
2.线路查询的实现
步骤一、查询按钮的实现
在线路巡回信息管理页面，提供了通过用户设置的查询条件快速查询巡回线 路信息。具体地，通过 <input type="text" name="nametxt"id="nametxt" value="${nametxt}" />在页面中设置了一个文本输入框，用户在该文本匡中输入 线路编号，通过点击查询按钮向服务器端发起查询请求并将线路编号这一参数传
29
递给服务器。另外，我们还设置了一个重置按钮，清除用户设置的查询条件。
线路编号：	§ K香面厂重置I
图3-12区域查询界面
步骤二、服务器接受请求，查询并返回结果
服务器patrollineinfbController接受该请求，指派业务逻辑层的 patrollineinfoService和patrollineinfoDao处理该请求，业务逻辑层根据Ibatis配置 文件链接到数据库。根据参数在数据库中查询，将查询结果拼装成特定的 pageBean□ patrollineinfoController 指定 areainfbView 来解析该模型和视图「门，将 其显示在页面上。该部分的代码实现与3.2.2节的司机信息查询类似。
图3-13煥路查询的信息流程
线路删除、详细显示线路信息、巡回线路计划的增、删、改、查等功能的实 现与上述过程类似，在此不再赘述。
