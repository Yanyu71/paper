3.1NS.3介绍
NS-3仿真平台是一个用于研究和教育的离散事件网络模拟器，NS-3项目开 始于2006年是一个开源项目。NS-3不是NS-2的向后兼容扩展，是一个新的模 拟器。NS-2和NS-3网络模拟器的设计和实现使用的语言是C++,但是它们不支 持对方的API,在构建NS-3模拟器的同时，NS-2的一些模块已经移植到了 NS-3平台。NS-3为网络研究和教育提供了一个开放的、可扩展的网络仿真平台。简 而言之，NS-3为用户提供了一个离散事件网络仿真平台，用户可以通过它来研 究特定网络环境下各种协议的执行和工作原理。使用NS-3仿真系统的优势包括 它可以研究一些真实情况无法模拟出来的场景，并可以通过灵活的参数配置重复 相同的仿真环境或模拟特定的仿真场景，达到自己的研究目的。NS-3模拟器中 大多数模块的设计主要是针对互联网协议的研究，但是NS-3的仿真功能并不仅 仅是这些。有一些使用者利用NS-3来模拟非基于Internet的系统。目前已经有 许多专门用来研究网络的仿真器，如OPNET, GloMoSim, NS系列等，以下是 NS-3与其他工具相比的一些显著特点。
NS-3被设计成一套可以与其他外部软件库结合在一起的库。虽然有些仿真 平台已经将图形用户界面集成到了各自的仿真器中，但NS-3在这方面更为模块 化。NS-3可以使用一些外部动画设备和数据分析和可视化工具。在NS-3仿真器 上做开发或者对其进行扩展，开发者更倾向于使用软件开发工具来实现，这样可 以提高工作效率。NS-3主要用于Linux系统，它还支持FreeBSD, Cygwin,并 且正在开发本地Windows Visual Studio使其支持NS-3。NS-3不是任何公司正式 支持的软件产品。用户可以通过邮件的形式对NS-3的更新发展提供支持。
与NS-2的比较
对那些熟悉NS-2 （NS-3之前的流行工具）的人来说，NS-3最明显的外部变 化是脚本语言的选择。NS-2中的程序在OTcl中编写脚本，模拟结果可以使用 Network Animator nam进行可视化。纯粹从C++ （即，没有任何OTcl的main （） 程序）在NS-2中运行仿真是不可能的。而且，NS-2的一些组件是用C++和OTcl 编写的。在NS-3中，模拟器完全使用C ++编写，并带有可选的Python绑定。 模拟脚本因此可以用C++或Python编写。新的动画器和可视化器可以在当前的 开发中使用。由于NS-3生成pcap数据包跟踪文件，所以还可以使用其他实用
14
程序来分析跟踪。但也有相似之处，例如，都是基于C++对象，而NS-2的一些 代码已经被移植到NS-3。
使用NS-3更高效的原因如下：
NS-3目前处于主动维护状态，有一个积极的响应用户邮件列表，而NS-2则 维护得很少，十几年来在主代码树中没有再看到重大的模块添加。NS-3提供了 NS-2中没有的功能，如代码执行环境的实现（允许用户在模拟器中运行真实的 代码）。与NS-2相比，NS-3提供了更低的基本抽象层级，使其能够更好地与实 际系统组合在一起。在NS-2中发现的一些限制已经在NS-3中得到了解决，如 在节点上正确支持多种类型的接口。
NS-2由于开发时间较长，与NS-3相比，拥有丰富的网络模块。然而，NS-3在几个热门研究领域中有更详细的模型，如复杂的LTE和WiFi模型，并且它 实现的代码支持一个宽频谱高精度模型。用户可能会惊讶于使用直接代码执行 （DCE）框架可以将整个Linux网络堆栈封装在NS-3节点中。特别是如果它们 已经用C++实现的话，NS-2模型有时可以移植到NS-3。	7
,峪
有几个NS-3用户必须知道的重要资源。主网站位于http://www.nsnam.org, 提供有关NS-3系统的基本信息。详细的文档可以通过 http://www.nsnam.org/documentation/获得。您也可以从此页面找到与系统架构相 关的文档。有一个Wiki可以补充NS-3的主要网站，你可以在 http://www.nsnam.org/wiki/找到它。您将在那里找到用户和开发者常见问题解答， 以及故障排除指南，第三方贡献代码，论文等。源代码可以在http://code.qsnam.org/ 找到并浏览。在那里你会找到名为NS-3-dev的仓库中的当前开发树。核心开发 者的过去的版本和实验版本也可以在那里找到。
