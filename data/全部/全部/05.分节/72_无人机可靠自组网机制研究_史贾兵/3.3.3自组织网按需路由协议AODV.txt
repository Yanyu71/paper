3.3.3自组织网按需路由协议AODV
该模型实现了 Ad Hoc按需距离矢量（AODV）协议的基本规范。该模型是 基于ns2仿真平台的AODV模型编写的，并对其进行了优化和调整。AODV模 型的源代码的目录在src/aodv中。
22
类 aodv::RoutingProtocoi 继承 Ipv4RoutingProtocol 实现了所有服务数据包交 换的功能。基类定义了两个用于分组路由和转发的虚函数。第一个， aodv::RouteOutput(),用于主动发包时调用的：第二个，aodv::RouteInput(),用于 转发和/或分发收到的数据包。该协议调用取决于许多可改变的参数。此功能的 参数是aodv:：RoutingProtocol的属性。参数的缺省值是从RFC中来的，并允许启 用/禁用协议特性，如广播hello消息、广播数据包等。AODV按需发现路由。因 此，当路由请求包(RREQ)被发送出去后，AODV模型缓存所有的数据包。aodv-rqueue.cc 中实现了 数据包队列。Ipv4RoutingProtocol::ErrorCallback()、 Ipv4RoutingProtocol::UnicastForwardCalIback(),数据包的智能指针和 IP 报头，都 存储在这个队列。数据包队列实现了旧数据包的垃圾收集和队列大小限制。
在标准中定义的路由表的实现支持旧条目的垃圾回收和状态机。它是作为一 个STL映射容器实现的。在这个映射关系中key是IP地址。此AODV实现可以 检测单向链路的存在，并可以在必要时避免它们。如果一个节点收到来自邻居节 点的一个RREQ,这可能是单向链路造成的。这中方式是由AODV-UU实现的 并且可以将其禁用。协议操作非常依赖于链路断开检测机制。该模型通过两种方 式实现。首先，这个实现支持hello消息。然而，hell。消息不是在无线环境中执 行邻居感知(至少不超过802.11)的好方法。因此运行在无线环境时，性能可能 会很差。有以下几个原因：1，HELLO消息是广播。在802.11中，广播通常比单 播己更低的比特率进行,因此HELLO消息可以比单播数据能够传播得更远。2, Hell。消息很小，因此比数据传输更容易发生比特错误，3,广播传输不能保证是 双向的，不像单播传输那样。第二，如果可能的话，我们使用第2层反馈。如果 在帧传输时所有重试发送失败，链接被认为是断开的。这种机制用于主动链接，比 第一种方法工作得更快。
