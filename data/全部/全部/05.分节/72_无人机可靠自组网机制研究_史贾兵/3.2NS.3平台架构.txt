3.2NS.3平台架构
NS-3源码主要放在src文件夹中，软件组织结构如图3-1所示。通常情况 下，上层的模块依赖于下层模块。可以看到最下层是核心模块，它实现了 NS-3 的基本机制，如日志，事件调度，属性，回调，智能指针等。第二层是网络模块， 主要包括的是网络数据分组模块。第三层包括因特网模块和移动模块，其中因特 网模块主要包括TCP/IPv4和IPV6协议族的相关模块，因为大多数真实的网络 都是在因特网基础上搭建的所以在仿真中具有重要的作用。第四层包括协议模块, 应用模块，设备模块，传播模块等，每个节点都可以安装多个应用，同时也可以 安装多个设备进行通信。第五层和第六层分别是助手（helper）模块和测试模块， 在NS-3中每一个模块都有helper文件夹用来存放helper源码和test文件夹用来
15
存放模块测试源码。助手模块主要是用来封装模块底层APL将大多数的值设置 成默认值给使用者提供容易使用的接口。测试模块是用来测试底层API功能的 正确与否。
test
helper
protocols applications devices propagation
internet	mobility
network
core
图3-1 NS-3软件组织结构
下图展示了 NS-3网络的基本模型，主要包括四个部分：应用，协议栈，网 络设备，信道。图中展示了两个节点，每个节点都可以安装多个应用，多个网络 设备和一个协议栈。节点间的通信过程为发送节点1首先在应用层产生发送数据 通过socket接口向下传输给路由层，经过路由层寻找路由并封装数据继续向下 到达节点安装的网络设备，其中网络设备主要包括MAC协议和物理层协议，再 次经过对数据包的处理传输到信道中，最后经过在信道中的传输最终到达接收节 点2。接收节点接收到数据包后从下层到上层一次对其进行反向操作最终获取到 数据。在整个过程中，NS-3是通过传递数据包对象的引用和对数据包的拷贝来 模拟数据包的传输。
16
图3-2 网络基本模型
概念
在看和写NS-3代码之前，我们首先需要了解这个系统的一些核0抽象的概 念。有许多人已经了解这些概念了，但是我还是建议大家花一些时间阅读这部分， 给未来的学习打下坚实的基础。下面将会描述一些网络术语及在NS-3中的含义。
节点
由于NS-3是一个网络模拟器而不是专门的因特网模拟器，而“主机”这个 词与因特网及其协议有着密切的关系，为了防止产生歧义，在此NS-3并没有使 用“主机”这个术语。取而代之的是使用了图论里的概念一一节点，在其它的网 络模拟器中也使用了这个概念。
在NS-3中具有计算能力和通信功能的设备被抽象的定义为节点。NS-3中使 用Node类来定义节点。在网络仿真中Node类中的一些方法可以用来管理安装 在节点中的设备。节点就相当于生活中的电脑、手机等，可以对其添加不同的功 能，如可以给节点安装应用程序，传输协议，路由协议，和一些驱动程序等。这 样可以使得节点具有更丰富的功能，可以实现不同场景的仿真。
应用
17
通常情况下，计算机软件分为系统软件和应用程序软件。系统软件可以管理 调度计算机中的各种资源，如内存，磁盘，网络，显示等。而系统软件通常不会 使用这些资源来完成任务。应用程序软件则通过获取系统软件所管理的资源来完 成用户的某项工作。
简单而言系统软件就像电脑中的操作系统如Windows, DOS, Linux等，而 应用程序软件就像安装在电脑中的应用一样如，Word, PPT, QQ,微信等。在 NS-3中，没有操作系统的真正概念，但是它有应用程序的概念。就像应用程序 软件在计算机上运行来完成人们的现实生活的任务一样，NS-3也可以在节点上 安装应用程序来驱动整个仿真过程。
在NS-3中，由于有多种不同功能的应用，为了对其进行扩展NS-3抽象出 来一个基类它包含了不同应用所共有的特性。这个抽象类在C++中由Application 表示。Application类中提供了许多方法其中最终要的是控制应用程序的开始和结 束。在创建新的应用程序时，需要继承这个抽象类Application然后再扩展各自 的功能。本文定制了自己的应用程序SJBSender和SJBReceiver,它们都继承于 Application类，并拥有了自己的特性如给节点安装更灵活，获取仿真结构更便捷 等。
信道
信道是数据流从一个节点到另一个节点到通道，这个通道可以是有线的也可 以是无线的。人们可以将电脑通过网线连接到以太网中或者连接无线wifi发送 数据或者接收数据来完成通信任务。在NS-3中同样为了扩展不同类型的信道， 它将其抽象出了一个公用的基类即Channel类。
Channel类提供管理通信子网对象和连接节点的方法。在定制自己的特有信 道时，需要继承信道的基类Channel。一个信道可以模拟像线缆一样简单的东西 同样也可以模拟像大型以太网交换机那样复杂的事物，或者在无线网络的情况下 可以建立三维空间。在本文中主要使用的信道有 WifiChannel , SimpleWirelessChannel它们分别对应与不同的模块WifiChannel对应于wifi模块， 而 SimpleWirelessChannel 对应于 TDMA 模块。
网络设备
在技术还比较落后的时候，如果您想将计算机连接到网络，则必须购买特定 类型的网络电缆和需要在计算机中安装外围卡的硬件设备才能完成。如果外设卡 实现了一些网络功能，则称为网卡。现在大多数计算机都内置了网络接口硬件， 想要让这些硬件起作用就需要驱动程序来控制硬件否则这些硬件就会沦为摆设。 同样对于网络设备而言也需要驱动程序控制，在Unix和Linux中，通过ethO等 名称引用来表示这些网络设备。
18
在NS-3中，网络设备不仅仅指到是模拟硬件它是模拟硬件和驱动程序的结 合。在仿真过程中，节点可以安装一个或多个网络设备接入到信道，通过它可以 和其它的节点进行通信。
在NS-3中为了对网络设备进行扩展，将其抽象出了一个公共的基类即 NetDevice类。NetDevice类提供了管理与节点Node和信道Channel对象的连接 的方法；在定制自己的网络设备时，使用者需要继承基类NetDevice扩展自己的 功能。本文主要使用了 wifi模块对应的 WifiNetDevice和TDMA模块对应的 TdmaNetDeviceo这些网络设备都需要和自己对应的信道一起工作，这些信道都 在各自的模块中。
拓扑助手
在真实的网络中，主机内部会安装一个或多个网卡。与之对应的在NS-3中， 每个Node也会安装一个或多个NetDeviceo在大规模的网络仿真中需要管理 Nodes, NetDevices 和 Channel 之间的关系。
由于在仿真中有一些操作比较常见比如给节点安装网络设备，将网络设备接 入到信道中，分配IP地址等。为了方便使用NS3提供了拓扑助手来处理这些常 见的操作，它对使用者隐藏了复杂的操作暴露了简单的接口。例如，它可以直接 通过NS-3提供的核心模块来创建网络设备NetDevice并安装到节点上，给节点 添加MAC地址，配置节点的协议栈，然后将NetDevice连接到信道。甚至还可 以将多个设备连接到多个信道上，还可以将单个网络连接到互联网络中等。
