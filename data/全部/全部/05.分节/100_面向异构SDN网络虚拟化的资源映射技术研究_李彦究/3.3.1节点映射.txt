3.3.1节点映射
本文采用贪婪节点映射算法，贪婪策略在计算复杂度上较低，是一种典型的 降低计算复杂度的策略之一。本文中的贪婪策略表现在映射虚拟节点到具有最大 可用资源的物理节点，这可以降低瓶颈节点的资源使用率。这对未来需要特定稀 缺物理资源的请求具有好处。
在节点映射过程中，需要持续记录物理网络节点和链路的可用资源，本文使 用CPU资源作为节点限制，但并不直接使用CPU⑴)作为物理节点可用资源的 表示，这是因为假设仅考虑CPU资源，则贪婪节点映射的策略并未将链路对于 节点映射的影响纳入节点映射的方案选择中，因此很容易选出跳数较远的物理节 点作为节点映射方案，这将会提高后续链路映射的物理资源支出，这也是两段式 映射方案的主要缺点。
在本文异构网络环境中，节点间通常拥有许多不同能力的通信手段，从而导 致了节点间的链路资源的多样化，而这种特性必将会影响后续的链路映射过程。 同时，由于链路多样化，削弱了贪婪策略容易选出较远物理节点带来的负面影响， 相比于随机映射策略，贪婪策略将可以尽早的使用资源丰富的节点，因此本文采 用了贪婪策略作为节点映射策略，物理节点”"的剩余可用资源将由CPU资源和 链路资源综合决定，其定义如公式(3-10)所示。
//(”' ) 7 工马、	(3-10)
r=l '
25
其中厶(“ J表示物理节点ns的所有邻接链路集合，C”、表示物理节点的剩余
CPU资源，冬表示物理链路厂的剩余带宽资源。
贪婪节点映射算法GNMA伪代码如算法3-1所示。
算法3-1贪婪节点映射算法GNMA
输入：底层物理网络G" = {N"，G ,虚拟网络请求G” = 输出：节点映射结果集
1.
2.
for n in Nv do
3
S"
4.
H严0
5.
for n in Snv do
6.
if C,r' < Cf then
7.
S”vS”“
8.
else
9.
10.
end if
11.
end for
12.
if H才 H 0 then
13.
n'[ = max对应的物理节点
14.
叫
15.
MN J	U 叫、
16.
if
17.
else
1&
虚拟节点映射失败
19.
end if
20.
end for
21.
if Nv全部映射成功then
22.
更新网络全局资源
23.
return A/v
24.
else
25.
终止服务，回收已分配资源
26.
return 0
27.
end if
