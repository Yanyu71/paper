2.1.1软件定义网络架构
传统IP网络经过多年发展已经逐渐完善，对于复杂多变的网络环境具有良 好的鲁棒性，同时也解决了用户多种多样的网络需求，这主要得益于多年发展过 程中协议和技术的不断完善，不可否认的是，虽然传统IP网络的有点众多，但 也并非是完美的，恰恰是由于“缝补”式策略，如今整个因特网已经陷入了架构 僵化、协议复杂、层次混乱等众多问题，例如由于IPv4地址的逐渐耗尽，网络 研究人员引入了 NAT技术来解决该问题，虽然NAT确实是一种简单有效的解决 问题的方式，然而该技术的出现却导致了更为优秀的IPv6解决方案难以得到普 及。与此同时，不同厂商间的网络设备各自为战，当一个网络设备出问题时，通 常只能由同类型设备替换，因为各种网络设备管理配置各不相同，无法做到良好 兼容，这无疑给网络管理人员提出了巨大挑战。
图2-1传统网络架构vs软件定义网络架构
软件定义网络架构便在这种环境下提出了，SDN的概念一经提出，便以其 转发控制分离的架构理念引发了广泛关注卩叭通过转发控制分离，将网络设备的 转发部分和控制部分解耦，控制部分抽离集成于单独的SDN控制器中，转发设 备则专注于数据转发。控制器是SDN网络的大脑，整个通过控制器完成集中化 的控制，通过开放软件编程接口，开发人员可以灵活的控制网络转发行为，理论 上SDN控制器可以实现任何现有IP网络中的协议。转发设备称为SDN交换机， 由OpenFlow白皮书创］进行标准化，OpenFlow协议是SDN交换机和SDN控制 器进行通信的协议，不同厂商需要遵循同一个标准，极大减弱了设备厂商间的差
异性。由于网络设备可编程的特点，一旦完成软件化的设计方案，SDN网络便可 以投入部署、测试和使用中。软件定义网络架构与传统网络架构对比如图2-1所 示，软件定义网络体系架构模型如图2-2所示。
图2-2 SDN网络架构
(1) 应用层
SDN的应用层主要是部署一些服务于网络中不同用户需求的应用程序，其 实现了对网络模型的抽象以及业务的模块化表示，应用层应用包括自学习交换机、 NAT服务等简单应用功能，还包括典型的OpenStack、OSS (Operation Support System)等，SDN虽然与传统网络均有管理、控制和转发三个层面，但在SDN 网络架构下，三个层面是互相分离的。
(2) 控制层
控制层是SDN的核心，是SDN的操作系统，控制层实现了对网络底层硬件 资源的统一收集和管理以及网络状态的感知。通常情况下控制层内置了一些开箱 即用的功能，例如路由转发，交换机自学习等模块。
(3) 转发层
转发层是SDN网络架构的最底层，由交换机及其连接的线路组成。SDN交 换机通过执行SDN控制器下发的流表来完成数据转发工作，并且将控制器给它 的指令和决策缓存下来，当同样的数据包来临时便可以直接转发，如果交换机自 身无法完成处理时，便会通过南向接口询问控制器。
(4) 南北向接口
SDN网络架构下的北向接口是网络的应用层与控制层的通信接口，应用层 通过开放性的API控制控制层面做出硬件设备的拓扑和网络状态收集，从而做 出决策；南向接口是控制层和数据层的通用接口，当前主要的具体实施方案包括 OpenFlow协议等。SDN控制层通过南向接口协议向数据层下发流表项控制数据 层网络设备进行数据业务转发。
SDN的分离式架构使得网络配置更加灵活简便，对于网络硬件厂商而言， 网络底层硬件设备只需关注层间通信协议兼容和基础的数据转发功能即可，这使 得网络基础硬件更加简单有效，生产成本更为低廉。而对于网络管理人员，SDN 网络架构的提出，大大降低了其学习成本，网管人员无需再关注不同厂商的实现 细节，只需要通过SDN网络控制器进行应用层的程序管理即可实现网络管理甚 至网络的升级换代，且新型网络架构，由于其统一的管控，分离式的架构，网管 人员通过控制器能够定制各种网络参数，如路由、流量工程、QoS等。更为重要 的，对于网络用户而言，采用SDN网络架构的网络，所提供的业务保障能力更 加优秀，网络响应更为迅速。
