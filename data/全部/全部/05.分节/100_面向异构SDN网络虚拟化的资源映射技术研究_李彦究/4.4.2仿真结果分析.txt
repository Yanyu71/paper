4.4.2仿真结果分析
我们的仿真分析了在异构SDN网络环境下表4-4中的算法与本文的 vHSDNM-ACO算法在虚拟网络映射成功率、物理网络支出、映射收益支出比、 物理资源利用率方面的性能，仿真结果如下所示。
表4-4对比算法表
对比算法
主要策略描述
VNE-GreedyW】
贪婪节点映射+最短路径链路映射
VNE- AW】
蚁群算法
为了将上述算法应用到本文的仿真场景中，本文对上述算法做了一定的修改, 比如都添加了节点计算需求、链路时延计算需求以及异构链路切换代价等。
图4-5虚拟网络映射成功率
图4-5表示了在相同的初始网络资源情况下，随着虚拟网络请求数目的增加, 三种算法分别运行10轮的平均映射成功率变化情况。随着虚拟网络请求数目的 增加，接受率均呈现不断下降趋势，总体而言，两种元启发式算法均优于启发式
49
算法，主要原因是因为贪婪策略容易选出跳数较多的链路，而跳数越高，则时延 要求越不容易被满足，因此在多QoS模型下贪婪策略效果较差。而对于蚁群优 化算法而言，蚂蚁随着迭代轮次的增加，可以选出距离较近的节点映射，因此映 射成功率较高。本文提出的vHSDNM-ACO算法针对蚂蚁在稠密图中选优的策略 做了一定改进，使得蚂蚁更倾向于选择代价较小的路径，但总体而言，去除随机 因素等影响，vHSDNM-AC0相比VNE-AC算法在映射成功率方面提升有限，仅 提升5%左右。
1.0 -
0,8 -
0.6 -
0.4 -
0.2 -
0.0
20	40	60	80	100
The number of VRNs
图4-6映射收益支出比
图4-7累积物理网络支出
图4-6表示了三种算法映射收益支出比随虚拟网络请求数目的增大的变化 情况。根据第三章的分析可知，VNE-Greedy保持较高收益支出比是因为其请求 拒绝率较高。对比我们的vHSDNM-AC0和VNE-AC算法可以看出，在本文的
50
环境中，我们的算法在收益支出比方面优于VNE-AC算法，两者虽然物理链路 带宽支出相仿，但是vHSDNM-ACO算法产生的最优映射解的异构切换代价较 低，因而总体物理网络支出降低10%,从而使得映射收益比较高。两者的物理网 络支出变化情况如图4-7所示。
vHSDNM-ACO
图4-8节点CPU利用率
图4-8为VNE-AC和vHSDNM-ACO两种蚁群改进算法的节点CPU利用率 直方图。从分布趋势来看，两种情况都存在有大部分节点空闲的情况，但 vHSDNM-ACO算法的分布均值相对更高，总体来看，两种算法的节点CPU利 用率相当。
图4-9链路带宽利用率
图4-9为VNE-AC和vHSDNM-ACO两种蚁群改进算法的链路带宽利用率 直方图。同前一章相同，有许多链路利用率较低是因为异构网络链路资源丰富, 这些链路暂时还没有承担虚拟链路。从分布趋势来看，vHSDNM-ACO算法分布 更加平均，且链路带宽利用率更高。这是因为算法充分考虑了多重图的信息素优 化模型，使得每一轮迭代选出的最优链路都更加合理，因此带宽利用率更高。
图4-10链路信息素分布图
图4-10表示了使用vHSDNM-ACO算法对某次虚拟网络请求进行50轮迭代 搜索过程中链路信息素变化情况。通过散点图可知，虽然整个网络拥有近2000 条链路，但在一次搜索中只有近50条链路信息素浓度超过最大值的一半，这表 示大部分映射链路在该请求的搜索过程中贡献有限，而少部分优秀链路在多轮迭 代中不断累计信息素，最终映射链路结果大概率在这些链路当中选出。
图4-11映射解物理网络支出变化趋势
52
图4-11表示了该虚拟网络求解过程中所有可行解的物理网络支出变化趋势。 在初始迭代过程中，每轮选出的映射解物理网络支出均值为900左右，经过15 轮迭代，便将物理网络支出降低至750左右，降低了 16%的资源消耗。经过30 轮迭代，产生的最优映射解已经降低了 19.4%的资源消耗。最终通过50轮迭代， 降低了 22%的资源消耗。可以证明通过蚁群映射算法对降低物理网络的资源消 耗具有一定作用。
综上所述，vHSDNM-ACO算法在将映射成功率提升5%的同时，较VNE- AC算法降低了 10%的物理网络支出，同时资源利用率也更高。通过蚁群映射搜 索算法，可以在迭代过程中找到逼近最优解的可行解，对于虚拟网络映射问题是 一种有效的优化策略。
