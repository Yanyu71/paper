3.3典型的簇头选择算法
分簇算法分类示意图如图3-3所示。根据不同的划分标准，传统网络中的分 簇算法可以被分成不同种类。比如按照传输过程中是否需要特定的簇头节点，分 簇算法可以被分成基于簇头的分簇算法和非基于簇头的分簇算法。根据不同的选 择簇头节点的参数，可以将分簇算法分为基于ID的、基于连接度的、基于地理 位置信息的和基于节点权重的。根据簇内节点到簇头节点的跳数，可以将分簇算 法分为一跳成簇和多跳成簇算法。根据分簇算法不同的执行方式，可以将分簇算 法分为集中式的和分布式的。根据算法的优化目标，可以将分簇算法分为面向维 护开销的分簇算法、面向能量优化的分簇算法、面向移动性优化的分簇算法和面 向负载均衡优化的分簇算法。根据不同的应用场景，可以将分簇算法分为静态分 簇算法和动态分簇算法。
27
图3-3分簇算法的分类
分簇算法的目的就是要通过相对小的。目前，在传统网络中巳经提出了针对 不同优化目标的许多分簇的算法。接下来介绍集中传统网络中典型的簇头选举算 法。
（1）最小ID分簇算法：
最小ID分簇算法則，最先是由Lin和Gerla在1995年提出的，基本的算法 思路是通过给节点分配不同ID号，使用探测法对网络进行分簇。该算法首先给 网络中每个节点分配一个ID号，需要保证所有节点的ID号不同，如图3-4所示。 之后，节点发送周期性的Hello消息获得其邻居节点的ID号。通过比较相邻节 点ID号的大小，选择其中ID号最小的节点作簇头，选取属于其一跳范围之内 的网络节点作为它的簇内节点，从而完成分簇过程。分簇结束后会有节点同时处 于多个簇中，如图3-4中ID为4的节点，这样的节点自动成为网关，完成簇之 间的通信过程。
28
图3-4最小ID分簇算法示意图
最小ID分簇算法具有运算简单、实现方便、算法收敛速度快等优点。在网
络节点移动时，维护簇所需要的网络能量消耗较小，簇头更新的频率相对较慢。
其缺点是釆用单一的最小ID信息作为簇头选择依据，使得簇头节点能量消耗过 快，缩短了网络的运行时间。无法对负载平衡提供良好的支持。
（2）最大连接度分簇算法：
最大连接度算法〔35]是由Gerla和Tsai提出于1995年。与最小ID算法相比较， 也是釆用探测法对网络进行分簇，网络中每一个节点通过周期性的Hello消息获 取各自邻居节点的信息，获得节点的连接度（1跳邻居节点的个数），通过比较相 邻节点节点度的大小，选取其中具有最大节点度的节点作为簇头，此网络节点一 跳距离以内的网络节点成为该簇的簇内节点，成为簇头或簇内节点的网络节点不 再参与接下来的分簇过程。接着遍历剩余节点，寻找连接度次大的节点，如果其 一跳范围内有未成簇的节点，则连接度次大的节点成为簇头，循环往复，知道所 有的节点都成簇为止。
该算法与最小ID算法一样，具有运算简单、实现方便、算法收敛速度快等 优点并且并且也可以有效的减少网络中的簇头数目，算法形成的簇数目较少，由 于减少了源节点到目的节点的平均传输跳数，降低了数据传输时延。算法的缺点 是当节点具有较强的移动性时，网络中节点的连接度频繁变化，导致更高的簇头 更新频率，从而加大了簇维护开销，不利于簇结构的稳定。另外当某一簇内节点 数量过多时，由于簇内节点共享网络资源，使得网络节点吞吐量率急剧下降，严 重影响了系统的性能和公平性。
（3）基于地理位置的分簇算法
基于节点地理位置的分簇算法是由Jain A., Puri R., Sengupta等人提出的 （Geography Cluster Algorithm, GCA）[36][37][38]。适用于网络中节点位置信息可知的 场景，基于位置信息进行簇的划分。其主要思想是利用网络节点的地理位置信息
29 （即节点坐标）计算网络节点之间的距离，用网络节点之间的距离值作为分簇的 依据。基于网络节点地理位置信息的分簇算法不需要节点间通过Hello包共享信 息，因此减少了网络的开销。但是获取网络节点的地理位置信息需要使用合适的 定位算法，并且不同的定位算法还受到定位技术及设备类型的限制。
