3.3信道切换和聚合算法
为了保证信道切换过程不影响与目标行为相关特征的提取，切换信道的时间 不应大于采样时间。此外，还必须保证发送端和接收端始终在同一信道内同步工 作。但在不稳定的无线环境中，可能会出现丢包的情况。一旦报文丢失，CSI聚 合就会产生一系列问题。
为了解决上述问题，本项目先进行了大量的验证实验，并最终在同步传输中 采用确认和重传机制，避免快速信道切换过程中的丢包现象。如算法2所示，在 每一轮数据传输之前，发射端TX和接收端RX都在同一信道。首先，TX发送一个 数据包(步骤7)。在接收到这个包后，RX发送一个4CK确认答复，然后切换 到下一个信道(步骤9-13 )o当TX接收到这个4CK时，它也切换到下一个信道(步 骤18)。然而，一旦数据包在给定的超时时间内丢失，7*将重新发送数据包，以
23
确保RX在每个信道中接收到唯一数据包（步骤14-16）。在一个周期的所有信道 完成切换后，聚合这些信道中的CSI （步骤19-21）。
基于此，本文实现了发射端和接收端之间的快速信道切换和聚合，从扩展信
道
算法2：信道切换和聚合算法
1：输入：包的个数/en,信道的个数
2：选择n个相邻的信道俎,/12,••••••，鶴；
3：将血上2，..•，鬲添加到待选信道列表中；
4：发送端TX和接收端RX切换到第一个信道徧；
5： for i = 1,... ...,len do
6： j = i % n + 1；
7：	TX发送一个数据包血；
8： while TX和RX都在监听套接字do
9：	if RX接收到了处then
10：	RX 响应一个 ACK；
11：	RX切换到下一个信道街；
12：	跳出；
13：	end if
14：	if TX在给定的超时时间1ms内没有接收到ACK then
15：	TX 重发 s；
16：	end if
17： end while
18：	TX切换到下一个信道妇
19： if i % n == 0 then；
20： 从聚合 CSI C“C2—cn,获得聚合 CSI Ci/n；
21： end if；
22： end for；
23：输出：所有聚合CSI Cj,C2,
，Gen/n ；
