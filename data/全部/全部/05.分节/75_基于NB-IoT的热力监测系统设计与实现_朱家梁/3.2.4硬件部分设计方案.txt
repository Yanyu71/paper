3.2.4硬件部分设计方案
目前而言，在整个热力行业，基于NB-IoT的结构模块化终端产品的开发都
19
在进行中，本文对于功能模块主要包括热力管网压力监测，流量监测，热力管网 测温，井盖数字化状态监控四个部分。本文以NB-IoT终端产品结构模块化为基 础，在保证硬件系统性能的前提下，通过设计合理的低功耗任务调度算法，降低 系统功耗，延长物联网终端设备寿命。硬件部分设计方案如图3-6所示。
图3-6硬件部分设计方案图
硬件设备整体方案采用模块化设计，物理层控制主板上内置MCU,控制 NB-IoT通信模块以及其他感知识别层的传感器，控制主板中烧录控制程序，保 证整个系统能够正常运转。感知识别层的外设模块主要分为以下四类：井盖数字 化状态监控模块、流量监控模块、热力管网压力测量模块和热力管网测温模块。 其中，井盖数字化状态监控模块通过SPI接口与控制主板相连接，流量监控模块 使用RS485接口，热力管网压力测量模块和热力管网测温模块则使用ADC接口。
控制主板在开启工作后，通过扫描以下四类接口对应的串口位置来获取所连 接感知识别层模块的类别，以便在获取类别之后调用对应的子程序开启响应的工 作。模块化的四类产品的相同之处在于都采用内置MCU的控制主板，通信模块 同为NB-IoT模块，并且都与热力行业的需求息息相关。
具体而言，本文采取模块化设计方案达到一板多用的效果，即使用同一块携 带NB-IoT通信模块的控制主板的情况下，通过接入不同的感知识别层的外设模 块，接入电源，模组初始化之后，系统可以进入正常的工作状态，实现对于环境 信息的传输与处理，且不受其他外界条件所影响。
硬件系统模块化的实现，本文采用的主板为STM32L151类型单片机，控制 主板连接并控制NB-IoT通信模块，主板上面设有SPI接口，HC接口，RS485 接口，ADC接口等多种类型的数据接口。对应本文所针对的应用场景，在控制 主板投入使用前，烧录已经编译的单片机程序，当系统上电之后，模组初始化, 程序采用串口中断监测对应位置数据接收状态的方式来判断本次控制主板所连 接的感知识别层的外设模块类别。由于本文具体应用场景分别使用不同的数据传
20
输方式，即每种应用场景使用与控制主板所连接的数据接口类型不同，且每种实 施案例的应用场景不同，采用串口中断的方法可以根据不同的接口对感知识别层 的外设模块类别做出一对一映射式判断。在控制主板有效识别出应用场景类别之 后，调用对应的子程序，开启系统的运作，对于目标环境信息进行有效地传输与 处理。而每当需求更改时，即需要获取的环境信息类别发生变化时，仅需要更换 感知识别层的外设模块，之后在对应的另一个环境重新做模块连接即可，接入电 源，模组初始化之后，系统可以再一次进入正常的工作状态。在此过程中，硬件 控制主板并没有发生任何变化，NB-IoT通信模块并未发生变化，控制主板中存 储的程序依旧可以使用，无需人为再次烧录，所需改动仅仅在于感知层外设以及 环境的变化，即为通过模块化设计实现一板多用的效果。
从程序的角度解释硬件系统模块化的实现如下：
adc_conftguration()；
spi_configurationO ；
rs485_configuration()； shtll_configurationQ ； getFlagO； 〃获取标志位 delay_ms(l000)；
switch(flag){	〃根据标志位判断外设类别,并启动相应NB-IoT配置
case 1:	NBjidc_configuration() ； break；
case 2:	NB^pi_configuration() ； break；
case 3:	NB_rs485_configurationQ ； break；
case 4:	NB^htll_configuration() ； break； default: printf("error\n")；
}
〃根据对应条件改变标志位的值
getFlagO (
if(adc对应串口有数据)&&
(数据符合实际范围)
then flag = 1；
else if(spi对应串口有数据)&& (数据符合实际范围) then flag = 2；
else if(ra485对应串口有数据)&& (数据符合实际范围) then flag = 3 ；
21
else if（shtll对应串口有数据）&&
（数据符合实际范围）
then flag = 4；
else flag = 0；
〃判断串口是否接收数据的方法举例
while(l)
(
if(USART_GetFlagStatus(USARTl, USARTJFLAGJIXNE)==SET) (
RxBufferl [RecLenl++/=USAR T^eceiveData(USART1)；
yvhile(RecLenl ==100)；
}
for(i=O； i<100； i++)
{
if((RxBufferl[i]=='O,)&&(RxBufferl[i+lJ=='K'))
(
GPIOJiesetBits(GPIO_LED, DSl^IN)；
Delay(0x3FFFFF)；
所谓的数据符合实际范围是指，根据实际情况，数据应该分布在符合外界物 理环境的实际范围，具体而言以热力管网温度测量为例，ADC接口回传的温度 数据典型值范围在30摄氏度至110摄氏度之间，而如果发生接口接触不良等特 殊情况，可能会出现浮空输入导致回传数据错误，进行对应的数据监测可以有效 地避免此类事件的发生，进而在一定程度上减少上传数据误报次数，提高系统性 能的同时节省系统功耗。
硬件部分的工作流程为：系统上电，模组初始化，使用NB-IoT模块获取当 前时间，程序判断时间是否在供暖期内，如是，进入深度睡眠模式，如否，则模 组正常工作，NB-IoT模块平时工作在睡眠模式，定期唤醒发送数据来达到降低 功耗的目的。MCU根据程序的设定接收传感器传输的数据并存储，程序判断接 收到的数据是否存在异常，对存在异常的数据进行丢弃。更改已经存储数据的格 式，使之符合云平台的数据接收标准，MCU控制NB-IoT模块发送数据，使用 协议为CoAP,数据途经NB-IoT基站，IoT核心网，数据传输至IoT云平台，最
终到达前端页面进行数据展示。
