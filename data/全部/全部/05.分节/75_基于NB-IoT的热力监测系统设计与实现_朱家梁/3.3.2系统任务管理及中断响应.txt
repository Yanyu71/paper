3.3.2系统任务管理及中断响应
在修改系统时钟之后需要重新配置系统的中断实现，删除原有的ST标准库 当中相关的中断配置，即stm3211xx_it.c文件下的所有内容，使用rC/OS-HI操 作系统当中的中断配置函数来代替，以达到使用操作系统来管理和控制系统终端 响应的目的。
当向STM32L系列开发板移植了 pC/OS-III操作系统之后，系统当中所存在 的所有任务程序的创建以及执行都会由操作系统所接管。任务程序的创建需要使 用操作系统所提供的标准函数接口，这样便于系统对任务进度的管理与把控。一 般而言，任务程序有以下几个状态：休眠态、就绪态、运行态、挂起态、中断服 务态，任务程序的状态转移图如下图3-9所示：
图3-9 rC/OS-I II操作系统任务状态转移图
在nC/os-hi操作系统当中，系统中的任务状态如上图所示，而任务的执行 过程则通过gC/OS-III操作系统当中的库函数实现对于以上工作状态的转换。 KVOS-in操作系统的任务状态转移过程与linux操作系统的进程状态转移过程基 本一致，但在任务状态转换的过程中所调用的库函数有所不同。其中，pC/os-in 的任务休眠状态即为挂起状态，当系统中的任务处于休眠状态时，该任务不可以 被操作系统进行任务调度，经常使用OSTaskDelO函数来使某个任务进入休眠状 态，而任务退出休眠状态则采用OSTaskCreate()函数。
在gC/OS-III操作系统中任务的中断状态，通常是由任务的运行状态转换而 来，若中断发生，中断会挂起正在执行的任务并去处理中断服务程序。中断服务 程序中可能有某些任务等待的事件。在这种情况下，一般需要有中断事件或者是 由来自于其他正处于运行状态的任务发出的信号量，使得处于中断状态的任务重 新进入就绪状态，以等待系统的再次调用，FiC/OS-III操作系统任务切换流程如 图3-10所示。
25
图3-10 nC/OS-l I I操作系统任务切换流程图
在nc/os-ni操作系统中，系统通过调度程序以确定系统中任务的运行顺序。 gC/OS-III是基于优先级的抢占式内核的操作系统，系统中每个任务所分配优先 级由该任务的重要性所决定。其中，抢占是指当发生任务间的通信时，如果具有 较高优先级的任务被其他任务通知启动，并且较高优先级的任务已经处于就绪状 态，那么该任务将会在下一时刻得到处理器的控制权，并将就绪状态转换为运行 状态。例如报警任务与其他普通的工作任务相比优先级更高，那么报警任务在接 收到来自其他任务的通知之后，可以通过抢占的方式去获取处理器的控制权，进 而实现任务切换。
