3.2UIS.RNN的预测解码过程
uis-mn使用基于beam search （波束搜索）的解码方式，一种启发式的寻解过 程，将复杂度减少到0（T）,由此完成说话人的聚类匹配过程。beam search通过扩 展有限集中最有希望的节点来探索图。beam search是最佳优先搜索的优化，可减 少其内存需求。最佳优先搜索是一种图形搜索，根据某种启发式算法对所有部分 解（状态）进行排序。但在beam search中，仅保留预定数量的最佳局部解作为候 选。因此，这是一种贪婪算法。"beamsearch"—词由卡内基梅隆大学的拉吉•雷迪 （Raj Reddy）于 1977年提出［33］。
beam search使用广度优先搜索来构建其搜索树。在树的每个级别上，它都会 生成当前级别上所有状态的后继者，并按启发式代价的升序对其进行排序。但是, 它仅在每个级别上存储预定数量的最佳状态0（称为光束宽度）。接下来仅扩展那 些状态。光束宽度越大，修剪的状态越少。波束宽度无限大时，不会修剪任何状 态，并且beam search与宽度优先搜索相同。beam宽度限制了执行搜索所需的内 存。由于可能会修剪目标状态，因此波束搜索会牺牲完整性（保证算法将以解决 方案终止（如果存在）的保证）。波束搜索不是最佳的（也就是说，无法保证它 将找到最佳解决方案）。
通常，beam search返回找到的第一个解决方案。用于机器翻译的beam search 是另一种情况：一旦达到配置的最大搜索深度（即翻译长度），该算法将评估在 搜索过程中发现的各种深度的解，并返回最佳解（概率最大的解）［34］。通过将 beam search与深度优先搜索相结合来完成beam search,从而进行波束堆栈搜索和 深度优先beamsearch,并通过有限差异搜索［9］进行组合，从而使用有限差异回溯
17
进行波束搜索。最终的搜索算法是随时可以找到良好但可能不是最佳解决方案的 算法，例如波束搜索，然后回溯并继续找到改进的解决方案，直到收敛到最佳解 决方案为止[35] o
uis-mn的具体解码过程如下：
算法3.1
数据：X{x1,x2,x3,...,xT）
结果：厂3,坊）
初始化：x0 = O,ho = 0
for t =1,2,...,T do
（y；, z；） = arg max如）（In p （z』
更新必上_1和GRU的hidden状态；
beam search除了较小的复杂度外，其决策的过程更能和多模态决策融合自 然一体，并在本文提出overlap解决方式中，利用beam search的决策过程，将说话 人聚类的应用从单标签聚类扩展至可解决overlap复杂对话场景的多标签聚类问 题，在第五章会详细介绍该实现方式。
18
