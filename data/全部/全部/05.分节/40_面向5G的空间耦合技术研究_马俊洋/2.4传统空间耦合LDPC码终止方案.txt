2.4传统空间耦合LDPC码终止方案
以上的两种迭代编码算法都有效的提高了空间耦合LDPC码的编码效率，但 是两种算法都存在编码后移位寄存器状态非零的问题，这将影响到接收端的译码 过程。为了解决这一问题目前的方法是在已编码的序列后面添加一定长度的尾比 特序列，这些尾比特将会通过一定的方式将编码器回归到零状态。对于将传统的 卷积码，它们的尾比特一般是一个全零序列。而对于空间耦合LDPC码，由于尾 比特对前面位置已编码比特的依赖性，这些尾比特的值一般是非零的。这时如何 计算出尾比特的数值成为了影响编码过程的关键。以下介绍一种在部分校验子前 项编码方案中计算尾比特的方法。
这里用符号Um，』表示编码前的序列，经过编码器编码后的序列用v[0/_t]表 示，此时寄存器的状态为非零。为了将寄存器状态归零，需要在编码后的序列后面添加一段尾比特序列，用v[//+r_.j表示。这时整个编码后的序列为 V[O,L+r-l] =[V[OS，V j+zJ。整个序列满足等式 V[o.+r_]邱/+t = 0[財+了+%_1]，如图 2-5,为了方便计算添加的尾比特，需要将该等式分为两个等式
I Pl]和	= [Pz|Os“,T]]。根据第一个等式可
以计算出未加尾比特时寄存器的状态p,,尾比特V[ST则可以根据后一个等式 和L时刻寄存器的状态得到，由后一个等式可知计算尾比特的过程需要求解一个 由(c_b)w个等式组成的线性系统。
通常情况计算尾比特的线性系统中有一些等式线性相关的，即了矩阵 Hj爲T中的某些列为线性相关的，为了方便计算需要先去除相关性。假如已经 去除掉了矩阵HR必z]中所有相关性，这时得到了一个crx”的矩阵F0),其中 甲 < 面n[仞,+r)(c-b),cr]。重新改写等式v妇+,_祁『广[pL \。所宀]为 V[j+tF(Z)= [p； |0],其中p；是将冗余部分消除后的部分校验子,0是使[p； |0] 长度为“的一个零向量。由于F(Z)是满秩矩阵，所以上式可以写为 v【"+t=[p；|0]ft(L)，从而计算出尾序列"at。这个结果也可以表示为部 分校验子的线性组合的形式：vt=^p￡/,,(￡),Z<r<Z+r-l,其中以L)是通 过逆矩阵F"1(L)得到的(c-6)xc矩阵。广0)需要事先通过H扁宀]计算出来, 并且p“是在时刻t = L的部分校验子编码器的移位寄存器的值。
图2-5有限码长空间耦合LDPC码校验矩阵图
