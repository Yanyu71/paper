4.4.3CNO.S用户调度方案
CN用户调度方案因为只考虑了信道强度，从而实现在相对较低的的实现复杂度 情况下获得良好的系统性能，但是由于忽略了用户间的干扰其性能提升受到很大的
Candidate Users
图4-2 CNO算法的几何示意。例如，假设这里有两对用户}从爪对备选用户对中被挑 选出来。信道系数模值最大的用户对必用户对首先被挑选出来，并构成一个基准空间角。然后, 以每对用户投影到基准空间%上比较小的正文投影为衡量，我们挑选出投影最大的那对用户s2 0 CNO方案实现了每对通信用户间最大可能正交。
限制。所以我们提出CNO-A方案来弥补这种不足，通过联合考虑信道强度和用户 的干扰，这种方案达到近似于全局搜索用户调度方案的系统性能，但是中继端必须 获得全局CSI信息并进行集中运算，然而这在实际应用中是很难实现的。这样，本 小节提出一种分步的用户调度方案，即CNO-S用户调度方案来平衡容量性能和复 杂度/CSI开销。该算法的第一步与上一节中提出的CNO-A方案非常类似：基于信 道强度我们首先选出一对具有最大信道增益的度量标准的用户。接下来，CNO-S和 CNO-A最大的不同在于，在这里，我们定义一个固定的阈值在这个阈值确定以 后，下一步就是在剩下的备选用户中选出符合条件的一部分用户对，再从这些挑选 出的备选用户中挑出所需的用户对进行信息传输。这样的操作，使得中继不再需要 所有用户的全局CSL而只需要掌握符合条件的那些备选用户的信息。该方案的具体 操作步骤如下：
1）	初始化：设置 S（）= , % = {1,2,...,K},用=和 L<T<K.
2）	设定Z = l,计算每对用户的信道系数模值衡量标准Pi = min{||h』,||hw+K||2},
然后选择具有最大信道系数模值衡量标准p,?的那对用户作为第一队被 选出的有效用户，即勺=argmaXi=i,...,KP/ 设置	和
珥=&,瞄+』为了方面描述，定义Qi = g〃（H?）。令1 = 1 + 1.
3）	令卩=1。在第"次选择用户的过程中，选择信道强度最大的用户对，也就是 s” = argmax?j,_]Pi。然后，更新 R_iU{s“}tR, 7/z_i\（s//} -> 7J/ 和卩=尸 + 1。 如果满足l'<T,则重复步骤3）；否则，进入4）。
4）	在备选用户集合7；'中，选出一对符合下面条件的用户
力=arg,蜀x min {11 昭 * a _ 1『,11 hg+K * 紿 _ 1112 } .	(4-15)
然后，两个用户集合分别被重置为和7；'\｛勺｝ — 77。将h响和 瞄+K作为矩阵珥的最后两列。令Q,=冲〃(H?) , 1 = 1 + 1.
5)结束：如果满足1<L,重复步骤4)：否则，结束算法。
在CNO-S用户调度算法中，设置一个阈值来平衡实现复杂度/CSI开销和和速 率。这时，在中继端就不再需要所有用户的全局CSL而只需要掌握那些符合阈值条 件的部分用户的CSI。因而，这个阈值可以影响得到更好的系统性能或者更低的实现 复杂度。在该算法中，每个用户反馈CN信息给中继完成粗选，然后中继选出符合阈 值条件的备选用户，最后根据CNO方式从粗选用户集合中选择所需用户进行信息 交互。因此，CNO-S能够很大程度降低中继端的CSI开销和运算复杂度，同时达到 与CNO-A相近的系统性能。可以认为，CNO-S用户调度算法是CN用户调度算法和 CNO-A用户调度算法的结合。
