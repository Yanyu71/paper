3.2K.SC聚类算法
本文釆用K-SC聚类算法对数据集中热点事件的时间序列进行聚类，K-SC 算法属于基于原始数据的时间序列聚类算法，它把时序的波形特征或者趋势特 征作为聚类的依据，而不考虑时序的具体幅值大小，如果两个时间序列具有相 似的形状，然后总体的幅值不同，它们也会聚到一类。这些波形特征正是热点 事件传播状态的直接反映，因而K-SC聚类后所得到的类别，就是热点事件所 具有的类别。
K-SC算法和传统的K-means算法类似，包括类别划分和聚类中心的调整 两个步骤。在第一步，通过计算两个时间序列的相似度，把每一个时序样本划 分到与其相似度最高的类别；在第二步，根据划分到每个类别的时序样本更新 每个类别的聚类中心。通过两个步骤的不断迭代，最终得到收敛的K个聚类中 心。
聚类算法的核心是相似度计算和聚类中心的更新策略，K-SC算法不同于 经典的K-means,它特别适合于时间序列的聚类，其相似度计算过程只考虑时 间序列的趋势特征，不考虑时间点的具体值。对于两个时间序列x和_y,如果 他们的形状-致，但是它们的峰值大小差别很大，那么这两个时间序列反映的 是相同的传播规律，只是因为样本量的不足导致总体转发量的差异。K-SC算 法通过缩放或调整峰值点的操作，是x和N的峰值一致以后再更新中心点，这 样新的聚类中心会和X、*的形状一致，从而得到更好的聚类效果。
从图3-2可以看出，#2事件（昆明火车站暴力恐怖事件）和#3事件（文 章出轨）具有类似的波峰变化，然而其峰值点的转发量确差很多，另外，四个 热点爭件到达峰值的时间点也不尽相同。而这些因素，在计算相似度的时候都 应该考虑。2.3.3节介绍了几种主要的相似性计算方法，然而对于时间序列数据 与其他数据有很大的不同，因而像欧式距离或DTW方法并不适用，主要体现 在两个方俑:首先，如果两个时间序列具有相同的形状，然而其值的总量不同， 它们应该被认为是相似的；其次，不同时间序列到达峰值的时间点不同，即两 个时间序列通过平移之后的现状类似，它们也应该被认为是相似的。因此，时 间序列数据通过坐标轴缩放之后并不影响两个时间序列的相似度。
K-SC算法的相似性计算方法如下:
其中，d(mm)为时间序列x和v的相似度，d值越小代表两个时间序列越 相似。a是缩放系数，使x和夕的峰值达到一致，4是时间偏移系数，因为时 间序列初始点的原因，两个序列可能会在不同的时间点达到峰值，通过g个时 间单元的偏移，使得两个时间序列x和*在相同的时间点到达峰值。由此可以 看出，K-SC算法无论是峰值大小还是峰值点都做了归一化，屏蔽了可能由于 各种非趋势项的原因导致的时间序列的差异，从而将在时序上传播规律一致的 热点事件聚到一个类别。
K-SC算法的聚类中心更新策略并不是简单的对每个样本取平均，而是每 个样本与新的聚类中心点的相似性达到最大，即对属于类别G的所有样本x,, 与中心点旧相似性差异d(x,,Q的和为最小：
X = arg min ￡ d(x,,凡尸	(3-3)
其中，/为新的聚类中心，由此可以看出，夕；为虚拟中心。
聚类算法需要预先指定类别数目K和初始的中心点，K值需要通过不断地 试验，根据最优的聚类结果来确定。本文通过计算每次迭代过程的轮廓系数， 来评价聚类的效果。然而，实际应用场景中数据量庞大，直接运用K-SC算法 并不合适，每次的迭代成本很高，仅仅是确定最优的K值就需要很长实际，下 —节中介绍了一种基于MapReduce的并行聚类算法。
