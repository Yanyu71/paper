4.1.2TradaBoostReg算法
由本章节开头可知，我们改进TradaBoost算法的思路为将损失函数中的误差 通过一个激活函数，使之值域缩放在［0,1］之间，又在上一节中介绍了合适的激活 函数sigmoid,至此我们可以参照TradaBoost算法，给出我们的TradaBoostReg 算法，TradaBoostReg算法描述如表4-1所示：
38
表 4-1 TradaBoostReg 算法描述
输入：源数据集Ta和目标数据集Tb，测试集S,弱学习器Learner,还有迭代次 数N。
输出：训练好的回归树。
初始化：
初始向量权重W1 = (W±W%...,wR+m),其中：
(1	I
-当 n
-当 i=l,2,…,a
设置忏1/(1+同而),
For t=l,2,…，N：
1)设置pt满足
2)调用Learner,根据合并后的训练数据T以及T上的权重分布/和未标注数 据S,得到一个在S的分类器上:X - Y
3)计算也在篇上的错误率：
v^jSigmoid\ ht(x^)-c(x^) |
4)
5)
设置叫=./(17)
设置新的权重向量如下:
州右的酒肉(珀一代)1),当
刖温(同底8)|),	当+1, tn+m
(4-6)
输出最终回归器:
值得注意的是，这里的的我们需要保证其在(0, 1)范围之间。因为Bt=Et/(l-J)， 如果4大于1,会导致比小于1,由于傥是计算权重的指数底数部分，所以凡小于 o会导致权重在o附近震荡，不能满足权重更新的需要。所以我们只需要将误差 的值域转换到(0,1)之间即可。
由表4-1我们得到了基于回归的Tradaboost算法TradaBoostReg,可以将其直 接运用到缺失值填充算法中去，由于TradaBoostReg算法适用于连续缺失值，所 以基于回归TradaBoostReg缺失值插补算法相比于基于TradaBoost的缺失值插补 算法减少了离散化的步骤。完整步骤如图4-2所示，步骤阐述如下：
1）数据集划分与上一章的基于TradaBoost的缺失值插补算法相同，我们由源数 据S和目标数据X得到了相交数据集SI、C1和D1；
2）将S1和C1直接输入到TradaBoostReg数据集中去，训练缺失值插补模型;
3）将训练好的模型在D1上预测，得到插补好的数据集D。
图4-2基于TradaBoostReg算法的缺失值插补流程
