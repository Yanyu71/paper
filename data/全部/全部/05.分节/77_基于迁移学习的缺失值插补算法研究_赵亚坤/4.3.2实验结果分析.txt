4.3.2实验结果分析
对于常数的选择，我们可以通过求均值的方法来定位，再使用实验的方法找 出来最合适的常数。我们迭代第一轮之后，将弱学习器在目标数据的1000条样 本上学习的误差值，得到误差的均值为6.537,于是将误差标准化的常数设置成 6.5,设计实验来研究标准化之后的性能。
沿用之前的实验方法，我们使用表格列举了改进后的缺失值插补算法与改进 之前的缺失值插补算法在全部数据集上的表现。本次实验我们采用AUC和Fi作 为算法的评估指标为了尽量减少随机性带来的误差，在同一个数据集上相同缺失 比例的缺失值填充时重复实验5次，将5次得到的AUC和Fi均值作为最终的评 价指标。
如图4-4和4-5是不同算法在是数据集上的缺失值插补表现。其中第一列是 数据集特征列的缺失值比例，表格中的数据是插补缺失值之后整个数据集的指标, 两个表分别表示的是AUC和取值。
43
表44不同算法在数据集上的缺失值插补表现（AUC值）
缺失百分比	0值插 补	k-NN 插 补	低秩矩阵 插补	迁移学习插 补（分类模 型）	迁移学习插 补（回归模 型）	迁移学习 （误差标 准化）
30%	0.640	0.632	0.641	0.630	0.645	0.645
37%	0.610	0.614	0.635	0.615	0.624	0.624
44%	0.570	0.585	0.591	0.567	0.588	0.588
51%	0.532	0.523	0.572	0.544	0.564	0.S64
58%	0.528	0.515	0.558	0.513	0.572	0.558
65%	0.500	0.503	0.525	0.508	0.544	0.535
72%	0.500	0.508	0.524	0.507	0.544	0.541
79%	0.500	0.500	0.502	0.510	0.557	0.550
86%	0.500	0.500	0.500	0.504	0.542	0.541
93%	0.500	0.500	0.500	0.510	0.524	0.511
100%	0.500	0.500	0.500	0.507	0.522	0.510
表4-5不同算法在数据集上的缺失值插补表现（琦值）
缺失百分 比	0值插补	k-NN 插 补	低秩矩 阵插补	迁移学习插 补（分类模 型）	迁移学习插 补（回归模 型）	迁移学习 （误差标 准化）
30%	0.265	0.302	0.302	0.256	0.303	0303
37%	0.233	0.279	0.295	0.222	0.297	0.297
44%	0.196	0.254	0.265	0.201	0.246	0.246
51%	0.097	0.150	0.234	0.189	0.231	0.223
58%	0.073	0.132	0.196	0.156	0.201	0.189
65%	0.052	0.098	0.102	0.134	0.185	0.184
72%	0.021	0.067	0.078	0.112	0.135	0.123
79%	0.013	0.042	0.032	0.096	0.101	0.092
86%	0.024	0.021	0.013	0.045	0.084	0.083
93%	0.011	0.011	0.015	0.034	0.083	0.062
100%	0.005	0.005	0.005	0.032	0.076	0.053
从表中可以看出，在数据集的指标测试中，我们的改进之后的算法在性能上 相较于误差标准化之前性能并未提升。在缺失比例相对较小的情况下，误差因子
44
改进之后的迁移学习缺失值插补算法要和改进之前保持一致，而在缺失值比例进 一步加大，误差因子改进之后的迁移学习缺失值插补算法迅速退化，AUC要比 标准化之前略有差距。然而，即使增加误差因子的算法相比于之前的算法效果稍 有下降，但是整体较于传统的缺失值插补算法还是有一些提升，尤其是缺失比例 在50%到90%之间。分析其原因，误差标准化可能在训练过程中对误差信息造成 了一些损失，导致最终效果从准确指标上来看并不突出。
在实验过程中，可以发现虽然误差标准化之后的性能相较于误差标准化之前 并未提升，但是迭代速度有明显提升，对此，本文对误差标准化增加了一组实验 来研究误差标准化前后的迭代速率问题，记录了算法收敛所需的迭代轮次，记录 数据如表4-6所示：
表4-6误差标准化前后对于缺失值插补算法的迭代次数影响
缺失百分比	误差标准化前	误差标准化后
30%	47	21
37%	45	25
44%	56	16
51%	45	29
58%	34	23
65%	67	43
72%	76	54
79%	54	34
86%	53	27
93%	65	31
100%	46	41
表4-6中，第一列为缺失值的缺失比例，表中的数据为误差标准化的迭代次 数可见误差标准化之后，算法的迭代次数均得到了明显的下降。分析其原因， 误差在被修正之后一直在合理的区间内迭代运行，误差在sigmoid函数上更具 有区分度，梯度下降迭代权重时，可以将梯度较为平缓的区域缩放，使得权重 迭代更加有效率。
综上，对于误差标准化的改进，我们得出结论为误差标准化改进之后，迭 代效率较于标准化之前有明显提升，然而性能角度来看，误差标准化之后性能 比标准化之前略有下降，但是比其他算法有一些提升。
45
