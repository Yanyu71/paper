3.2.1基于快速哈达玛变换的RM译码检测
该算法是针对PUCCH格式2/2a/2b上承载的的CQI信息采用RM编码提出的。RM 编码的解码算法有硬比特和软比特解码两种方法。针对性能要求较高的LTE系统，通常 栗用基于快速哈达玛变换的软比特解码算法。
LS信道估计
PUCCH因其仅在带宽边缘的一个物理资源块传输，和较大比例的参考信号，传统 的LS信道估计即可满足协议［26］要求。因此本文中对格式1/la/lb和2/2a/2b均采用简 洁高效的LS信道估计。
格式2/2a/2b在两个时隙上具有两个解调参考信号，在常规CP情况下，分别位于时 隙的第二个和第六个符号上。由于格式2a/2b除了发送信道质量信息CQI外，还需传输 l/2bit的ACKVNACK,因此将第二个时隙的第六个符号，也就是第二个时隙的第二个用 来发送参考信号的位置被占用，用来承载ACK/NACKo这样在格式2a/2b在第二个时隙 上只有一个解调参考信号可以用来做信道估计。
PUCCH在接收端经过解资源映射后得到2根天线上两个时隙位于带宽两端的2个 RB的信号后，利用ZC序列的恒包络零自相关特性，与用户发送端共轴的ZC序列相乘， 去除ZC相关影响，就可以得到12个子载波14个SC-FDMA符号的去除ZC相关后的 接收信息，用Y(l,k)表示。
之后将12个子载波上的信道冲击响应相加，去除ZC序列的影响和其他用户的干扰。 在低速环境中，--个时隙内可以将信道响应近似保持不变。因此可以得到一个时隙的信 道频域冲击响应。本文已经在上一小节中介绍了 YQ,k)的计算流程，PUCCH的导频信 号去掉ZC相关性后，在每个导频映射的符号位置上即为“1”，根据LS信道估计算法, 信道冲击响应表示为接收信号与发送导频的共轴相乘，格式2/2a/2b的LS信道估计可以 用下图表示：
由于近似信道在一个时隙内保持不变，因此将两个解调参考信号的信道相加近似为 这个时隙的信道冲击响应。格式2的信道冲击响应可以表示如下。
方妳=￡支印，4)
1=1,6 Ar=O
瓦s=z ix")
/=8,12 k=0
对于格式2a/2b,在第二个时隙，符号6用来承载ACK/NACK符号，因此时隙2 的信道估计用下式表示。
噸=%Y0k)
A=0
均衡、解调和解扰
PUCCH均衡的过程由图3-5表示，将多根天线上与信道冲击响应共轴相乘的结果 合并，即是：
图3-5: PUCCH格式2均衡
根据图3-5所示流程，PUCCH格式2的接收端控制信息调制符号由式3-15给出,
n ant
仰=￡ ￡丫(小)片:如，/ = 0,2,3,4,6
1 白=0
n ant 11
m(l)= ￡	盼片:.板2，/ = 7,9,10,ll,13
1	k=0
[d (0),..d ⑼]=[?J(0), m(2), m(3), w(4),m(6),w(7), m(9),m(l 0),m(ll), m(l 3)]
在格式2中，d(0),...,d(9)是按照［16］中7.1节进行兰相位的QPSK调制后的符号,
4
d(0),...,d(9)按照式3-5的方式进行解调。
及2 */) = */(如))
片(2* 7 + 1) =
按照与发送端逆向流程，调制符号d(0),…,d(9)解调之后得到长为20的加扰序列
片(0),...,片(19),接着对片(0),...,片(19)解扰，就可以得到Reed-muller编码比特块
8(0),...,3(19)。由于接收端QPSK解调采用软解调方式，解调后的加扰序列是带有幅值 的解调序列。解扰按照如下方式进行。
6(z) = 6(/)(l-2c(z))	(3-6)
式中c(z)的产生同发送端，是长度为20的0-1扰码序列，由gold码产生，初始化值 为编t =3/2」+ 1).伽辭+1)?2拓+〃用。
RM译码
RM译码通常使用全搜索译码和基于快速哈达玛变换(FHT)的译码两种算法。全搜 索译码算法即在接收端将进行解调后硬判决后生成的单极性｛0,1｝比特进行解扰，解扰过 程同发送端一样，将单极性序列同扰码序列相加后对2取模，得到解扰后的｛0,1｝序列， 并将该序列作为接收序列。接收端对所有码字进行编码，并将编码序列与接收序列对比， 编码序列与接收序列的对比采用计算两个序列的汉明距离，取汉明距离最小的发送码字 作为译码结果。因此在接收端对于长度为n使用RM编码的的CSI序列，在接收端需要 将2"个发送序列进行RM编码，并比较与接收序列的汉明距离。
基于FHT的RM译码算法则是利用RM编码矩阵和哈达玛矩阵的性质同时采用FHT 进行的快速高效的译码算法。下面对该算法详细介绍。
表3-1 RM编码矩阵MOI
I	Mi,0	Mi,l	Mi,2	Mi,3	Mi,4	Mi,5	Mi,6	Mi,7	Mi,8	Mi,9	Mi, 10	Mi, 11	Mi, 12
0	　　1	　1	　0	　0	　0	　0	0	　0	　0	　0	1	　　I	　　0
1	　　1	　1	　1	　0	　0	　0	()	　()	　0	　1	1	　　1	　　0
2	　　1	　0	　0	　1	　0	　0	　1	　0	　1	　1	1	　　1	　　1
3	　　1	　0	　1	　1	　0	　0	()	0	　1	　0	1	　　1	　　1
4	　　1	　1	　1	　1	　0	　0	()	　1	　0	　0	1	　　1	　　1
5	　　1	　1	　0	　0	　1	　0	1	　1	　1	　0	1	　　1	　　1
6	　　1	　0	　1	　0	　1	　0	]	0	　1	　1	1	　　1	　　1
7	　　1	　0	　0	　1	　1	　0	0	　1	　1	　0	1	1	　　1
8	　　1	　1	　0	　1	　1	　0	0	　1	　0	　1	1	　　1	　　1
9	　　1	　0	　1	　1	　1	　0	1	　0	　0	　1	1	　　1	　　1
10	　　1	　0	　1	　0	　0	　1	1	1	　0	　1	1	1	　　1
11	　　1	　1	　1	　0	　0	　1	1	　0	　1	　0	1	　　1	　　1
12	　　1	　0	　0	　1	　0	　1	0	1	　1	　1	1	1	　　1
13	　　1	　1	　0	　1	　0	　1	0	　1	　0	　1	1	　　1	　　1
14	　　1	　0	　0	　0	　1	　1	0	I	　0	　0	1	0	　　1
15	　　1	　1	　0	　0	　1	　1	1	1	　0	　1	1	0	　　1
16	　　1	　1	　1	　0	　1	　1	1	　0	　0	　1	0	　　1	　　1
17	　　1	　0	　0	　1	　1	　1	0	0	　1	　0	0	　　1	　　1
18	　　1	　1	　0	　1	　1	　1	1	　1	　0	　0	0	　　0	　　0
19	　　1	　0	　0	　0	　0	　1	1	0	　0	　0	0	0	　　0
LTE系统中采用了两种RM编码方式，其中PUSCH上非周期上报的CQI采用
(32,11)RM编码，而本文研究的PUCCH釆用(20,13)RM编码方式。(32,11 )RM编码矩阵 中第1列为全1序列，第2列到第6列是长度为32的经过块交织后Walsh码，剰余的 第7列到第11列，是5个基本掩码序列；PUCCH中(20,13)RM编码矩阵中，第1列同
(32,11)M矩阵一样为全1序列，第2列到第6列是截短的交织Walsh码，第7列之 后是7个基本掩码序列。
RM译码流程如下：
1)高位扩展
在解(20,13)的RM编码时，由于RM矩阵中第2列到第6列是截断的交织后 的Walsh码，因此要利用快速哈达玛变换进行RM译码，首先要将输入序列扩展 至32位。扩展的方法是在高位补12个0。
RM 编码序列》(0),..盘(19)扩展为8(0),6(19),0,0,0,0,0,0,0,0,0,0,0,0。
2)交织
M矩阵中第2列到第6列是截断的交织后的Walsh码，将该Walsh码补齐至 32位后，进行交织。以第2列为例，进行补零后序列为：
1100110 01 0010101 1 0 1 0 0 0 0 0 0.0 0 0 0 0 0 0
按照同PUSCH的(32,11)RM中相同的交织顺序，交织后的序列为：
01010001010001000001010001010100
序列中点型下划线符号是扩展的“0”符号。对扩展的“0”符号进行转换，使 交织后的序列成为Walsh码：
01010101010101010101010101010101 同理，对第3列到第6列做同样的处理，处理后的序列如下表。
01010101010101010101010101010101
? ??? ???< *?? ???> ???| ???' ???' ??????? ??????
00110011001100110011001100110011 00001111000011110000111100001111
????!	> ???> ? ? ?1	????■?
00000000111111110000000011111111
■ ???< ???' ???? ????■?
00000000000000001111111111111111
????< ???■ ???> ???> ???' ??????
可以看出是第2到第6列是截短的Walsh码的交织序列。因此接收的处理是 将M矩阵同扩展后的接收序列同时进行交织处理
3)掩码消除
M矩阵第7列到第13列是7个掩码序列，这7个掩码序列可以组合成2, =128 个掩码矢量。因此将解交织后的长度为32的发送序列与这128个掩码矢量相乘为 128个长度为32的序列，必有一个序列是与发送端相同的掩码组合，达到了掩码 消除的作用［2。】。
4)BFHT
将这128个序列进行32阶FHT,得到32*128的相关值矩阵。下图给出了 8 阶IFHT的蝶形图。
25
图3-6: 8阶IFHT蝶形图
5)相关值映射
M矩阵的第1列是全1序列，因此第1列对相关值矩阵的影响在于相关值的 符号[20],通过在32*128的相关值矩阵中找到模值最大的相关值，该相关值在相 关值矩阵中位于(i,j),即第i行第j列，那么解码序列第2到第6位为i的二进制｛0, 1｝比特，第7到13位是j的二进制｛0,1｝比特，该相关值的符号，表示了解码序列 的第1位，如果相关值为正数，表示解码序列第1位为0,反之为1。
在LTE系统PUCCH中，长度为13的CSI的相关值矩阵映射如下：
相关值的索引i
对应的二进制
相关值	相关值的索引j
的符号	对应的二进制
图3-7: RM译码映射
根据上图中的映射关系,可以对这种算法进行计算量的优化。在eNodeB-方， 经过高层的配置可以知道CSI的长度。如果CSI的长度小于7,发送端并没有掩 码序列的参与，因此不需要128种掩码序列的组合所构成的32*128的相关值矩阵, 只需要在一个长度为32的相关值集合中找打最大的相关值，若第i个相关值最大， 则长度小于7的CSI就可以用相关值的符号和i的二进制表示。同样。若CSI长 度为7,则在掩码组合为2中，那么相关值矩阵为2*32。下表给出了长度小于13 的CSI的基于FHT的RM译码算法的相关值矩阵的大小。
26
表3-2: RM译码相关矩阵大小
CSI长度	相关值矩阵大小	CSI长度	相关值矩阵大小
小于7	32*1	10	32*16
7	32*2	11	32*32
8	32*4	12	32*64
9	32*8	13	32*128
