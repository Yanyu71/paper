4.3基于节点重要性的虚拟网络重映射算法设计
不同重要性的底层节点对于底层网络的连通性有着不同的影响力，重要节点 的负载率过高会造成底层网络资源的碎片化，非重要节点对于底层网络连通性的 影响力有限，即使过载也很难造成底层资源的碎片化。文献［73］提出了 “跷跷板 问题”这一概念，“跷跷板问题”指的是重映射操作在消除旧有的资源瓶颈的同 时造成新的资源瓶颈的问题。如图4-5所示，假设在虚拟网络重映射算法中节点 负载率的阈值为百分之六十，此时检测到节点I的负载率达到了百分之七十五, 超过了设定的负载阈值，重映射机制将节点I上所承载的虚拟节点d重新映射到 负载压力较低的节点F上，并对虚拟节点d的相邻虚拟链路进行了重映射。虽然 重映射操作达到了负载均衡的目的，使得所有底层节点的负载率均小于阈值，但 是重要节点F以及底层链路CA与CF的负载压力却增加了。重要节点F的负载 压力加大很容易造成底层网络资源的碎片化，使得后续虚拟网络请求的接受率降 低，非重要节点I的过载对整个网络的连通性不会造成明显的影响。
由此可见，针对非重要底层节点的重映射操作不仅无法有效地改善底层网络 的资源碎片化问题，还会增加重映射操作的时间开销与计算成本，降低后续请求 的接受率。因此，在进行虚拟网络重映射的过程中对节点的重要性进行区分可以 有效地避免“跷跷板问题”。
50
图4-5 “跷跷板问题”示意图
当前的虚拟网络重映射算法主要分为主动重映射与被动重映射两类，被动型 算法在检测到虚拟网络请求被拒绝时才会启动重映射，通过迁移已映射的虚拟节 点与虚拟链路以消除资源瓶颈，然而此时底层网络的资源碎片化程度往往已经达 到十分严重的状态，在这种条件下进行底层网络的负载均衡较为困难。主动型算 法周期性地扫描底层网络的负载状态，并对高负载节点与链路上所承载的虚拟节 点与虚拟链路进行重映射，可以有效地维持底层网络的负载均衡，避免资源瓶颈 的出现，更好地保持虚拟网络请求的高接受率。因此，本文选择主动型策略进行 虚拟网络重映射。
文献［74］设计了一种主动型虚拟网络重映射算法，该算法周期性地扫描底层 网络的负载状态并对负载率过高的底层节点上的所有虚拟节点进行重映射，可以 有效地实现底层网络的负载均衡，然而重映射高负载节点上的所有虚拟节点会造 成过高的重映射开销并且对虚拟网络服务造成较大的影响。文献［75］以平均整个 底层网络中节点的剩余资源量为目标，提出了一种主动型算法，该算法周期性地 将剩余资源量较少的底层节点上的部分虚拟节点迁移到剩余资源较多的底层节 点上，然而该算法没有考虑到重映射目标节点的位置问题，很容易导致属于同一 个虚拟网络的各个虚拟节点随机地分布在底层网络中，增加重映射的链路开销。 文献［76］考虑到重映射开销的问题，提出了一种主动型算法，该算法周期性地将 高负载底层节点上的虚拟节点重新映射到距离其邻居节点所在位置最近的底层 节点上，然而这种重构策略单方面地考虑了距离因素，没有考虑到不同底层节点 的重要性区别，容易导致“跷跷板问题”的出现。
本文针对上述虚拟网络重映射算法的缺点，设计了一种基于节点重要性的虚 拟网络重映射算法，该算法通过本文提出的综合多维度属性的节点重要性评价指 标对底层节点的重要性进行区分，周期性地将高负载的重要底层节点上的部分虚 拟节点重新映射到低负载的非重要节点上，并对其关联的虚拟链路进行重映射，
51
以此来维持底层网络的负载均衡，提升虚拟网络请求的接受率，同时能够有效的 避免“跷跷板问题”的发生。
