4.1整体设计
D2D验证平台系统基于通用软件无线电平台(USRP)和通用处理器(GPP)设计 实现，GPP服务器为使用Linux操作系统的64位多核服务器，软件系统由C/C++ 语言编写完成。USRP完成系统射频端的处理，而基带信号的处理和协议栈的处 理则由GPP服务器上的软件系统实现。除了物理层和协议栈处理外，该软件系统 还提供与网络层的数据接口以支持业务，提供监控接口以支持可视化数据监控平 台O
USRP提供了通用硬件驱动(UHD)作为软件无线电平台中与软件部分的通用 通信接口。GPP服务器与USRP通过该接口，使用千兆以太网交换接收和发送的 数据流以及必要的少量控制信息。USRP器件的基带釆样率为25MHz,每个釆样 值包括正交的I、Q两路，每一路由一个16位有符号数标识。因此USRP和GPP 服务器之间单向数据流码率约为25M*2*16=800Mbps,而必要的控制信息每秒只 产生几KB量级的数据流，因此千兆以太网可以满足系统对射频前端和服务器之 间的传输需求。
为了与OSI和ETE的协议体系结构一致，D2D验证平台系统被设计为具有 自上而下层2、层1和层0的三层结构，如图4-1所示。其中层2为D2D终端的 协议栈，实现了与ITE协议类似的RLC层、支持CSMA/CA流程的MAC层、用 于无线资源调度的无线资源管理(Radio Resource Manager, RRM)实体，以及与网络 层的数据接口层；层1为D2D终端的物理层，实现了 3.3.2中所述的物理层信道 功能，为层2提供业务数据传输、控制数据传输、测量等服务；层0对UHD的 一些接口进行了封装，向物理层提供数据收发的服务，由于USRP器件的釆样率 与ETE基带信号采样率不匹配，层0还提供了采样率转换的功能支持。
27
图4-1 D2D验证平台系统及软件架构图
D2D验证平台软件系统内部使用ZeroMQ进行层间以及层内模块间的消息传 递。ZeroMQ是一个开源的高性能异步消息传递组件，可以实现进程间和进程内 的线程间通信。ZeroMQ提供的通用API封装了包括TCP、Unix套接字等常用的 进程间通信，并进行了数据粒度均衡等优化。对于线程间通信，ZeroMQ则以无 锁消息队列的形式实现，并提供了与进程间通信相同的通信接口。D2D验证平台 软件系统在ZeroMQ的基础上进一步封装，为相似的通信需求提供统一的接口， 保证了消息传递的规范性。这些接口规范将在本章下文详细说明。
在系统实现中，层0是一个独立的进程，层1和层2归属同一个进程。两个 进程分别包含若干独立的线程，本章下文将对这些线程的实现机制进行说明。
系统通过一个基于Web的参数可视化平台实时对系统的工作状态和参数进 行监控和调整，该平台使用Nodejs与D2D验证平台的协议栈进行通信，使用 canvas进行图表的绘制。该平台的具体实现不在本文的介绍范围内，但第六章中 的部分演示效果将基于该平台给出。
28
