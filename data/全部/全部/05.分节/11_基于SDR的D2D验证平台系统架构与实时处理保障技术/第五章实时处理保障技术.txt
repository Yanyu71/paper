第五章实时处理保障技术
上一章介绍了 D2D验证平台系统软件架构的实现及其各模块的功能。根据模 块处理流程的分析，很多模块都对信号处理的实时性有着一定的要求。对系统实 时性要求最为严格的一个流程是D2D的数据发送流程，由于PDCCHDCI Format 0消息最少仅提前4ms时间发送。这就要求D2D终端如果要在混合网络模式下通 过复用PUSCH发送数据，那么从空口捕获到含有PDCCH DCI Format 0消息的子 帧头部开始，完成对该子帧的层0接收预处理、物理层前端处理、PDCCH盲检 测、到协议栈根据消息内容进行资源调度、物理层进行PUSCH发送信号处理和 层0发送预处理全部完成，整个流程持续不能超过4ms。
要在基于GPP的SDR平台上开发这样一个大运算量、高实时性要求的系统， 平台的特殊性会给系统的实时性带来挑战，这些挑战主要体现在：
1、	D2D验证平台的操作系统环境是GPP通用处理器平台上的Linux操作系 统。与FPGA、DSP等平台不同，Linux是基于时间片的操作系统，它并不提供 可靠的实时性保障。为了满足实时性要求，验证平台需要在操作系统的硬件接口、 任务调度策略等多方面进行优化。
2、	单核的GPP处理器是串行运算而非并行运算，因此对于负载较大，密集 运算的模块，开发过程中不仅要从模块的算法效率方面进行优化，也需要提供稳 定、高效的并行机制以提高时间利用率。
3、	D2D验证平台的设计包含了 L0层、物理层、MAC层、RLC层到IP层的 诸多层级结构，各层各模块之间存在大量的数据和信令传递。为了保障系统的实 时性，验证平台必须提供高效率的层间接口和低延时、高稳定性的消息传递与消 息轮询机制。
为了应对这些挑战，D2D验证平台系统的开发过程中，每一个模块的算法都 经过了效率方面的优化。本章将在这些已经模块效率已经优化完成的前提下，从 系统架构设计和并行优化的角度出发，介绍以下五种具体的实时保障技术。
