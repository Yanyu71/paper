5.4时延和抖动性能分析
下面研究基于RMAB的业务分流算法在交付时延和抖动情况,这些参数通常 用于衡量调度算法的的效率和可靠性。子流1的参数保持不变（时延为100毫秒,
丢包率为0.1%)o在图5-5是使用基于RMAB的业务分流算法、最小RTT和RR 算法后的平均数据块交付时延情况。最小RTT的交付时延明显高于基于RMAB 的业务分流算法。只要两个路径中的时延，或者丢包率发生变化，最小RTT的 数据块交付时延急剧上升，而基于RMAB的业务分流算法则只是略微上升，影 响很小。这是因为基于RMAB的业务分流算法算法综合考虑了时延，丢包率等 变化情况，并能缓解大量数据传输出现的乱序情况。我们还研究了这两种算法的 时延抖动特性，如图5-6。当一个子流的性能急剧下降时，最小RTT算法的时延 抖动较大，数据包的延迟时间的差异越大，则抖动越大。而基于RMAB的业务 分流算法算法由于考虑到了交付时延的影响，与最小RTT算法相比，时延抖动 性能更好。
■ RMAB
霜 LowRTT
fflRR
图5-5基于RMAB的业务分流算法和LowRTT、RR平均时延对比图
测试用例
图5-6基于RMAB的业务分流算法和LowRTT、RR平均时延抖动性能对比图
