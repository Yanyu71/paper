4.4.5过滤虚拟身份
对虚拟身份对中的前一个过滤
根据单个虚拟身份出现的次数以及虚拟身份对出现的次数对数据进行过滤排除掉单个虚拟身份出现总次数小于某一阙值的虚拟身份，若出现的次数太少则偶然性太大，失去了研究的普遍性，不具有说服力。并去掉虚拟身份对与单个虚拟身份出现次数比值小于某一闯值的记录，若虚拟身份对出现的次数小于单个虚拟身份出现的次数，则不足以说明这一虚拟身份出现另一个虚拟身份也会同时出现，即不能说明这两个虚拟身份属于同一使用人。
在此步骤中需要注意两点:O针对需要过滤的虚拟身份，处理之后删除该虚拟身份后面的时间窗口类型信息;
@将虚拟身份对的 key 和 value 交换，方便下一步进行处理。
1)输
本步骤的输入数据包含两个部分:
输出的虚拟身份对文件，数据量约为10GB;
输出的单个虚拟身份文件，数据量约为 2GB;
2伪代码
由伪代码可知，在 Mapper 阶段对不同的输入文件进行不同的操作用以区分。因为在后续的合并过程中不必要求知道该虚拟身份是出现在半点时刻还是整点时刻，而且还要将这两个时窗口的虚拟身份对进行去重合并，所以在 Redcuer阶段，对要过滤的虚拟身份所属的窗口类型进行移除。
在 Reducer 的输出可以看出，对虚拟身份对和单个虚拟身份的比值进行了条件过滤，说明第一个虚拟身份出现第二个虚拟身份也会同时出现，这样就在很大程度上说明这两个虚拟身份属于同一使用人。
3)输出结果
由图4-10可知，两个虚拟身份的顺序进行了对调;且第二个虚拟身份已经把时间窗口的类型信息去掉。
对虚拟身份对中的另一个过滤
和对虚拟身份对中的前一个过滤过程一样，但输入数据不同。
1输入数据
本步骤的输入数据包含两个部分
输出的虚拟身份对文件，数据量约为8GB;@4.4.4输出的单个虚拟身份文件，数据量约为2GB
2)输出结果
由图4-11 可以看出，虚拟身份后面的时间窗口类型信息都已经去掉;因为此步骤和上一步的程序是一样的，所以经过两次的虚拟身份的位置的对调，两个虚拟身份依然是按照从小到大的顺序进行排序。4.4.6去重整理
