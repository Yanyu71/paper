5.1.1同人关系传播算法初次实现
通过对标签传播算法的分析与理解，发现其比较适合本文对同一使用人的虚拟身份的合并，使得每一个人的虚拟身份共同拥有同一个标签，会形成一簇簇的虚拟身份组，每一簇即代表一个使用人。
算法设计
将每一个虚拟身份看作是图中的一个节点，节点的数据结构表示为:class nodef
nodeld
neighborNodes
oldLabel
newLabel
//节点Id，即虚拟身份
1/邻居节点
//1日标签
//老标签
1)算开始时，首先为每一个节点设置一个独有的标签 Label;
2)归迭代。在本文中我们将标签设置为从1开始的整数，通过节点之间的关系将标签传播到其他邻居节点，当每个节点收到多个标签时，选取数值最小的标签来更新自己的标签。
3)当图中所有节点的标签都不再发生变化时，程序运行结束。拥有相同标签的节点虚拟身份即属于同一使用人。
Hadoop实现
用MapReduce实现该算法需要两个 Job。Job1 是递归迭代，目的是更新节点的标签信息;Job2是用来断 Job1 是否代完成，判断依据是在 Mapper 阶段检查节点的新旧标签是否相等，若相等则输出<nodeld，0>，否则输出<nodeld，1>;在Reducer 阶段，将相同 key 值的 value 相加，若结果等于0，则选代结束否则继续进行下一轮迭代。伪代码如下:
