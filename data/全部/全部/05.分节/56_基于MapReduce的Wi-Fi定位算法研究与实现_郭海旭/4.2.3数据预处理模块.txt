4.2.3数据预处理模块
数据预处理模块的输入来自收集模块上传的数据包。在数据收集过程中，信 号强度有可能突然地增加或减少，甚至无法扫描部分AP中的无线信号，这些数 据都不具有参考性，需要被删减。该模块通过消除大量的波动信号可以直接、有 效地提高定位精度，消除无效数据对定位精度的影响。如表4-3为某一采集区域
33
内的部分数据:
表4-3 Wi-Fi数据列表
SSID	Levell	Level2	Level3	Level4	Level5	Level6
TP-LINK_324	-18	-19	-20	-19	-18	-19
SP605	-49	-52	-53	-55	-52	-55
GuoAllen	-50	-50	-54	-46	・47	\
322wifi	-54	-53	-54	-58	-55	-53
WiFi-D8	-65	-67	-69	-64	-65	-65
表中SSID为“GuoAllen”的AP在采集过程中RSSI本来趋于平稳，信号强 度围绕着-50dBm中心上下波动，突然信号出现强度骤减和陡增的情况，甚至有 一次该AP节点出现无法被勘测到的情况。这种不稳定的信号源在实际应用中是 需要被屏蔽的，通过过滤掉噪声以及无效的数据可以进一步提高系统的稳定性， 甚至能提高定位的精度。除了屏蔽不稳定信号源之外，通过一些有效的过滤算法 也可以将信号的忽增忽减情况进行记录，并加以过滤。如图4-5所示，实验中采 用高斯滤波的方式对数据进行二次处理，尽可能消除奇异噪声对系统的影响。
图4-5预处理流程图
第三章中通过大量仿真实验发现,数据收集的数量越大，滤波的可靠性越好。 另一个影响过滤效果的因素是过滤的循环次数，循环次数越多过滤效果越好，当 循环次数超过一个阈值后，效果就不再有所改善了。图4-6所示为数据预处理模 块的流程图。
34
图4-6代码流程图
下面是数据预处理在执行过程中的循环过滤代码:
For(int i=0;i<3;i++){
if (strcmp(apjnac, ap_macaddr[i +1 ]) ~0) {
cnt[i]++;
rssi[i+l]=rssi;
avg_rssi[i]=avg rssi[i] + (rssi[i+1]-avg rssi[i])/cnt[i];
strcpy(macaddr[i+1], dev mac);
arivetime[i]=tv. tv_sec;
)
printf(n macaddr[%d]:Ox%X\n ", I, macaddr[i]);
