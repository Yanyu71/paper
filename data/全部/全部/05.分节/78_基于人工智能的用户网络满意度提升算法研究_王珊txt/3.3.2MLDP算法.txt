3.3.2MLDP算法
本节基于CFSDP算法，提出一种新的基于成对约束的半监督聚类算法（MLDP算 法）。在解决用户分群时，由专家指定将数据分为N个类别，并为每个类别选取初始代 表对象，以初始代表对象附近的局部峰值对象作为备选聚类中心，与初始代表对象相比, 备选聚类中心更适合作为聚类中心，对备选聚类中心在约束条件下进行迭代，与传统聚 类方法相比，大大缩减了聚类中心的优化过程，提高了聚类的效率；当存在少量奇异值 的对象聚类时，传统聚类方法可能会因为奇异值的存在出现聚类结果不均衡或空簇的问 题，而本方法由于优化了聚类中心，并将专家经验与数据挖掘算法融合，降低了奇异值 的影响，聚类结果的均衡度显著优于传统聚类方法，更具有实际应用价值。本文所提的 MLDP算法具体步骤如表3-1所示，算法流程图如图3-3所示：
表3-1 MLDP算法步骤
22
算法：MLDP算法
输入：个样本点
,初始代表对象（ai, az, —on）
, must-link 约束集
•r：比例系数
输出：N个簇的集合
1：计算初始代表对象以在截断距离&内的局部密度值o %, TWk&N,并将以 在截断距离&内的局部密度值最大的对象设为服的局部峰值对象以；其中， dmmWdcWdg "为任意两个对象之间的距离；
2：根据以对应的以，确定所有初始代表对象（0,。2,…弧）对应的局部密度 峰值点（ci, C2,…QJ）；
3：判断＜C1, C2，…CN）中是否存在相同对象，如果是，执行步骤4；如果否， 执行步骤7。若（ci, C2,…皈）中存在相同对象，会导致输入对象不能聚类成 N类对象，需要将相同的对象更替为不同的对象；
4：若（m，ai, •■•on）中的。相和。”对应的c加和c”为同一个对象，则判断加 和a”是否存在must-link约束集，如果是，执行步骤5；如果否，执行步骤6； 5：将am替换为与am处于相同must-link约束集中的其他对象，和/或将a„替换 为与a”处于相同must-link约束集中的其他对象，返回步骤2,通过更替代表 对象，将相同的备选聚类中心更替为不同的备选聚类中心；
6：将Cm替换为新，的为斯与外中局部密度值较大的对象，返回步骤3,本 步骤将相同备选聚类中心的一个聚类中心替换为初始代表对象，使得更替后的 聚类中心不同。两个代表对象中，局部密度值越大，则表征该代表对象越适合 作为聚类中心；.
7：将（C1，C2,…弥）作为N类对象的聚类中心，并将每个对象在不违背所有 约束条件的前提下划入最近的聚类中心，完成N类对象的聚类优化，不同于K-means算法需要进行多轮迭代，本算法只需一次分配便完成聚类，上述步骤可 输出N类对象的聚类结果；
8：由公式（3-1）计算聚类均衡度，C越小，表示每个聚簇包含的样本点数目 相差越小，聚类的均衡度越好；
9：在上述的对象聚类优化方法中，每个截断距离”可对应一种聚类优化结果， 当不确定是否为最优结果时，可以通过调整&,返回步骤1,直至。达到最小 值，此时得到均衡度最优聚类结果。
23
下面给出一种截断距离de的调整方法：对所有d进行递增排序得到有序数列，共 （环1）/2个，记为dWifeW……W力，令截断距离&=。网，其中/为比例系数, 表示取整，然后通过调整比例系数调整截断距离小的大小。
图3-3 MLDP算法流程图
24
