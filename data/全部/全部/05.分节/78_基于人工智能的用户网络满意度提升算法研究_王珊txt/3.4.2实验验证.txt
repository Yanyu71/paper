3.4.2实验验证
本节为验证所提算法的有效性及泛化能力，除用户投诉数据外，再选取一组来自运 营商某地市公司的用户营销数据进行实验，并已根据经验，在实验前为用户营销数据选 取了高价值用户、中价值用户、低价值用户代表对象及约束条件，为用户投诉数据选取 了资费敏感型、服务态度敏感型、网络性能敏感型、语音性能敏感型代表对象及约束条 件。实验配置为4G内存、2.30GHz主频，IntelCOREi7的PC,采用Python3.7进行仿真 程序设计，选取运行时间作为算法复杂度的评估指标，选取聚类均衡度为算法性能的评 估指标，选取纯度为算法有效性的评估指标。实验数据的具体情况如表3-6所示。
表3-6实验数据说明
组别	实验数据	维度	样本总量	聚簇数目
1	用户营销数据	13	2044	3
2	用户投诉数据	110	3351	4
本节将 MLDP 算法与 K-means、Constrained-Seeded K-means (C-S K-means)、CFSDP 三种算法进行比较，其中，K-means算法指定聚簇个数K, Constrained-Seeded K-means 算法与MLDP算法引入相同的监督信息初始聚类中心及成对约束，样本分配过程中初 始聚类中心所属类别不发生变化且要确保成对约束条件得到满足，CFSDP算法选取最 优参数人工选取聚类中心过程不计入运行时间，MLDP算法通过调整比例系数/得 到不同聚类结果如表3-7、表3-8所示。
表3-7基于用户营销数据三种算法结果对比
比例系数/	簇1	簇2	簇3	运行时间	C
K-means	\	1773	20	251	38.2	1337.8
Constrained-Seeded	\	278	573	1193	16.5	660.4
K-means	\
CFSDP	0.02	1143	139	762	5.1	716.7
0.01	1943	17	84	4.8	1545.9
0.02	774	685	585	5.5	133.7
0.03	570	1314	159	5.8	827.9
MLDP	0.04	1462	225	357	6.2	960.6
0.05	543	904	597	6.7	275.3
0.06	1295	673	76	7.3	862.0
0.07	543	538	963	7.9	344.9
表3-8基于用户投诉数据三种算法结果对比
28
K-means	比例系数/	簇1 941	簇2 1887	簇3 434	簇4 89	运行时间 79.9	C 1354.7
Constrained-Seeded K-means	\	347	421	923	1660	37.4	1047.8
CFSDP	0.02	1023	1655	223	450	17.2	1109.2
0.01	1066	1000	737	548	16.7	415.3
0.02	761	317	894	1379	17.3	757.0
0.03	376	263	455	2257	17.7	1644.4
0.04	795	968	782	806	18.3	151.3
MLDP	0.05	1281	400	1148	522	18.8	764.2
0.06	999	736	643	973	19.9	304.2
0.07	839	214	1585	713	20.4	981.3
0.08	533	1148	1378	292	21.4	882.5
0.09	959	180	1638	574	22.5	1075.7
由表3-7、表3-8可以看出，从总体上MLDP算法的聚类均衡度相对于K-means算 法、Constrained-Seeded K-means算法和CFSDP算法都有大幅提升。表3-7中，当/取 值在［0.02, 0.0刀时，MLDP算法聚类均衡度均小于K-means算法，，取0.02时，达到最 优聚类均衡度，仅为K-means算法的10%, Constrained-Seeded K-means算法的20%, CFSDP算法的18%o在表3-8中，/取0.04时，达到最优聚类均衡度，为K-means算法 的 11%, Constrained-Seeded K-means 算法的 14%, CFSDP 算法的 14%。
由图3-4、图3-5还可看出，随着/增加，运行时间逐渐增加，本节综合考虑算法复 杂度及聚类均衡度,最终基于用户营销数据,选取/=0.02,基于用户投诉数据，选取片0.04。
-S-聚类均衡度C T-运行时间
图3-4比例系数♦对MLDP算法的影响（用户营销数据）
29
1800.0
1600.0
1400.0
1200.0
1000.0
800.0
600.0
400.0
.o.O 0(( 2
1644.5
.8
8
5. )7
25.0
20.0
3叵任仁阳 .O.O 5.O.
0.02	0.04	0.06	0.08
比例系数f 一^■^聚类均衡度C	运行时间
O O.
0.1
图3・5比例系数1对MLDP算法的影响（用户投诉数据）
由图3-6、图3・7可以更清晰地看出，，取最优参数时，四种算法中MLDP算法聚类 均衡度最佳，运行时间略高于CFSDP算法，远低于K-means算法和Constrained-Seeded K-means算法。综合以上分析，可得出MLDP算法可大幅降低聚类均衡度，并且与K-means算法和Constrained-SeededK-means算法相比，在降低算法时间复杂度上有较好的 效果。
1600.0
1400.0
1200.0
1000.0
800.0
600.0
400.0
200.0
0.0
45.0
40.0
35.0
30.0
25.0
20.0
15.0
10.0
5.0
0.0
1337.9
133.7
麒一聚类均衡度	1337.9	660.5	716.8
T一运行时间	38.2	16.5	5.1
图3・6Z取最优参数时四种算法性能对比（用户营销数据）
30
图3-7 t取最优参数时四种算法性能对比（用户投诉数据）
接下来对实验结果进行进一步分析，表3-9、3-10分别给出了/取最优参数条件下， MLDP算法与未添加监督信息的K-means算法基于用户营销数据和用户投诉数据更详 细的聚类结果对比。
表3-9 t取最优参数时聚类结果对比（用户营销数据）
K-means 算法						MLDP算法
类标 签	样本 个数	营销是 否成功	当月 ARPU	营销成 功率	占总体用 户的比例	类标 签	样本 个数	营销是 否成功	当月 ARPU	营销成 功率	占总体用 户的比例
0	1773	617	125.93	35%	87%	0	774	245	110.49	31%	38%
1	251	87	199.74	35%	12%	1	685	238	136.35	35%	33%
2	20	1	210.59	5%	1%	2	585	223	168.76	38%	29%
总计	2044	705	135.82	34%	100%	总计	2044	705	135.82	34%	100%
表3-10 K-means算法聚类结果细分（用户投诉数据）
类标签	样本 个数	每个簇 的比例	资费 投诉	服务 投诉	网络 投诉	通话 投诉	投诉 次数	投诉 比例	纯度
0	1887	56.31%	28	20	40	28	116	6.20%	0.0119
1	434	12.92%	6	8	10	7	31	7.16%	0.0029
2	89	2.66%	2	0	4	0	6	6.74%	0.0011
3	941	28.08%	16	9	19	10	54	5.74%	0.005
总计	3351	100.00%	52	37	73	45	207	6.21%	0.0218
31
表3-11 /取最优参数时MLDP算法聚类结果细分（用户投诉数据）
类标签	样本 个数	每个簇 的比例	资费 投诉	服务 投诉	网络 投诉	通话 投诉	投诉 次数	投诉 比例	纯度
资费敏感型	782	2334%	22	6	14	7	49	6.26%	0.0281
服务敏感型	806	22.83%	9	17	13	8	47	5.70%	0.0211
网络性能敏感型	968	28.89%	12	6	34	11	63	6.50%	0.0351
通话性能敏感型	795	23.72%	9	8	12	19	48	6.16%	0.0264
总计	3351	100.00%	52	37	73	45	207	6.21%	0.0278
由表3-9可以看出，在用户营销案例中，若依据用户每月为运营商企业所创造的价 值，将用户分为高价值用户，中价值用户和低价值用户，K-means算法和MLDP算法聚 类结果均符合中低价值用户群体数量较多，高价值用户数量较少的规律，每个类别的营 销成功率有所差别，其中，中、高价值用户营销成功率较高，低价值用户营销成功率较 低，K-means算法得到的聚类结果中，高价值用户群体中仅包含一个样本，显然受到奇 异值的影响，这样的聚类结果在实际应用中显然无法落地，而MLDP算法得到的每个簇 大小较为均衡，且每个群体用户平均价值区分度较大，具备落地价值。
由表3-10、表3-11可以看出，在用户投诉案例中，不同类别的用户群体投诉率有所 差别，在MLDP算法中，由专家先验指定将用户划分为“资费敏感型”、“服务态度敏 感型”、“网络性能敏感型”、“通话性能敏感型”，由表3-11可以看出，“网络性能 敏感型”用户投诉比例相对较高，而由K-means算法得到的结果中，尽管各个簇投诉率 有所差别，但是若想概括每一个聚簇的相似特征，还需要进一步的分析。理想情况下， 经过MLDP算法聚类后，每种敏感类型的聚簇中应当只包含该种投诉类型，而得到的聚 类结果中，每个聚簇都包含多种投诉类型，本文通过“纯度”指标衡量敏感类型与投诉 种类的匹配程度，纯度越高，则说明簇中包含与之匹配的投诉类型越多，聚类越有效， 由公式（2-6）、（2-7）、（2-8）可计算得到纯度。经过纯度检验，将每个聚簇中投诉 样本最多的类作为这个簇代表的类，MLDP算法相对于K-means算法纯度提升了 27%。 综上，MLDP算法在降低算法复杂度的前提下，能够显著提升聚类的均衡度和有效性。
