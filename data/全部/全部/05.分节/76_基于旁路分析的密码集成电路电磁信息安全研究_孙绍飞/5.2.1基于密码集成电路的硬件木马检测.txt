5.2.1基于密码集成电路的硬件木马检测
硬件木马检测是应对硬件木马最直接也是最常用的防护手段，其目的是为了 验证集成电路设计加工过程中是否有恶意电路的篡改和加入。硬件木马检测可以 在流片前验证集成电路设计的可信性，也可以在流片后对集成电路进行检验测试, 其主要方式如图5-2所示。
流片前的硬件木马检测多是在设计的行为级代码或者门级网表中进行，其目 的是为了辅助验证第三方IP核及集成电路设计的可信性。常用的流片前检测有 功能验证、形式化验证和HDL设计分析左刀。
图5-2硬件木马检测分类
流片前的功能验证主要是检测硬件设计中几乎用不到的电路，将这些几乎用 不到的电路结构作为特征属性来对硬件木马进行建模和检测。功能验证可以分成 两类：动态检测和静态分析。动态检测主要是对电路进行仿真并找到那些几乎使 用不到的电路结构标记为疑似木马。静态分析主要是对硬件设计进行静态布尔函 数分析，找到没有被使用的电路结构。功能验证的缺点是仍然需要人工分析才能 够进一步确定疑似木马是否为硬件木马。形式化验证是对硬件IP核进行的基于 算法的逻辑验证，把硬件设计转化成可定义的信号属性并对其进行格式校对。形 式化验证的有效性在于所定义的安全属性能否覆盖到硬件木马。对于安全属性之 外的硬件木马，形式化验证难以检测到。比如从第三方购买的硬件IP核，在功 能检测之外，IP供应商不仅需要提供IP设计，还要提供相应的安全属性以供验 证。HDL设计分析一般在行为级代码或门级网表中进行，主要是为了识别硬件 设计语言中是否有多余的声明或者电路结构是否是潜在的疑似木马，同时还能够
89
量化标记硬件设计中翻转概率极低的逻辑门。HDL设计分析的缺点是不能保证 硬件木马被检测到而且常常需要手动处理以确定是否真的为硬件木马。
流片后的检测大致分为破坏性和非破坏性两种电叫破坏性方法主要是利用 化学试剂将密码集成电路芯片表面的封装去掉，然后对其每一层的电路进行拍照, 依据照片进行分析和重建以确定门电路和布线情况。逆向工程法［⑼属于该类破坏 性方法，这些方法能够具有很高的精确度，但是这些方法具有破坏性、成本高、 耗时长，因此并不是特别实用，一般只应用于简单的小型集成电路。非破坏性的 方法不改变设计流程，在流片后的测试阶段对硬件木马进行识别，主要是逻辑测 试和旁路分析。逻辑测试通过生成测试向量来触发硬件木马电路，并观察其对于 输出有效载荷的恶意影响。但是逻辑测试的困难在于需要遍历所有内部节点以激 励所有可能，并观察其对输出的影响。一方面，随着逻辑门数量的增加，难以测 试的节点数也在增加；另一方面，硬件木马一般是以极低的概率被触发，很可能 在逻辑测试中无法观测到恶意的影响。最终，由于众多的硬件木马使得逻辑测试 并不实用。旁路分析主要是基于在集成电路中任意植入的恶意电路都会在某些旁 路信道的物理特性参数上有所改变的事实，例如动态功耗、路径延迟特性、电磁 发射以及多种参数的组合。通常情况下，硬件木马的尺寸比原始设计尺寸要小， 这是因为硬件木马是在生产设计过程中通过修改原始设计的布局而加入的，一般 隐藏在原始设计当中。旁路分析的优势在于不用触发硬件木马就能够检测到硬件 木马的存在，可以避免硬件木马触发后导致的恶意后果，能够通过微弱的旁路信 道所泄漏的物理旁路信息检测到硬件木马。如果工艺偏差能够被校准且测量噪声 也能够被消除，那么硬件木马电路的存在肯定能够被反映到所测量的旁路信道参 数上。利用一个或多个旁路信道的信息来检测硬件木马的存在正逐渐成为一种新 兴的有效方式。
