2.1分组密码算法基础
分组密码算法是一种对输入的明文/密文分装成特定长度的明文/密文块以 进行加密和解密的算法，其安全性主要依赖于密码算法的密钥，故密钥对外是保 密的，而加解密的算法可以是公开的。分组密码算法具有速度快、方便标准化、 易于实现等优点，因此在通信系统和信息系统的安全领域中应用广泛。
高级加密标准(Advanced Encryption Standard, AES)是目前使用最为广泛 的一种分组密码算法，对AES密码算法的研究具有重要意义。AES密码算法是 一种迭代进行的对称密钥分组算法。在AES密码算法的标准规范中，分组大小 固定为128位(16个字节)，而密钥的大小可以为128位、192位和256位。根 据密钥长度的不同，其所对应的轮数分别为10轮、12轮和14轮。本节以AES-128 为例详细介绍AES算法的加密原理。
AES密码算法主要是基于由16个字节组成的4x4状态矩阵上而展开的迭代 加密运算，每一轮的状态矩阵内容都在不断更新，最终的运算结果被视为密文。 AES算法的加密表达式可以表示为C = E(P,K),将明文P和密钥K输入到加密 函数E中，便能够得到输出密文C。在加密函数E中包含一个轮函数，由字节代 替、行移位、列混淆和轮密钥加四个操作组成。该轮函数会执行10轮，前9轮 的操作是相同的，第10轮中省略了列混淆的操作。
25
AES密码算法的加密流程如图2-1所示。
Round 1-9 -<
RoundKey 1-9
RoundKev 0
MixCohiinns
SubByt^
Roimd 10
ShiftRows
AddRoundKey -RoundKey 10
Ciphertext
图2・1 AES密码算法流程
轮函数由四个操作组成，分别为
（1）字节代替（SubBytes）
字节代替是轮函数中唯一的非线性操作，同时也叫做S盒操作。字节代替主 要通过两个可逆变换复合而来，先对每个字节在有限域GFQ8）求其乘法逆元素, 其中，00被映射为00;然后，再对求得的结果进行如式（2-1）的仿射变换。
1 1 o o o 1 1 1 o o o 1 1 1
=
yol月y2l为力y5ly6l
01234567 rxlylxlx% %%/ ooolllll oolllllo o 4X 1 1 1 1 o o 1 1 1X 1 1 o o o lllloool llloooll
rO-i
1 1
0 0
0
1
(2-1)
+
该代换也可以用一个称之为S盒的查找表分别对状态矩阵的每一个字节进 行一对一的映射替换来实现。
26
（2）行移位（ShiftRows）
行移位是对状态矩阵中的每一行以字节为单位循环左移不同的位移量，其中 第1行不进行移位操作，第2行循环左移1个单位，第3行循环左移2个单位, 第4行循环左移3个单位。
（3）列混淆（MixColumns）
列混淆的主要目的是对状态矩阵每一列中的所有字节实现充分混合，每一列 都与一个固定的变换矩阵进行有限域GFQ8）上的乘法运算，从而得到混淆后的状 态矩阵，如式（2-2）所示。
即
So,j =（2 - Soj） ©（3 - Sij） © s2,j © S3ij
s% = soj ㊉（2 - Sij）㊉（3 - s2j） ® s3 j	_ 3
% = Soj ㊉ S1J ©（2 - s2J）㊉（3 - s3J）
s=j =（3 - Soj） © sltj © s2j ®（2 • s3J）
其中，0W/W3, s和s，分别为状态矩阵翻转前后的值。
（4）轮密钥加（AddRoundKey）
轮密钥加是对128位的轮密钥与128位的中间状态逐位进行异或操作。
AES密码算法在加解密过程中的密钥扩展是由一个初始密钥扩展生成各轮 的轮密钥来代替单个密钥的使用。
每一轮的轮函数执行的操作如图2-2所示，对于AES密码算法更为详细的 介绍请参见文献［2］。
27
也由向巾宓由应言囱山管自应中囱肉
I I I	T i i । I	I
明文
字节代替
行位移
列混淆
轮密钥加
图2-2轮函数加密操作流程
