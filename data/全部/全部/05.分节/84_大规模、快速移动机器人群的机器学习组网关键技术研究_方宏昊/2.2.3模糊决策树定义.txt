2.2.3模糊决策树定义
表2-3模糊决霞树符号定义
符号
说明
S
数据集
Si
第z•个数据实例
A
模糊属性集
Aj
数据的第/种模糊属性
C
决策树划分类
ck
决策树划分类的第丘种类型
5
第i个数据实例Si对第j个属性Aj的隶属度
模糊决策树是一个树结构，通过训练场景获取训练数据进行分类训练，成功 训练出分支明确的模糊决策树，每条训练数据通过模糊决策树的分支都能达到叶 子节点，每个叶子节点就代表一类输出。训练好的模糊决策树以树形结构存放在 无人机内存当中，需要进行跳数预测时，将对应邻居的所有属性打包成一条测试 数据输入到模糊决策树中，即可输出预测的跳数分类结果。
为了更好的描述模糊决策树，表2-3给出了模糊决策树符号定义，模糊决策 树的具体定义如下，设数据集S={Si,S2,---Sn}是离散值域X上的集合，模糊属 性集为 A={AI,A2,…Am},属性 Aj 的术语 V (Aj) ={Vji,Vj2, •••Vjk},其中］W jWm。划分类为C={CbC2, ---Ck}.第i个数据实例&对于第j个属性的隶属度 为Uj,表示定义在V (Aj)上的模糊子集。
(1) 属性集和目标类
通过分布式信息作为输入特征属性建立模糊决策树,具体考虑的属性如表2- 4所示。
表2-4模糊决策树输入输出定义
Hopupdate
邻居节点到基站的跳数，是周期性更新的信息
U_time
邻居节点跳数更新时刻到当前时刻的时间间隔
Direct
邻居节点的速度方向
Speed
邻居节点的移动速度
LET
本节点和邻居节点的链路过期时间
Prog
邻居节点前向距离
16
Degree
本节点节点度
目标类
说明
Hoppre
选择邻居节点作为转发节点传输到基站实际经过的 跳数
Ai-HopUpdate-丑。皿為是邻居节点的跳数信息，由于节点的高移动性和规模 大，维护的跳数在实际使用时可能已经发生了改变，但是跳数的改变也是有限的, 因此维护的跳数将是预估跳数的重要决策属性。
Ai-Ujime, Ujime是跳数更新时间间隔，是指更新跳数的时刻到现在的时 间间隔。
A3-Direct, Direct是节点速度方向，邻居节点移动是靠近还是远离基站对跳 数改变有重要的影响，直观来说，当邻居节点靠近基站移动时，更有机会和基站 建立更短跳数的路由。
A^-Speed,切ee〃是节点移动速度，跳数的变化正是由于节点的移动造成的， 因此节点的移动性是预估跳数的重要决策属性。
As-LET, ZET是链路过期时间，通过移动节点之间的距离、移动节点的速度 和移动方向来计算移动节点的ZE7\计算公式如下：
LETJR"H
1	%+0忆
其中Q和方根据两个节点是相向移动还是相反移动设置为+1/-1。Dy是i节 点和邻居节点j之间的距离，Vj和V2是两个节点的速度，R是最大传输距离。
A6-Prog, ProguDMjd是前向距离,前向距离是指节点到邻居节点的连线在 节点到基站方向上连线的投影，其中Dd是本节点到基站的距离，是邻居节点 到基站的距离。
Ay-Degree, Degree是邻居节点度，指的是邻居节点的个数，这个指标可以 反映网络密度，在网络密度较大的场景中，邻居跳数的差值较小，在网络密度较 小的场景中，邻居跳数的差值较大，所以邻居节点度也会影响跳数的变化。
模糊决策树的训练标签采用实际传输到基站的跳数，如果传输失败则把标签 设置为跳数阈值Hopnres=10o使用模糊决策树时输出为预测跳数值Hopprea
(2) 属性模糊处理
采用式(2-5)〜(2-7)处理属性数据，每个属性值x (At)属于第丿个属性 术语的隶属度函数为：
17
其中，61,偽2,…a：k表示三角模糊数中心。根据隶属度函数对本文的输入属性 进行模糊语义定义，其中跳数属性本身是离散变量不进行模糊处理。
A2-U_time （短、较短、中等、较长、长），As-Direct （靠近基站、远离基站）， A4-Speed （慢、中、快），A5-LET （短、中等、长），A6-Prog （三成进度，五成进 度，七成进度，全进度），“Degree （稀疏、均匀、密集）。
（3）	ID3算法建立决策树
本文采用ID3算法构造决策树，为了尽可能多的拟合特征，越靠近模糊决策 树根部节点就需要选择信息增益越大的属性往下分裂，属性的信息增益越大越先 放入决策树模型中，而计算信息增益首先需要计算数据集爛和属性爛，算法具体 步骤如下。
Steph获得所有模糊化属性的信息增益，要计算每个属性的信息增益，需要 计算数据集的爛和单个属性的爛。数据集的燔E心丿计算公式如下：
_c _
Entropy, E（s）=工-p, log2 p,	（2-8）
目标分类是实际传输到基站的跳数砂他“ C是划分类集合1〜10跳，S是数 据集，卩是数据集中每种分类的概率。
Step2：单个属性的^EAi厶丿计算公式如下：
=	（厶9）
18
其中4是模糊属性集/的第j种属性，V是属性4的取值集合，丿是代表属 性4的第丿种取值，号代表数据集中属性4的值为丿的数据量。例如对于属性 Speed。低速、中速、高速)，假设数据集数量为100条数据，其中低速有20条， 其中有划分类为2跳的有5条，划分类为3跳的有15条，则E (与)二(0.25) log20.25- (0.75) log20.75o
Step3：由此得到的属性4的信息增益公式如下所示：
Gain(S, 4 ) = E(S)(S)	(2-10)
Step4：若无更多属性或者数据集全部划分为一类，则该节点为叶节点，否则 重复 Stepl〜Step3。
模糊决策树从根节点到叶节点代表一条分类规则，叶节点的数量等于分类规 则的数量，叶节点的种类等于划分种类，图2-4为3种输入属性的决策树模型示 意图。
属性类型
属性术语
A,
图2-4决策树模型示意图
随着网络节点移动性的增强，最短跳数预测的思想被提出，减小端到端的跳 数有利于降低端到端时延。最经典的最小跳数预测的方式是贪婪转发［旳，通过选 择离基站最近的下一跳节点来尽可能减小端到端路由跳数，但是这种方法在移动 性较高时容易选出不稳定的链路。近年来提出的从基站开始周期性逐跳广播更新 每个节点到基站的跳数信息可以缓解这个问题⑴〕，但是周期性更新的信息都会 面临信息过期的问题，在大规模网络中提高更新的频率来保证信息的新鲜度会带 来巨大的网络开销，因此需要通过预测的方法来获得正确的跳数信息。
19
由于节点的高移动性以及大规模网络端到端路由链路较长的特性，周期性更 新的跳数信息随着时间的推移快速过时而不可用，如果使用了过时的跳数信息可 能会导致数据包的路由选择经历了更多的跳数，这不仅会造成端到端时延性能下 降而且更多的转发也带来了更高的丢包可能性。因此准确预测实时的跳数信息可 以有效降低大规模网络端到端时延，因此本文采取模糊决策树来预测邻居节点到 基站的跳数。
根据前两小节描述的决策树建立方法，在离线训练场景中采集数据训练出决 策树模型，在本文仿真场景中使用训练好的决策树模型进行跳数预测。遍历邻居 节点，将预测的跳数信息保存在本地并从邻居节点中选择出预测跳数最小的邻居 加入候选转发节点集，算法伪码如算法1所示。
■WT履选转发节点彙决策算法
输入：
邻居表(neighborList)
模糊决策树(Tree)
输出：
候选转发节点集
算法步骤：
1. 对于每个节点Nodel
2. 定义(跳数阈值)
3. 第一次遍历邻居表neighbor List,寻找最小预测跳数值hop^m
4. 根据邻居信息生成模糊决策树输入数据vector<int> data
5. 将fitoa输入模糊决策树输出对邻居跳数的预测值Zzop/Ve，hopMin=Min (hoppre，hop Min)
6. 完成循环，得到/ZOOM”
7. 第二次遍历邻居表neighborList
&将邻居预测跳数值hop氏=肋的邻居加入候选转发节点集
9.完成循环，得到候选转发节点集
