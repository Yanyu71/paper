2.1.1两步检测FasterR.CNN算法介绍
Faster R-CNN虽然是在R-CNN、FastR-CNN的基础上发展而来，但它却是 目标检测发展史上一个重要的里程碑：不仅是第一个所有检测阶段都以深度学习 技术为核心的目标检测算法，更是整个网络端到端进行训练的开端。Faster R- CNN在一个大网络中完成了特征提取、生成候选框、分类回归等步骤，使得综 合性能有极大提高。Faster R-CNN的基本结构如图2-1所示：
分类
图2-1 Faster R-CNN基本结构
从图2-1可以看出，Faster R-CNN可以分为四个主要内容：
（1）	特征提取网络。特征图的质量好坏严重影响检测器的性能，不变形和 同变性是图像特征表示中两个重要的属性。分类问题需要具有不变形的特征，因 为分类的目的是学习高层语义信息；而定位问题需要具有同变性的特征，因为它 需要辨别位置、尺度等变化因素。目标检测同时包含分类与定位两个任务，因此 检测器需要不变形和同变性共存的特征图。
特征提取网络要求输入的图像尺寸保持一致，所以先将尺寸不一的图像统一 重塑成MxN的图像。特征提取网络由卷积层、激活层和池化层组成：卷积操作 通过使用特定大小的卷积核，作用于图像的局部区域从而获得图像的局部特征； 激活操作是把卷积结果输入到一个特定的非线性激活函数中进行变换，以提高卷 积网络的表达能力；池化是将特定大小的池化核在图像上滑动从而聚合提取特征 的过程，能够极大程度上压缩特征的维度和降低网络的计算量。FasterR-CNN中 使用的特征提取网络是VGG-16,它由13个卷积层，13个激活层和4个池化层 组成。所有的卷积层和激活层不改变输入输出的大小，而池化层会使输出长宽都 变为输入的一半。那么，一个MxN大小的图像经过VGG-16网络输出（M/16） x （N/16）大小的特征图。该特征图被共享用于后续RPN网络和全连接层。
（2）	RPN网络。RPN用于生成候选框。在Faster R-CNN之前，目标检测 模型都是利用传统图像处理的方法生成候选区域，不仅速度很慢，而且生成的候 选区域质量也不够好o Faster R-CNN直接使用RPN生成候选框，是Faster R-CNN 的巨大优势，因为RPN开创性地引入锚框（anchor）的机制，完全利用卷积神 经网络的方式实现候选区域的生成，能极大提升检测框的生成速度。
首先介绍一下anchor这个概念：将特征图上的每一个点映射回原图，得到 这些点在原图上的坐标，然后在这些点周围取一些提前设定好的区域就是anchor, 这些选定的anchor是用来训练RPN的。假设对特征图上的每个点选取K个anchor （原论文中K=9）,特征图的大小为HxW,那么一共得到HxWxK个anchor.,
然后在生成了 HxWxK个anchor的特征图后并行接入两个卷积层分别做置 信度预测和边界框回归。这两条分支输出的张量大小分别是HXWX2K和 HxWx4K,分别对应每个点的每个anchor是否是目标物体的概率（是或者否，2 个分类结果）以及它所对应的物体的坐标（4个坐标回归系数）。
在训练的过程，RPN网络的损失包含一个用于二分类的交叉爛损失和一个 用于回归的smoothL1损失，对于每个anchor,如果它和图片中某个物体的IOU （面积的交/面积的并）大于某个阈值，就认为它属于前景类，否则认为是背景 类，对于是背景类的anchor回归损失就是零，最后利用边界框回归来修正anchor 以获得精确的候选框。
8
(3) ROI (Region of interest)池化层。通过RPN网络生成的候选区域， 是一系列尺寸位置不一的候选框。但是由于后续的分类回归层是全连接层，输入 神经元的个数固定。这就要求输入到分类回归层的候选区域尺寸一致，因此引入 ROI池化的方式，将不同大小的候选区域规范化到同样的大小。
ROI池化借鉴了 SPP-NET的思想：先将候选识别区域划分为相等大小的部 分(其数量与输出的维度相同，例如7x7),然后找到这些区域(一共49个子区 域)的最大值，最后将这些最大值直接输出。结果是，从具有不同大小的矩形列 表中，快速获得具有固定大小的相应特征映射的列表。但在这一过程中，ROI池 化层输出的维度并不取决于输入特征图的大小，也不取决于候选区域的大小，它 仅由区域划分的部分数量决定。
(4) 分类回归层。通过ROI池化层已经得到所有候选区域维度统一的特征 向量，然后接入全连接层进行多任务分类并输出分类置信度，同时利用每个候选 框的偏移量进行边界框修正，得到最终的目标检测框。
这里也采用了与RPN类似的并行分支，但不同之处在于，RPN网络是利用 卷积的方式对于所有的anchor同时生成分类和回归结果，而这里是只对单个候 选区域生成分类回归结果，因此使用的是全连接的方式。这一部分的损失也是多 任务损失，是分类和边框回归损失之和，分类损失依然是交叉燔，边框回归损失 是smooth L1。Faster R-CNN网络细节图如图2-2所示：
