3.3.2Lazy维特比译码算法
SOVA算法主要包含两个步骤：第一步是寻找最大似然路径(MLPath),第 二步是根据最大似然路径和最大竞争路径的差值计算每个信息比特的对数似然 比。SOVA算法的计算复杂度主要是由回溯路径的个数和度量差值的个数决定。
由第二章对维特比算法和其低复杂度译码算法的优化可知，序列译码算法和 A*算法，在高SNR条件下基于深度优先的搜索方式，比维特比算法更加有效， 但是在低SNR条件下这种搜索会变得相对缓慢。对于序列译码算法来讲，在低 信噪比条件下，译码树的分支会急剧增加，基于分支数量的分支度量值和门限计 算也会变得非常困难，且序列译码算法本质上搜寻的并不是最大似然路径。对于 A*译码算法来讲，该算法结合了维特比译码算法和序列译码算法的优点，当高 SNR条件下，A*算法按照序列译码算法的方式进行，但是A*算法目前还不能应 用于连续的数据流译码。
毋庸置疑，在高SNR条件下，利用序列译码算法会极大降低维特比算法的 复杂度，但是，在低SNR条件下序列译码算法和A*算法都还存在一些问题。所 以必须要对序列译码算法进行改进，使它保证在低信噪比条件下译码复杂度不超 过维特比算法，且译码性能与维特比算法相比几乎没有损失。
