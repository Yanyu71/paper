3.2.2.2Log.MAP算法及
结合上一节所介绍的MAP算法的原理及计算方法，MAP算法在进行计算 时，需要用到大量乘法，这需要耗费大量的计算资源，而在进行比特判决时，我 们只需要LLR提供的比值信息即可。为解决上述问题，对乘法操作取对数处理 可以使乘法变为加法，且可以抵消一些底数运算，这就是Log-MAP算法凶［25］的 初衷。
对数后验概率如式(3-41)所示：
M小)二•如…	(3-41)
式(3-41)经过进一步推导可得：
36
入e [ r) = log
ZqM©4/血+1
=1()2一小，/* % = 1MM
-°S	% = °)A+I
Tog Z(pG*P@x =q\0= P)B* °s \(八2％尸(％=q\?=?)心
(3-42)
+抽薪"产⑴/r，03)然 工皿息讨出M+\=q，2=P)鼠
P(u = 1)
=4：+ 2P / + A? /
式中人,t是经过信道传输的信息位提供的信息:
% = log
P(* % = 1)
P(xt I w, = 0)
=&X]
(3-43)
式中4t表示另一分量译码器传递的信息，初始值为0。
式中小,t表示外信息，其计算方式如式(3-44)所示：
4 Io. Z(「g)3一尸G一。二== P)葭
"一° E"*p(y，\*=q，，=p)限
(3-44)
上式的计算方法可以参考式(3-40)的推导过程。
以上各式使用了大量的对数和指数运算，这在实现中也是一个巨大的困难， 所以对上式进行简化处理，利用雅阁比(Jacobian)公式做近似处理，Jacobian公 式如式(3-45)所示：
In (e" + e') = max (x, y) + In (1 + e~^~^)	(3-45)
如式(3-45)所示，该公式将两个指数做加法后再进行对数运算简化成两个 指数比较大小的运算，大大降低了计算复杂度。式中等号右边的第二项，可以利 用查表法进行近似处理，利用|x-y|的大小作为查表输入，得到该对数值。该操 作几乎不会影响译码性能。
以上介绍了 Log-MAP算法，对于上述算法来讲还需要进行两步操作，第一 比较指数大小，第二根据两指数差值对进行查表操作。查表操作会极大降低译码 器的吞吐率，所以对式(3-45)进行进一步简化得到了 Max-Log-MAP算法叫〕： ln(eT+ev)«max(x, v)	(3-46)
进一步推广上式可以得到:
37
In WX j ~ max (七)	(3-47)
按照式(3-47)进行简化计算，可以极大提升译码的运算速度，可以认为在 计算时直接选择最大度量值。这样的简化计算会对译码性能造成一定影响，使得 Turbo译码器大概损失0.3dB左右，这就需要在工程实践中进行权衡，在译码精 度和计算复杂度中做出取舍。
