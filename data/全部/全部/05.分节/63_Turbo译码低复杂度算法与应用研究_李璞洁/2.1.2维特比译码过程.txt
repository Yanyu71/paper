2.1.2维特比译码过程
由上一节可知，最大似然译码等效于最小汉明距离译码，因此具有最小 d(y, m)累积值的路径就是logp(y \ m)的最大似然路径，该路径被称为幸存路径。 定义分支度量值(BranchMetric)为BM = d(%g)；最小累积度量值，即对所有 分支度量值的累积量表示为PM。卷积码的编码过程与网格图中的一条路径对应， 即输入序列的编码过程与网格图中的路径存在一一对应的关系。当序列长度为L
8
时，网格中一共存在平条不同的路径，即其对应于乃种不同的输入码字。在网格 图中，每个状态转移的过程都是输出码字的过程，所以，在每一个符合输入的分 支中，都可以计算出分支度量值，译码过程也是建立在网格图搜索的基础之上， 且出发状态与结束状态已知，都是全零状态。
假设L表示码字长度，N侬表示卷积码寄存器长度，维特比译码算法的步骤 可以总结为以下三步：
1）以时刻/=入7悭为起始，计算进入各状态的不同路径的分支路径度量值， 并存储每个状态的幸存路径及其分支度量值BMo
2）令l = l+T,将进入某一状态的分支度量值与其前一段路程的幸存度量值 相加，然后计算进入该状态的所有最小度量的路径，得到新的PM值，这样就得 到了某一个节点的幸存路径及其累计度量值，并删去所有其他路径。
3）若IvL+J 重复步骤2,若/ = £+乂《则停止上述步骤，译码结束。
上述3个步骤中，第一步是第二步运算的初始化，第三步是第一步和第二步 的延续，上述过程的关键在于第二步。译码算法第二步的核心在于三点，即累积、 比较、选择。所谓累积值，指的是将每个路径的分支度量值进行累加，度量方法 可以选择汉明距离或欧式距离等计算方法；比较指的是将到达节点的两条分支路 径的累积度量值相比较；选择指的是选出到达某节点的两条路径中度量值最小的 一条路径作为幸存路径。
为了更加清晰、明确地展示维特比译码方法，以（2,1,2）卷积码为例说明维 特比译码过程。假设其输入数据为4 =[110 11],卷积编码器结构如下图所示：
经过编码器输出码字序列为m = [11 01 01 00 01],经过有噪信道传输，假设 接收端接收到的码字为y = [11 01 0110 01],对该接收码字利用维特比译码方式 译码，维特比译码格图如下图所示：
9
y
S0(00)
Sl(01)
S2(10)
S3(U)
图2-2 (2,1,2)卷积码译码网格图
如上图所示，图中圆圈代表编码器内部两个寄存器的状态，共有四种情况即 00,01,10,11,实线箭头表示编码器输入为1的情况，虚线表示编码器输入为0的 情况，图中红色数字表示编码器在当前寄存器状态下输入为0或1时，输出2比 特码字的情况。
在时刻/< N,空的情况下，计算出每个路径分支的分支度量值之和，即为码 字的汉明距离，如上图中绿色数字所示，如接受序列y中第一个码字信息“11”, 与第一回合两条分支路径中的的汉明距离分别为2和0,该数字被标注 在图中每个分支路径上。只有当每个状态节点具有两条路径时，译码算法才开始
10
根据分支度量的大小选择幸存路径，删除其他路径。
对于时刻/NN“。时，可以看到此时SO〜S3均有两条路径到达，选择两条路 径中度量积累量较小的支路作为幸存路径，并删除其他路径，各个节点在时刻/ =时的幸存路径如下图中蓝色曲线所示：
y
so(oo)
Sl(01)
S2(10)
S3(ll)
图2S (2,1,2)卷积码译码维特比译码步骤二
至此，第一次幸存路径选择完成，删除其他非幸存路径后，重复上述步骤, 直到/=L+N.eg，此时译码到达终点，如图2-5所示，卷积译码完成。剩余幸存 路径即得到的最大似然路径如下图红色折线所示：
输入0	输入1
图2-5 (2,1,2)卷积码译码维特比译码步骤三
根据该路径得到的译码输出应为V =[11 0101 00 01],观察可知，与编码 器输出码字m完全相同，该码字对应的编码器输入数据可以根据以上最佳路径 实线和虚线读出，即利用维特比译码结果为宠=[110 11],与x完全相同。虽然
11
经过有噪信道干扰，仍能得到正确码字。
本节主要介绍了 Viterbi译码算法的理论依据及译码步骤,详细解释了 Viterbi 译码算法中最小汉明距离译码与最大似然译码之间存在的等价关系，为后面介绍 软输出维特比译码算法及其简化算法提供了坚实的基础。
