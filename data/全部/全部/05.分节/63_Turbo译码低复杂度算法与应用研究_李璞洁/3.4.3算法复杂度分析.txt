3.4.3算法复杂度分析
本章第3节已经详细介绍了 SOVA算法同MAP算法、Log-MAP算法和Max-Log-MAP算法的计算复杂度比较结果。且根据该结果可以得出SOVA算法在约 束长度为5,即编码器中寄存器个数为4时Max-Log-MAP算法的计算量几乎是 SOVA算法的两倍，故本节着重于对T-SOVA算法和SOVA算法的复杂度进行对 比。
SOVA算法和T-SOVA算法的复杂度的主要区别在于找到最大似然路径后回 溯操作的数量，回溯操作进行的次数将对算法复杂度产生重要影响。表3-4给出 了 SOVA算法和T-SOVA算法的平均回溯操作的次数。由表3-4可以看出T-SOVA 算法仅需要SOVA算法回溯操作数量的1/M。
表3-4 SOVA算法和T-SOVA算法平均回溯操作数量统计
SOVA	T-SOVA M=4	T-SOVA M=8	T-SOVA M=16	T-SOVA M=64
L=256	260	64	33	16	4
L=6144	6148	1537	769	383	192
比较SOVA算法和T-SOVA算法的复杂度并不能只比较计算量的大小，还应 该考虑SOVA算法和T-SOVA算法的内存消耗情况。通过对SOVA算法的分析 和推导可以利用SOVA算法和T-SOVA算法中所需扩展节点的个数来统计两种 算法的内存消耗情况。表3-5和表3-6分别给出了不同信噪比条件下256码长和 6144码长平均扩展节点个数。
由第332节所介绍的Lazy-Viterbi算法寻找ML路径的方法可知，T-SOVA 算法扩展节点的个数与信噪比条件有关，当信噪比条件较好时，其扩展节点的个 数将大大降低，当信噪比条件较差时，其扩展节点个数不多于SOVA算法。根据 表3-5和表3-6的统计情况可以看出相比较于SOVA算法，T-SOVA算法所需的 内存消耗量有明显下降，当Eb/N0大于3dB时，T-SOVA算法的内存消耗情况仅 为SOVA算法的20%到30%。
51
表3-5码长256平均扩展节点数量统计
Eb/N0 (dB)	-0.5	0.0	0.5	1.5	3.0
T-SOVA M=4	8038	6420	5436	3524	1808
T-SOVA M=8	8097	6503	5478	3602	1808
T-SOVA M=16	8103	6616	5456	3618	1808
SO\^	8220	8220	8220	8220	8220
表3-6码长6144平均扩展节点数量统计
Eb/N0 (dB)	-0.8	-0.5	0	0.5	3.0
T-SOVA M=4	196506	153598	82588	53788	39398
T-SOVA M=8	196532	153684	82608	53802	39398
T-SOVA M=16	196579	153726	82612	53815	39398
SOVA	196636	196636	196636	196636	196636
通过本节对T-SOVA和SOVA算法译码性能，收敛行为和计算复杂度的详细 对比可以看出，本论文所研究的Turbo译码算法具有译码性能与Max-Log-MAP 算法基本相同，迭代收敛性能不弱于Log-MAP算法，且译码复杂度远远低于前 面两种算法的特点，故将T-SOVA算法作为Turbo码的一种低复杂度译码方案具 有相当广阔的应用前景。
