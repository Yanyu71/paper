4.4.1实验环境与设置
(一)数据集选取
为了验证本章所提方法在处理跨域用户匿名情况时的优势，选取了三个跨域用 户在不同域中都有交互数据的跨域数据集，通过隐藏其中的跨域用户的ID信息以综 合评估各个方法的性能。
本节利用公开的Amazon数据集评估各个方法的性能。基于Amazon数据集，构 建了三对不同的跨域数据集进行实验：Movies & TV - CDs & Vinyl (Movie-Music) 数据集、Health & Personal Care -Beauty (Health-Beauty)数据集和 Clothing, Shoes & Jewelry - Sports & Outdoors (Clothing-Sports)» 利用 Ih 为间隔，将用户在不同域中的 历史交互数据划分为会话。然后，隐藏用户-项目交互的用户ID信息。为了更好地验 证各方法的性能，只保留大于等于3的评分值和保留评分总数超过20的项目。除此 之外，还过滤掉了项目数低于2的会话。三个跨域数据集的统计数据如表4-1所示。
实验中采用两种策略来生成训练集、验证集和测试集。
78
表4-1	三个跨域数据集的统计数据表
数据集	Movie-Music		Health-Beauty		Clothing-Sports
域	Movie	Music	Health	Beauty	Clothing	Sports
事件数	626537	200923	165502	101909	173277	186119
项目数	10685	6580	4838	3560	8164	5805
会话数	232727	78700	71063	42803	77510	76419
1）在评估CDIE-C模型的整体性能时，将各个域中最后2个月的会话作为测试集, 剩余的作为训练集。并过滤掉在测试集中出现但没有在训练集中出现的项目和 项目数低于2的会话。另外，将训练集中最后一个月的会话作为验证集。为了 构建跨域会话，针对每对训练集，使用lh的间隔来将相同用户的不同域的会 话链接到一起作为跨域会话。
2）为了验证各个方法在应对单域中数据稀疏性问题时的表现，通过随机地删除原 始训练集不同比例的行为记录来构建不同稀疏度（出 = ［10%,30%,50%］）下的 训练集的变体，以评估不同方法的性能。测试集和验证集与1）中相同，构建跨 域会话的方法也与1）相同。
（二）对比方法选取
为了验证CDIE-C模型的有效性，实验中将其分别与单域和跨域的先进的推荐 方法进行比较：
单域推荐方法
1.	基于流行预测（Popularity Predictor, POP）的方法：一个基于流行度的推荐方法, 它旨在为用户推荐训练集中最流行的项目。
2.	ITEM2VEC^： 一种基于skip-gram word2vec模型的项目嵌入方法。
3.	BPR121］：常用的矩阵分解方法之一。它通过随机梯度下降法优化一个基于成对 排序的目标函数。
4.	GRU4RECP2］： 一种基于RNN的方法。通过引入一个排序损失函数，使其更适 用于会话型推荐任务。
跨域推荐方法
79
1	.基于类别级的潜在因子模型(Cluster-Level based Latent Factor Model, CLFM)["]： 一种基于聚类的协同过滤方法，适用于不同域间没有用户及项目重叠信息的情 况。它可以联合学习跨域共有的评分模式信息和域特定的评分模式信息。
2	. CDIE-C：本章提出的方法。通过联合利用单域会话和跨域会话信息来学习匿名 跨域用户兴趣表示和项目表示。CDIE-C(item)代表只利用项目和它的上下文关 系的版本，即项目-项目上下文关系、项目-跨域类别上下文关系。
单域推荐方法分别训练源域和目标域后再分别进行推荐。跨域推荐方法一起训 练两个域。此外，BPR和CLFM由于是基于用户-项目评分矩阵进行设计的方法，不 能直接应用于会话型推荐中。但可以通过利用来源于两个域的两个项目-项目共现矩 阵替代用户-项目评分矩阵，然后使用会话中出现的项目表示的平均值作为用户兴趣 表示解决以上问题。
所有实验中的维度d设置为100,迭代次数设为20。针对BPR、CLFM和CDIE-C 方法，利用Recall@30在验证集上监控各个方法的收敛性。双聚类的数量L设置为 60o所有的超参数和学习率在验证集上通过网络搜索进行调优。本文将每个实验都 重复5次，并取平均值作为最终结果。
(三)评价指标设置
实验中采用RecaU@30和平均倒数排名(Mean Reciprocal Rank, MRR) @30来度 量方法性能。Recall®30认为结果排序中的前30个候选项目组成的集合中的所有项 目的重要性程度都是相同的，而MRR@30使用在前30个候选项目中出现的第一个 正确结果的排名的倒数来强调排名靠前的项目比排名落后的项目更重要。它将一组 项目序列看作是一组单词序列。
