2.1.4模糊变换技术
一种恶意代码通过模糊变换技术可以衍生出无穷多的不同变种.，并且这些代 码之间的相似性并不直观，传统的基于字节序列比对的检测方法无法有效检测这 类使用模糊变换技术的恶意代码。随着模糊变换技术的发展，使用这种技术的恶 意代码迅速更新换代，传统的反病毒软件己无法应对当前的严峻形式。目前常见 的模糊变换技术主要分为以下5种：
1.指令替换技术。模糊变换引擎(Mutation Engine)对恶意代码的二进制代码 进行反汇编得出程序的汇编指令序列，然后将操作数与操作对应存储，再将指令 进行对换。例如，将寄存器1和寄存器2进行互换等。
2.指令压缩技术。指令压缩技术会改变指令的长度，通过分析指令得出与• 其同义的指令，并做压缩处理，此举可以将程序的长度缩短。
3.指令扩展技术。指令扩展技术就是把每一条汇编指令进行同义扩展，一 般而言，使用压缩技术变换的指令大都可以釆用指令扩展技术进行逆变换。扩展 技术变换的维度比指令压缩技术大得多，并且有些指令甚至可以扩展出无穷多的 异构变换。由于指令扩展技术可能会改变恶意代码的长度，所以使用指令扩展技 术的恶意代码每次运行恶意代码时都需要进行重定位。
4.重编译技术。釆用重编译技术的恶意代码中携带恶意代码的源码，每次 运行这段恶意代码前都需要进行编译，由于这类恶意代码每次运行前都会重新编 译，所以具备较好的系统兼容性。宏病毒和脚本恶意代码是典型的采用这类技术 变形的恶意代码。
5.伪指令技术。伪指令技术主要是在恶意代码程序体中插入无效指令来模 糊代码，如NOP指令。
