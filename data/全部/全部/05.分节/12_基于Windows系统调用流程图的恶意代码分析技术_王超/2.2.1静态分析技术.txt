2.2.1静态分析技术
静态分析并不运行恶意代码，而是通过对文件进行反编译、反汇编等静态手 段来对恶意代码进行分析。通过静态分析可以提取出恶意代码的控制流图，进而 能够提取用于检测和查杀恶意代码的特征代码段或特征字符串。根据提取的特征 类型，静态分析技术又可分为两种：
1.特征码提取技术
恶意代码的特征码是指某个恶意代码所具有的区别于非恶意(benign)程序以 及其他恶意代码的数据或指令序列。特征码提取技术的输入集主要来自大量数据 的统计结果。特征码提取技术一般应用于精确匹配，如果恶專代码经过异构转换 特征码提取技术便失去作用。多态(Polymorphic)和变形(Metamorphic)技术是当前 恶意代码中常用的模糊技术，恶意代码经过多态或变形处理能产生海量异构代码, 因此特征码提取技术的实用性较差。
2.程序结构特征提取技术
特征提取技术的基本思想是对恶意代码进行反汇编能够对恶意代码的内部
16
结构与流程进行深入分析，提取出程序的流程图，并在此基础上进一步分析提取 出唯一标识恶意代码作为程序的特征码。本文即采用了这种方法。首先使用反汇 编工具IDA Pro对恶意代码进行反汇编，然后提取出恶意代码的控制流图(CFG), 再进行后续分析步骤。白莉莉等人提出一种基于关键应用编程接口图的恶意程序 检测方法卩七这种方法的流程是，首先对程序进行反汇编并提取出程序的控制流 图，在此基础上提取API构建恶意程序检测模型进行检测。使用反汇编或反编译 的方法能够将程序所有可能的路径都提取出来，能够较为全面的分析恶意代码， 但是使用这些方法的前提是程序本身同内存中运行时是一致的，对于未脱壳的程 序还需要先进行脱壳处理。下图所示为Netsky恶意家族的一个变种的控制流图：
图2-6所示为通过IDA Pro生成的控制流图，其中蓝色的方块表示库函数，黑 色的方块表示中断，绿色方块表示程序的入口点。由图可见，一段程序的CFG图 可能异常复杂，在分析的时候直接分析其调用的库函数可能及其困难，所以本文 讨论的检测方法屏蔽了这些复杂的细节，对这些调用的库函数做了一次预处理， 得到屏蔽大量冗余信息的二元组，方便后续分析。
