3.1系统设计思想
本系统基于Windows APL主要针对使用Polymorphic和Metamorphic技术模 糊竺豊的恶意家族变种，通过构建特征库来匹配未知文件进行检测。
Christodorescu和Jha等人在中通过分析一个恶意家族不同变种之间共 有的行为得出反映恶意特征的指令组成的检测恶意变种模板。他们在模糊化处理 样本中找出语义上反映恶意代码行为特征，即执行结果接近签名的代码段。 Kolbitsch和Comparetti等人在㈣中使用了行为方法来检测恶意代码。首先，他 们在模拟环境中执行样本恶意程序，然后建立由相互依赖API调用组成的，能够 反映行为特征的调用图模型，这种图也被称作行为图。在处理未知程序的时候， 他们的扫描器就来匹配反映出行为的API调用图"如果匹配一致，那么这个程序 就被视为恶意程序。作者提出这一方法不会受到API调用被乱序处理的影响，同 样的，增加空操作等无用的函数调用和类似的模糊化处理也不会影响这种方法的 检测率。
本文假设在恶意代码M中出现的API调用序列S同样出现在恶意变种M，中。 这是因为M程序经过代码模糊化处理后，在字节序列上可能与变种M，会有很大不 同，但是其语义上应该非常接近，而API调用序列正反应了这种语义上的逻辑关 系。所以经过模糊处理的代码之间在API调用上不会存在极大差异。另外，在这 大量的API调用中有很多的执行结果是相近的，所以可以进一步将Windows API 提炼为更一般的形式。匹配时需要对比两个矩阵的相似性，所以引入图相似性比 对的算法。
