4.2.5多模态模型实现
根据边界框标注的位置，模型从图片中获取物体特征后，利用InnerProduct层完成线性转换从而得到多模态模型的细粒度图像特征。为实现式(4-6)的损失函 数，需要先获取图像特征与文本特征之间的相似性矩阵。假定文本输入是 jeR(nx33)xW)图片输入是veK(-2o)xW> h是特征维度的大小，n是batch大小， 以下为计算相似性矩阵和实现损失函数的流程：
文本输入和图片输入进行矩阵运算得到
T
scoreb = vs
score。的大小为(〃x20/x33), Caffe中没有定义矩阵运算层，但有相应 的矩阵运算函数，因此本文直接利用该函数增加Multiply层。
为利用Caffe中的Pooling层完成式(4-5)的max运算，本文利用Reshape 层将scorq调整为大小是(1,1,mx20,mx33)的矩阵。在该Pooling层中， 宽度是序列长度33,高度和步长为1,相当于从每个句子中，为边界框 中的物体特征找到内积最大的值。因为在双向循环神经网络的定义中， 句子长度一般小于序列长度，多出的维度以0补齐，所以score,中有部 分值为0。这种情况影响了 Pooling层的计算，因为图片特征与文本特征 的内积可能会小于0,而文本特征超出部分以0补齐，这会造成max运 算的结果为0而不是真正的最大值，所以sco幣在进入Pooling层前，将 scoreb中以0补齐的值转变成非常小的值，消除对Pooling运算的影响。
通过Pooling层后，得到scorem,其大小为(1,1,*x20,")。之后同样使用 Pooling层完成式(4-5)中的求和运算。该Pooling层中，高度是每张图片 的边界框个数，宽度和步长为1。
通过步骤3后，经过Reshape整理得到大小为(n,n)的矩阵，每一行表示 一张图片与该训练批次中所有句子的相似程度。对角线则是正确图片- 文本组合的相似程度。根据这种情况，本文定义了 RankingMatrixLoss 层，该层的特有参数为margin,作为式(4-6)中的△,前向传播和后向传 播算法与算法4-1相同。以上流程完成了式(4-6)中的第二项。
对步骤1的sc。擀进行转置后，余下流程与步骤2到步骤4类似。对score； 调整为(l,l,"x33,〃x20)的矩阵后，通过两个Pooling层得到大小为(",〃) 的矩阵，将其输入到RankingMatrixLoss层中完成式(4-6)中的第一项。
利用Caffe框架除了可以实现深度模型外，还可以方便进行模型微调。例如 在训练好的细粒度多模态模型中，图像特征原本直接使用最后连通层的输出，为 了对全连通层微调，需要将图像特征改为pool5的输出，而全连通层则加入到多 模态模型中。Caffe在利用配置文件完成网络初始化后，允许网络从其他网络中 复制参数，其中参数复制根据layer的name进行匹配，但需要参数大小与原网 39
络定义的大小相同。通过这种参数的复制，模型可以在加载多模态模型后，再从 CNN网络中复制全连通层的参数。
