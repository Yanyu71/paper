2.5非关系型数据库Hbase
数据处理完后，考虑到持续性，较常用的方法是将处理结果存入数据库中。 就当下来说，数据库按存储结构可以分成关系型数据库和非关系型数据库 (NoSql)两大类。关系型数据库，是指按数据的关系模型来保存数据的数据库 ［⑵。
关系模型，换句话说，即用一个表格来体现数据之间关系的模型。关系型数 据库存储数据时维护了这样的一个模型。这样做的好处是可以很直观的体现数据 之间的关系，符合人体本身对数据的理解，利于使用。因为众多的优点，关系模 型数据库被广泛用于数据的存储，并慢慢发展成了最主流的数据库，在很长的时 间里服务于各个行业。然而，随着时代的发展，数据量渐渐增多。关系型数据库 的劣势也渐渐显现。由于结构问题，关系型数据库对于海量的数据的读写效率低 下，本身结构所限也无法满足高并发的解决方案。为了解决海量数据的存储问题, 非关系型数据库的概念便诞生了。最初的非关系型数据库指代的是非关系型的， 分布式的，且一般不保证遵循ACID原则(数据库事务必须具备ACID特性， ACID 是 Atomic 原子性，Consistency 一致性，Isolation 隔离性，Durability 持久 性)的数据存储系统。非关系型数据库的存储结构和关系型数据库有着本质的区 别。非关系型数据库按照Key-Value的模式进行存储，且可以有不同的列。每条
数据记录可以包含不同的字段信息。这样，当需要获取用户的特定信息时，无需 取出用户的所有信息，只需取对应的数据即可。这样可以减少很大的查询开销， 保证了查询的效率。
Hbase(Hadoop Database)受启发于 Google Bigtable,是 Bigtable 的开源实现版 本，以其高并发、高效率、面向列、分布式的特性而被广泛运用于大数据存储的 分布式存储系统。值得注意的是，Hbase的存储数据的结构是面向列的存储结构。
因此，在海量数据中查询相应的数据时，只需找到对应的Key即可，因此， Hbase速度很快，效率很高。
Hbase 的底层用 HDFS(Hadoop Distributed File System)来作为其存储系统， 由Zookeeper作为协同服务，通过使用Hadoop的DFS工具就可以看到这些这些 数据存储文件夹的结构，还可以通过Map/Reduce的框架对Hbase进行操作。
HBase中的表一般有这样的特点：
1海量：Hbase中一个表可以包含多达几亿行，几百万列。
2面向列：基于列的存储，查找时各列独立。
3稀疏：每条数据并不需要填满所有的列，只需保存需要的列字段即可。
数据模型：
HBase是一个非关系型数据库，其采用的的存储结构和关系型数据库差别很 大。HBase通过四个字段对数据进行描述，分别是：
行键(Rowkey):每条数据都包含一个唯一的键值，这个键值代表了这条 数据的查询依据。Hbase中依照Key的次序对数据进行排序，以此来确定数据的 位置，查询时也能更快定位到该条数据。因此，RowKey须根据后续查询条件进 行设置，不能随意设置。
列簇(Column Family)：每条记录都包含一个或多个列簇，一个列簇可能由多 个列组成，且没有上限，可以随时根据需要定义新的列，扩展性能很好。存储时， Hbase默认列簇以二进制存储，使用者可以自定义类型转换。
列修饰符(Column)：列簇中的列，保存了数据的字段信息。多个列组成了列 簇。
版本：在每列的末尾都定义了一个版本值，默认值是系统时间戳。表中会显 示最新版本的数据，若要获得较早版本的数据，可以通过指定版本来获得。每次 操作数据都会更新对应的版本。
Hbase的数据存储结构如下图所示:
表2-1 Hbase数据存储结构图
Row Key	Timestamp	Column Family
URI	Parser
rl	t3	url=http ://www.taobao.com	title。天天特价
t2	host=taobao.com
tl
r2	t5	url=http://www.alibaba.com	content?每天…
t4	host=alibabaxom
