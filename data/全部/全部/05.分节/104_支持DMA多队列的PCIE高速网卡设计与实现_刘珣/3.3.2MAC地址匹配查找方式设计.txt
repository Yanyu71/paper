3.3.2MAC地址匹配查找方式设计
目前关于硬件的匹配查找主要使用基于FPGA的CAM存储器。在FPGA硬件 资源中，分布着很多通用存储器，这些存储器可以配置为CAM存储器。当使用CAM 存储器进行査找时，整个表项空间的所有数据在同一时刻被查询，每个时钟周期可 完成一次查找。基于CAM存储器技术允许应用程序和操作系统在网卡上安装数据
28
包处理规则，这些规则指示网卡在与主机内存交换数据包时对数据包执行简单操作。 同时这些规则允许应用程序和操作系统对如何与主机交换数据进行细粒度控制。 CAM可以支持根据应用需求进行包的匹配和处理，具有很强的灵活性，同时满足现 在网络可编程的思想，对于未来网络协议也具有很强的支持性，可以随时根据新的 协议内容进行包的处理，更具可扩展性【59］。
如图3-8所示,CAM主要由以下几部分组成:译码器（Decoder 编码器（Encoder）、 CAM阵列（M）、搜索线驱动（SLDrivers）o CAM阵列负责数据的存储和比较，每 一行由多个单元组成，每个单元称为位（bit）。每一列代表不同的条数。CAM容量 由位宽和条数来表示。当地址数据从左进入，进行并行搜素找到指定的地址，如果匹 配成功，则将条数中的内容进行输出A。】。本文选择基于CAM存储器对MAC地址的 匹配查找进行设计。具体设计如下：
图3-8 CAM框图
考虑到硬件资源的分布，即CAM存储器分布在硬件的各处，不会形成太大的存 储结构，不利于匹配和查找，基本以18Kbit为一块进行分布。在对CAM容量的设 计中，需要确定位宽和条数。设CAM容量为卩，位宽代表匹配的规则数为b,条数 代表匹配的长度为/,则可得容量公式：
(3-1)
对于48bits的MAC地址来说，48bits为条数，需要经过译码器将48bits换算成 248个地址，但显然18Kbit的容量无法满足248的地址信息。
!SK«bx24S
因此需要对48bits进行分段匹配，即将48bits分成等大的比特数分别进行匹配。 考虑到目前包头字段的大小，无论MAC地址还是IP地址，都是8bits的整数倍，本
29
文以8bits为单位进行截取，即将48bits分成6段，每段8bits。8bits经过译码器换成
2*个地址，即256个地址。对于18Kbits的容量，深度为256,根据公式（3-1）
宽度可得为70,但输出结果需要进行编码，即将匹配到的结果进行二进制编码, 对于70来说：
27 > 70 > 26
需要7位二进制来表示，将宽度设为70不能完全利用资源，因此将宽度同样设 置为8的整数倍，再结合匹配规则数的数量，本文将宽度设置为32bits,即支持32 条匹配规则。在本文CAM容量的设计为：深度为256,宽度为32,如图3-9所示。
通过上述设计方案提高了空间利用率，同时增加了一定的匹配条数，本文以 MAC地址为例进行介绍，而对于长度为32bits的IP地址，可将其分成4段，即需 要4个CAM。其他数据包头的关键域都可按照此原理进行设计。
