4.3.2DMA控制器逻辑设计
本文所设计的DMA控制器结构设计方案如图4-21所示，从图中可以观察到， DMA控制器包括DMA读写操作模块、数据缓存模块、DMA寄存器模块以及中断 控制模块。其中，DMA读写操作模块主要负责对DMA读写操作的响应发起以及读 写操作的时序控制；数据缓存模块主要负责缓存从主机传送过来要发送到网络上的 数据以及从网络进入要发送到主机的数据，其中也对收发BD进行缓存；DMA寄存 器模块主要包括内存中地址的寄存器以及与收发BD相关的寄存器，这些寄存器都 对DMA控制器的功能、状态以及控制相关信息起着重要作用。各个模块的功能设计
(1) DMA读写操作逻辑设计
DMA读写操作模块主要负责响应来自DMA寄存器发起的DMA读写操作请求, 并且与前端的PCIE事务层进行交互，保障数据流稳定传输，同时对收发BD进行解 析以完成数据的写入和读取。DMA读写操作模块不同于PCIE发送引擎和PCIE接 收引擎模块。DMA读写操作模块状态机如图4-22所示。
图4-22 DMA读写操作模块状态转移图
首先对DMA读操作模块进行设计。在进行DMA读开始前，驱动需要配置DMA 寄存器相关寄存器的值，即PCIE接收引擎模块收到的DMA读请求信号并按照信号 内容进行配置完成寄存器的初始化操作，从而产生DMA读使能信号，DMA读操作 模块随即进入到DMA读操作状态。在完成上述配置等初始化工作后，正式进入到读 操作开始状态。下面以主机发送数据为例阐述DMA读操作流程：
1. 驱动在内存锁存一段物理空间地址，并创建好发送BDo
2. 驱动写DMA寄存器相应的寄存器，包括地址寄存器(高、低位)和控制DMA 读操作的寄存器。
3. DMA寄存器通知DMA读操作模块发起DMA读操作，根据第二步写入的信息 向内存中读取发送BDo
4. DMA读操作模块将读取回来的发送BD进行解析，根据发送BD的信息内容再 一次发起DMA读操作，向内存中读取用户数据。
5. 将用户数据读取回来放到数据缓存模块进行缓存发送。
6. 通知驱动本次发送数据完毕。
DMA写操作的工作流程与DMA读操作的状态机过程大致一样，但DMA写操 作并非由驱动配置寄存器发起，而是接收到数据后主动发起。DMA写操作在收到写
51 操作使能信号后进入到DMA写状态，对接收BD信息进行解析，获取DMA写操作 的相关地址信息，然后进入到写操作开始状态。下面将以主机接收数据为例阐述 DMA写操作流程：
1. 驱动在内存锁存一段物理空间地址，并创建好接收BD =
2. 驱动写DMA寄存器相应的寄存器，包括地址寄存器和控制DMA写操作的寄存 器。
3. DMA寄存器通知DMA读操作模块发起DMA读操作，根据第二步写入的地址信 息向内存中读取接收BD =
4. 将读取回来的接收BD放入数据缓存模块进行缓存，随后DMA写操作模块开始 解析接收BD,并根据接收BD的信息内容发起DMA写操作，向内存中写入数据。
5. 通知驱动本次接收数据完毕。
在进行DMA读写操作时，需要以PCIEIP核进行与主机的交互，本文通过使用 7系列的IP核，并选择PCIEGen2X8通道模式，即在理论上可以提供4GB/s的带宽 速率，而万兆以太网lOGbps转换单位为：
些迴"25GB/S	(4-2)
8	丿
可以看出
4GB/s>1.25GB/s	(4-3)
因此，本文在主机侧的硬件性能是可以满足网络侧lOGbps的吞吐量。
同时以上述接收过程为例，从流程1-7共需要4次存储器写请求，其中包括写 低位地址寄存器，写高位地址寄存器、写使能接收描述符队列、写TAIL寄存器(具 体寄存器定义在下一小节进行详细介绍)，设每次存储器写请求所需时间为8(恋)，一 次传输量为, Windows处理一次DMA同时时间约为20%S ,则进行一次DMA 传输操作理论速度为：
N
V =
丄J + (20 + 0.032)”s	(4_4)
4GB/s
根据公式4-4,当N为1MB时，理论速率约为3703.26MB/S,足以满足lOGbps 的吞吐量。
(2) DMA寄存器逻辑设计
在DMA控制器的设计当中，DMA寄存器模块包含了 DMA控制器的相关控制 功能，比如发起DMA的读写操作，还包含了一些状态信息用来通知上层驱动，通过 不同的寄存器地址区分不同的执行功能。其中本文对BAR0进行设计。空间大小为 1MB, 32位寻址大小。下面详细介绍BAR0空间的寄存器设计。
本文的硬件寄存器地址设置为如下式(4-5)。
52
DMA _ REGISTER _ ADDR = BMO(Ox8()OFOOOO)	( 4-5 )
-\-ChannelAddr(24bit)
+Register A ddr(\ 6bit)
其中 BARO 为基址寄存器地址，ChannelAddr=PORT_OFFSET*QueueNumbe, ChannelAddr代表通道地址，代表不同的收发队列。PORT_OFFSET代表固定值 0x100000, QueueNumber代表队列号，可选0〜2,表示3个队列。PORT_OFFSET是 为了间隔每个队列，让每个队列的控制寄存器有足够的空间。RegisterAddr表示每个 具体的寄存器地址，具体寄存器地址如下表4-4,其中RX代表接收队列对应的BD 信息，TX代表发送队列对应的BD信息。
表4-4基址寄存器功能定义
RegisterAddr
偏移量
描述信息
DMA REG RX BASE LOW
0x0000
设置RX队列低32位
DMA REG RX BASE HIGH
0x0200
设置RX队列高32位
DMA REG RX BD SIZE
0x0400
设置RX队列描述符的大小
DMA REG RX BD HEAD
0x0600
设置RX队列中接收BD的Head指针
DMA REG RX BD TAIL
0x0800
设置RX队列中接收BD的Tail指针
DMA REG RX CTRL
OxOAOO
使能RX队列
DMA REG TX BASE LOW
0x1000
设置TX队列低32位
DMA REG TX BASE HIGH
0x1200
设置TX队列高32位
DMA REG TX BD SIZE
0x1400
设置TX队列描述符的大小
DMA REG TX BD HEAD
0x1600
设置TX队列中发送BD的Head指针
DMA REG TX BD TAIL
0x1800
设置TX队列中发送BD的Tail指针
DMA REG TX CTRL
OxlAOO
使能TX队列
下面举一个例子介绍硬件寄存器地址的计算过程，假设要找到2号队列发送BD 的Tail寄存器。BAR0基地址为0x800F0000 ,根据上述公式，2号队列的 ChannelAddr=0xl00000*2=0x200000 , DMA_REG_TX_BD_TAIL=Ox 1800 ,则 DMA_REG_TX_BD_TAIL 的地址=Ox800FOOOO+Ox300000+0x 1800=0x802F 1800, 0 号 队列的发送BD的Tail寄存器为0x800F1800o
(3) 中断控制逻辑设计
中断控制模块与DMA写操作模块以及PCIE IP核相连，当一次写操作完成后， 向PCIE IP核发出中断请求，而PCIE IP核通过MSI中断机制向主机端发出中断信 号。
53
中断控制模块的主要端口以及定义如表4-5所示。dma_write_done_l~3信号表 示3个队列完成写操作的中断信号；pcie_int_out_l〜3和pcie_int_rdy_l〜3信号连接 着PCIEIP核，对应着3个接收队列，每个队列有自己的中断信号和返回通知信号； int_free信号表示中断释放。
表4-5中断控制模块信号描述
信号名称
位宽/bit
方向
描述
dma write done 1 〜3
1
I
各队列DMA写操作完成信号
int free
1
I
中断释放信号
pcie int out 1 〜3
1
0
向PCIE IP核发出中断请求信号
pcie_int_rdy_ 1 〜3
1
I
为1表示PCIEIP核成功发送MSI中断 信号
中断控制模块的状态机如图4-23所示，其中包括4个状态:
INT_IDLE闲置状态：该状态为初始状态。状态机在该状态下等待DMA写操作 的传输完成，当有队列的DMA传输工作完成后，便进入下一状态INT_SEND状态。
INT_SEND中断请求发送状态：该状态为中断信息发送状态。状态加在该状态 下向PCIE IP核发出中断请求，发送成功后进入下一状态INT_WAITO
INT_WAIT中断请求发送完成状态：该状态为中断请求发送完成后，等待PCIE IP核返回pcie_int_rdy_l〜3信号。当PCIE IP核成功发送MSI中断信息后，会以 pcie_int_rdy_l〜3为信号通知状态机进入下一状态INT_BUSY=
INT_BUSY中断忙碌状态：该状态表示主机端正在处理中断，状态机在此状态 下不会发出新的中断请求。当主机端完成响应后，将int_&ee信号置1,通知状态机 跳转到INTJDLE状态。
图4-23中断控制模块状态转移图
54
