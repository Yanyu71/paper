4.1.1TX通道
WIS service interface or PMA service interface
图4-1 TX通道发送数据
如图4-1所示[321,从MAC层发送过来的数据经过XGMII接口变为64bits的数 据(XGMn_TXD[63:0J)和 8bits 的控制信号(XGMII_TXC[7:0])发送到 64b/66b 编码 器。其中控制信号的每lbit对应8bits的数据。当控制信号为0时，表示8bits为用 户数据，即当XGMII_TXC[0]=0时,XGMII_TXD[7:0]为用户数据。控制信号为1时， 表示8bits为控制字符。经过编码后将66bit的数据进行扰码以保证直流平衡，然后 将数据发送到TX变速箱进行位宽转换，最后发送到PMA层。
(1) 64b/66b 编码器
首先，64b/66b编码的基本元素由2位同步头和64位数据组成。一个块被指定
36
为2位同步，后跟64位数据。如图4-2所示。
Block
2bit同步头
64bit数据
图4-2 64b/66b编码块
同步头可以分为三类：控制、数据和无效。根据sync报头的值，后面的64位数 据将被相应地解释。同步头为10时，数据被视为控制块，同步头为01时，数据被 视为用户数据。00或11个同步头无效。
有效的同步头为10或01的原因是64b/66b编码需要保证最大游程长度低于某 个值，从而允许时钟恢复电路正常工作El。游程长度描述为连续1或0的数目。考 虑64位数据要么全部为1,要么全部为0的情况。如果允许00或11为同步头，则 66位可能全部为1或全部为0,则游程长度超过了 66位。将有效的同步头限制为01 或10可以保证以66位的间隔进行转换，即使数据都是1或0,仍然可以保证最大 的游程长度。除此之外，01或10同步头还用于接收端的同步。
本文采用查找表法完成64b/66b编码器的功能。64b/66b编码器根据8bits的控 制信号进行判断，当其为0时，64bits使用D字符表示用户数据；当其不全为0时， 64bits使用C、S、T、O等控制字符表示。其中S表示数据帧的开始，O表示有序 集。由于64bit数据由两个32bit数据组合而成，S和O只会出现在64bit的第一字节 和第五个字节。T表示数据帧的结束，可以出现在64bit的任意字节。如附图1所示。 此时根据表查找64bit的具体组合方式并添加上指定的Block Type Field,随后在添 上10的同步头。之后再按照附图2进行控制字符的编码。
在对64b/66b编码器进行设计时，由于PCS模块的两端时钟频率一致，而在 64b/66b编码器中需要加入2bit,显然两端的速率不能匹配。需要每经过32个时钟 周期后停顿一次编码操作，即再经过32次加入2bit数据后，停顿发送一次64bit, 正好弥补了之前多发送的32次的2bit数据，这样便可以保证速率一致。
(2) 扰码器
64b/66b编码方式相比于8b/10b编码方式提高了编码效率，但缺点是不能保证 直流平衡，即不能避免1和0连续的出现。为了保证直流平衡，采用对64b/66b编码 后的数据进行扰码。扰码器中普遍采用如下多项式进行扰码。
G(x) = 1 + x39 + x58	(4-1)
对应的编码电路如图4-3所示［32］。
37
图4-3扰码电路
由上图可知，扰码电路由58个D触发器(SO〜S57表示)和两个异或门组成。 每个D触发器输出的结果用X1-X58表示。具体工作原理是：在某一状态下数据进 入，将S38和S57输出的结果X39和X58进行异或，将结果X0与输入的数据继续 进行异或作为输出结果。基于以上原理，通过VHDL硬件描述语言完成RTL级的代 码设计。
(3) TX变速箱
64bit的数据经过扰码后与2bit的同步头组合进入TX变速箱做位宽转换。由于 PMA层的位宽为64bit,扰码后输出位宽为66bit, TX变速箱需要做速率匹配，即在 同一时钟频率下将66bit位宽转换成64bit位宽发送到PMA层。本文釆用最小公倍 数法则：66X32-64X33=2112,即TX变速箱通过一个2112bit位宽的先入先出队列 (First Input First Output, FIFO)将收到66bit数据进行缓存，每收32个正好可发33 个64bit数据。如图4-4所示。
图4-4 TX变速箱位宽转换图
38
